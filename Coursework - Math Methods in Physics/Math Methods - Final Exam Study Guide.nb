(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1284083,      27272]
NotebookOptionsPosition[   1198541,      25869]
NotebookOutlinePosition[   1200375,      25916]
CellTagsIndexPosition[   1200155,      25906]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Week 1 Homework:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7532983890103436`*^9, 3.7532983949354506`*^9}},
 FontSize->18,ExpressionUUID->"9402daa7-aa16-4a9f-be6b-64614cafcbef"],

Cell[CellGroupData[{

Cell[TextData[{
 "P1 .1 .13\nIf you invest a dollar at 6% interest compounded monthly  , it \
amounts to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", "1.005", ")"}], 
    SuperscriptBox["", "n"]], TraditionalForm]],ExpressionUUID->
  "80b13299-d7c8-4042-8538-621067e49adb"],
 " after n months. If you invest $10 at the beginning of each month for 10 \
years (120 months) how much will you have at the end of 10 years? "
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7436196334421463`*^9, 3.743619812957512*^9}},
 FontSize->18,ExpressionUUID->"41532335-8cde-4da6-b49b-afda30adeca7"],

Cell[TextData[{
 "We can see this as a geometric series where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "1.005"}], ",", 
    RowBox[{"r", "=", "1.005"}]}], TraditionalForm]],ExpressionUUID->
  "b4290cf8-02e7-4f28-a029-543f5d5af134"],
 "\nThe formula to find the n-sum is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "n"], "=", 
    RowBox[{"a", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["r", "n"]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "527bbdac-1c81-4ed1-bc2f-b41125ad2b77"],
 "\nHere, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "120"}], TraditionalForm]],ExpressionUUID->
  "a0f9304f-76ae-4988-b97c-db7ef38e395b"],
 " months.\nNOTE: The key is that we invest an additional $10 every time, so \
each sum is multiplied by $10. \n\tAlso, \[OpenCurlyDoubleQuote]a\
\[CloseCurlyDoubleQuote] in this formula represents ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "1"], TraditionalForm]],ExpressionUUID->
  "866042da-eed1-461b-826d-ea818629c682"]
}], "Text",
 CellChangeTimes->{{3.753298450260537*^9, 3.7532984565747013`*^9}, {
  3.7532994716800456`*^9, 3.7532995440983944`*^9}, {3.7533000080286922`*^9, 
  3.7533000119242773`*^9}, {3.7533000476930695`*^9, 3.7533001037432146`*^9}},
 FontSize->18,ExpressionUUID->"79607323-98b2-4f1b-bdd2-14d0701e653e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "*", 
  RowBox[{"(", 
   RowBox[{"1.005", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["1.005", "120"]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "1.005"}], ")"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7532995313604493`*^9, 3.753299564768134*^9}, {
  3.7532997969001875`*^9, 3.7532998117864013`*^9}, {3.753299842439404*^9, 
  3.7532998857077227`*^9}, {3.753299920600466*^9, 3.753299941171439*^9}},
 FontSize->18,
 CellLabel->
  "In[341]:=",ExpressionUUID->"6a6b8bbe-eb57-4dba-b8df-7b19b3dbb945"],

Cell[BoxData["1646.9874354049334`"], "Output",
 CellChangeTimes->{
  3.753299886582383*^9, {3.753299928583129*^9, 3.753299941698064*^9}, 
   3.753329758281063*^9},
 FontSize->18,
 CellLabel->
  "Out[341]=",ExpressionUUID->"9e1c6668-9d26-4793-bcc7-771c7fa7fbe6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "*", 
  RowBox[{"Sum", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "1.005", ")"}], "i"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0120"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753297976616176*^9, 3.7532979835855527`*^9}, {
  3.7532980825360384`*^9, 3.7532981695441785`*^9}, {3.753299893956702*^9, 
  3.753299894166112*^9}},
 FontSize->18,
 CellLabel->
  "In[342]:=",ExpressionUUID->"d3f1aaf6-1155-402b-aa36-a1f521d1f714"],

Cell[BoxData["1646.9874354049348`"], "Output",
 CellChangeTimes->{{3.7532981190454187`*^9, 3.75329816996904*^9}, 
   3.753299894757572*^9, 3.753329758377818*^9},
 FontSize->18,
 CellLabel->
  "Out[342]=",ExpressionUUID->"a8cab4da-72c9-4fd1-99db-a2b82a1a55cc"]
}, Open  ]],

Cell[TextData[{
 "We can apply geometric series to finding definite fractions for certain \
repeating decimals. \nThe formula to find the total sum of the geometric \
series is by taking the limit:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"lim", " ", "[", 
     RowBox[{
      SubscriptBox["S", "n"], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}], "=", 
    RowBox[{"a", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "r"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "f161593b-465a-4f9b-9904-6468f0f23e96"],
 "\nFor example, for 0.55555\n\twe have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "0.5"}], ",", 
    RowBox[{"r", "=", 
     RowBox[{"1", "/", "10"}]}]}], TraditionalForm]],ExpressionUUID->
  "c47c985d-00e3-4e6c-b8d5-feeb57f9d917"]
}], "Text",
 CellChangeTimes->{{3.753300129556949*^9, 3.7533004043153615`*^9}, {
  3.7533004840330553`*^9, 3.7533005459289103`*^9}},
 FontSize->18,ExpressionUUID->"8afde112-06bd-4472-979f-c06711c98bc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "2"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "10"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.753300408801375*^9, 3.753300424386416*^9}, {
  3.7533004568139133`*^9, 3.7533004629365067`*^9}},
 FontSize->18,
 CellLabel->
  "In[343]:=",ExpressionUUID->"353759ec-05e3-47d4-9511-4ad3b1cb9e6b"],

Cell[BoxData[
 FractionBox["5", "9"]], "Output",
 CellChangeTimes->{3.753300463460131*^9, 3.7533297584147053`*^9},
 FontSize->18,
 CellLabel->
  "Out[343]=",ExpressionUUID->"6142e7bd-66bd-4dc5-9a1d-d4c1ee936148"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P1 .6 .24 \nUse the ratio test to determine if  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "\[Infinity]"], 
    StyleBox[
     FractionBox[
      SuperscriptBox["3", 
       RowBox[{"2", " ", "n"}]], 
      SuperscriptBox["2", 
       RowBox[{"3", " ", "n"}]]],
     FontSize->24]}], TraditionalForm]],ExpressionUUID->
  "5a4d7c6c-983b-46a7-83bc-fe06e9e2d5b2"],
 "   converges"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.743622663250469*^9, 3.7436227736676702`*^9}},
 FontSize->18,ExpressionUUID->"fb9cc36b-29a8-4a7d-93d9-d297ab4df3d6"],

Cell[TextData[{
 "We can apply the ratio test of doing ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Limit", "[", 
     RowBox[{
      FractionBox[
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], 
       SubscriptBox["a", "n"]], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "e493d61a-c178-4497-aed3-8442ff28a977"]
}], "Text",
 CellChangeTimes->{{3.753300701873623*^9, 3.753300732023017*^9}, {
  3.7533007671770306`*^9, 3.753300775035055*^9}, {3.7533008303711147`*^9, 
  3.753300845067787*^9}},
 FontSize->18,ExpressionUUID->"096511f0-2223-420d-a525-3073317779ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    FractionBox[
     SuperscriptBox["3", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]}]], 
     SuperscriptBox["2", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]}]]], 
    FractionBox[
     SuperscriptBox["3", 
      RowBox[{"2", "n"}]], 
     SuperscriptBox["2", 
      RowBox[{"3", "n"}]]]], ",", 
   RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75330058628405*^9, 3.7533005914442253`*^9}, {
  3.753300624950321*^9, 3.7533006496841555`*^9}},
 FontSize->18,
 CellLabel->
  "In[344]:=",ExpressionUUID->"69bdde7c-3d74-438a-9380-a051977c0649"],

Cell[BoxData[
 FractionBox["9", "8"]], "Output",
 CellChangeTimes->{3.7533006505019665`*^9, 3.7533297584526043`*^9},
 FontSize->18,
 CellLabel->
  "Out[344]=",ExpressionUUID->"f7aa7c55-8cad-45a0-bce2-39c6cbd76ab8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P1 .13 .20\nFind the first 3 terms in the Maclaurin series for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], TraditionalForm]],ExpressionUUID->
  "149ff12c-132b-46f0-b41e-d7e8552d973f"],
 ". Explicitly generate the sum defined in Eq. 1.12.9 , first by writing out \
each term. Use /.x->0 to evaluate expressions at zero.  Do it again using \
Sum; you will have to write an expression which evaluates to the nth term. \
Finally, check your result with Series. "
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.743707553308277*^9, 3.7437076305849466`*^9}, {
   3.74370804412449*^9, 3.7437081254100113`*^9}, {3.743708525807895*^9, 
   3.7437086199614744`*^9}, 
   3.747324732944277*^9},ExpressionUUID->"6e7cffd8-e404-414e-98bc-\
f3424df1d1ef"],

Cell[TextData[{
 "A MacLaurin Series is a Taylor Series evaluated at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "e2c0a035-9742-4c70-8cad-5a47eb0e82ba"],
 "\nThe formula is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     UnderoverscriptBox[
      RowBox[{"\[Sum]", " "}], 
      RowBox[{"n", "=", "0"}], "\[Infinity]"],
     FontSize->24], 
    StyleBox[" ",
     FontSize->24], 
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["f", 
        RowBox[{"(", "n", ")"}]], "(", 
       SubscriptBox["x", "0"], ")"}], 
      RowBox[{"n", "!"}]],
     FontSize->24], 
    SuperscriptBox[
     StyleBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "0"]}], ")"}],
      FontSize->24], "n"], 
    StyleBox["  ",
     FontSize->24]}], TraditionalForm]],ExpressionUUID->
  "c4a81768-df88-4bf0-8498-431622f2c884"],
 "\nFirst we define a variable to represent our function:"
}], "Text",
 CellChangeTimes->{{3.753300877014378*^9, 3.753300901095995*^9}, {
  3.7533009770429487`*^9, 3.753301064264803*^9}, {3.7533012760241375`*^9, 
  3.753301285713232*^9}, {3.75330144372468*^9, 
  3.7533014558352647`*^9}},ExpressionUUID->"52fbac1f-9286-4656-95eb-\
302cc348faf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"func", "=", 
  RowBox[{
   SuperscriptBox["e", "x"], 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.753301169945779*^9, 3.7533012101492567`*^9}, {
  3.7533012441393805`*^9, 3.753301244960187*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"d07c6298-5691-45a3-b225-bfcbbcee3fc6"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["e", "x"], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.75330124548977*^9, 3.75332975848053*^9},
 CellLabel->
  "Out[345]=",ExpressionUUID->"8964c87f-3741-44f9-a2a6-36ac5593b43b"]
}, Open  ]],

Cell["Explicitly computing the first 3 terms: ", "Text",
 CellChangeTimes->{{3.753301522308547*^9, 
  3.7533015409437275`*^9}},ExpressionUUID->"c1cbf4de-0260-440b-8ce2-\
bce6fe1e15db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a0", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"func", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0"}], "}"}]}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], ")"}], 
    RowBox[{"0", "!"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "0"}], ")"}], "0"]}]}]], "Input",
 CellChangeTimes->{{3.7533011074413223`*^9, 3.7533011129386234`*^9}, {
  3.753301222282817*^9, 3.753301377160663*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"76eb175d-df29-4e6e-ae69-174468b518cf"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.753301293464509*^9, 3.753301324368723*^9}, 
   3.753301364972221*^9, 3.753329758521428*^9},
 CellLabel->
  "Out[346]=",ExpressionUUID->"715d5de0-268a-43e5-9054-7b83ebdd44d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"func", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], ")"}], 
    RowBox[{"1", "!"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "0"}], ")"}], "1"]}]}]], "Input",
 CellChangeTimes->{{3.753301300278294*^9, 3.753301345814413*^9}, {
  3.753301379881386*^9, 3.753301384823159*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"2b6256ca-8314-434c-8d82-58eb85ee912e"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.753301304134018*^9, 3.7533013463081226`*^9}, 
   3.753301385192144*^9, 3.7533297585533743`*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"aa489598-aada-412d-b170-32ca42ba17f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a2", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"func", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], ")"}], 
    RowBox[{"2", "!"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "0"}], ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.753301307439153*^9, 3.753301309855687*^9}, {
  3.7533013876147013`*^9, 3.753301410695956*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"f97847f7-bb83-4628-a820-2d6954e108e5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], " ", 
  RowBox[{"Log", "[", "e", "]"}]}]], "Output",
 CellChangeTimes->{
  3.7533013103144584`*^9, {3.753301394618966*^9, 3.7533014112275257`*^9}, 
   3.753329758593253*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"260a8f9a-a069-44b9-b918-813b8f79f9b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a3", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"func", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], ")"}], 
    RowBox[{"3", "!"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "0"}], ")"}], "3"]}]}]], "Input",
 CellChangeTimes->{{3.7533013968180923`*^9, 3.75330141480401*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"3301651d-8a2f-46fe-909c-cf5391804673"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  SuperscriptBox["x", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "e", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.753301406805348*^9, 3.7533014152517986`*^9}, 
   3.753329758628136*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"d2a63c46-f0c1-46a2-b075-26c17f782f4b"]
}, Open  ]],

Cell["Adding all the terms above, we get our MacLaurin Series: ", "Text",
 CellChangeTimes->{{3.7533015502688255`*^9, 
  3.753301563095535*^9}},ExpressionUUID->"06a8790b-e879-4749-88e0-\
0c7a999965e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MacSeries", "=", 
  RowBox[{"a1", "+", "a2", "+", "a3"}]}]], "Input",
 CellChangeTimes->{{3.753301433098089*^9, 3.753301439510911*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"d0b16433-5d62-49ca-b974-c126ee736869"],

Cell[BoxData[
 RowBox[{"x", "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Log", "[", "e", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "e", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7533015455404353`*^9, 3.753329758670023*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"818be28e-a56e-4816-886b-f0f4981d6bff"]
}, Open  ]],

Cell["Now using Sum to compute the MacLaurin Series: ", "Text",
 CellChangeTimes->{{3.7533018069125834`*^9, 
  3.7533018155804086`*^9}},ExpressionUUID->"d1654faf-14ec-4462-bd8e-\
6a036cb89d8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MacSeriesSum", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"func", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "i"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}], 
      RowBox[{"i", "!"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "0"}], ")"}], "i"]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7533018185604763`*^9, 3.7533018634903207`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"daf678ce-1758-430c-b73a-e4f99ef75cf4"],

Cell[BoxData[
 RowBox[{"x", "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Log", "[", "e", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "e", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.753301849399989*^9, 3.7533018638005223`*^9}, 
   3.7533297587039633`*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"8a130a76-9166-451d-836a-285c2f339974"]
}, Open  ]],

Cell["Using Series[] to check our answer: ", "Text",
 CellChangeTimes->{{3.7533015678957157`*^9, 
  3.753301576915206*^9}},ExpressionUUID->"b0fb1b79-0a62-4141-9c91-\
91bdb1420d9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{"func", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", "Normal"}], "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.753301418702572*^9, 3.753301430266659*^9}, {
  3.7533017777089643`*^9, 3.7533018000060472`*^9}, {3.7533018704467673`*^9, 
  3.7533018759590263`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"631f1666-76fa-4070-9395-4b4b46882fd0"],

Cell[BoxData[
 RowBox[{"x", "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Log", "[", "e", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "e", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.7533014248520985`*^9, {3.753301779686368*^9, 3.753301800529647*^9}, 
   3.753301876474635*^9, 3.753329758734879*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"b18e4b76-9f2e-4d0f-a82e-3ebad0031597"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MacSeries", "\[Equal]", "MacSeriesSum", "\[Equal]", 
  "check"}]], "Input",
 CellChangeTimes->{{3.753301878673726*^9, 3.753301885234223*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"041e939b-c798-4f92-88bc-6105fc6a2251"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7533018857468147`*^9, 3.753329758758787*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"e26ad121-5d7e-4dbf-b530-48dd52ca5c81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P1 .13 .36\nFind the first 3 non-vanishing terms of the Maclaurin series \
for  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "[", "u", "]"}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "u"], 
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["x", "2"]}]]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"1872977e-0bf2-4741-b4bd-8daf23befbda"],
 " \nThis problem illustrates that you can find the series expansion for an \
integral, even if you cannot evaluate the integral in closed f,orm."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.743627690179329*^9, 3.7436278659686327`*^9}, {
   3.7436280648989377`*^9, 3.743628071107645*^9}, {3.743628121825905*^9, 
   3.7436281255663404`*^9}, 3.7436404077735605`*^9, 
   3.7533019532663074`*^9},ExpressionUUID->"0d6c0950-99c2-4c45-8ace-\
741bfb8f5eac"],

Cell["Defining a variable to represent our function: ", "Text",
 CellChangeTimes->{{3.7533021412956448`*^9, 
  3.753302150265647*^9}},ExpressionUUID->"ddfba81c-90a2-40be-b9c5-\
4e1d880b00ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"func", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "2"]}], "]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "u"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753301929506851*^9, 3.7533019396267653`*^9}, {
  3.7533019853804417`*^9, 3.7533019896311183`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"c2bf2658-ea95-4920-bc09-f6e1a7042842"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "u"], 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}]]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.7533020019621096`*^9, 3.753329770564262*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"9a893c41-24bf-4411-b7f0-89743f33f141"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "6"}]], "Input",
 CellChangeTimes->{{3.7533020076509*^9, 3.753302017212372*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"2c3aac9a-2e7e-4f09-a2f2-07f9388cd32f"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.753302017565394*^9, 3.7533297706400213`*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"415fa6da-4537-4328-b7be-9cc093311318"]
}, Open  ]],

Cell[TextData[{
 "Note that the function is in terms of u as the integrals boundaries are \
from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[Rule]", "u"}], TraditionalForm]],ExpressionUUID->
  "b3bf18a3-253a-4386-9943-87e07161daed"],
 "\nThus we derive the function wrt u and do the power series in terms of u \
as well. "
}], "Text",
 CellChangeTimes->{{3.7533021595597672`*^9, 
  3.7533022342291694`*^9}},ExpressionUUID->"34f61c02-d737-49b3-8643-\
ce553e962007"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"func", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "n"}], "}"}]}], "]"}], "/.", 
      RowBox[{"u", "\[Rule]", "0"}]}], 
     RowBox[{"n", "!"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"u", "-", "0"}], ")"}], "n"]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "nterms"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753302019397541*^9, 3.753302133226213*^9}, {
  3.753302205758252*^9, 3.753302206688803*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"341000a8-c08e-4648-90e2-2b83d959bf05"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["u", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["u", "4"], "12"], "+", 
  FractionBox[
   SuperscriptBox["u", "6"], "20"]}]], "Output",
 CellChangeTimes->{{3.7533020643473186`*^9, 3.753302133628095*^9}, 
   3.753329770667976*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"77c79b5c-f007-48ab-a074-224f3f539d06"]
}, Open  ]],

Cell["Using Series[] to check our answer", "Text",
 CellChangeTimes->{{3.7533022394791436`*^9, 
  3.753302245895943*^9}},ExpressionUUID->"094ee078-8e3f-4754-beb6-\
14fb4ffac3cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{"func", ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0", ",", "nterms"}], "}"}]}], "]"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.7533021093949146`*^9, 3.7533021283402786`*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"4bca372d-a7ba-40a5-ada9-cd785f25d85c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["u", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["u", "4"], "12"], "+", 
  FractionBox[
   SuperscriptBox["u", "6"], "20"]}]], "Output",
 CellChangeTimes->{{3.7533021170354548`*^9, 3.7533021291969705`*^9}, 
   3.7533297712045436`*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"a92d5182-52e2-4915-a6bd-f04e0f8d17b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P1 .16 .20\nFind the first 3 terms of the Taylor\[CloseCurlyQuote]s series \
of ",
 Cell[BoxData[
  FormBox[
   RadicalBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "338d2452-1750-4047-8d9d-d5e72e7adfc9"],
 "  valid near x=8.\nMake sure to ",
 StyleBox["not",
  FontVariations->{"Underline"->True}],
 " include O[x-8] terms in your answer, i.e. put a simple expression into the \
input field."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.743703602981121*^9, 3.7437036864123955`*^9}, {
  3.743706884170787*^9, 3.743706912347188*^9}, {3.7437072820848083`*^9, 
  3.7437072971947107`*^9}},ExpressionUUID->"61922bc0-58fe-4c66-9941-\
b9b5677508cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"func", "=", 
  SuperscriptBox["x", 
   RowBox[{"1", "/", "3"}]]}]], "Input",
 CellChangeTimes->{{3.7533294253780937`*^9, 3.7533294474650426`*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"0674afb9-ee9d-4787-88dd-53fe776ff4ff"],

Cell[BoxData[
 SuperscriptBox["x", 
  RowBox[{"1", "/", "3"}]]], "Output",
 CellChangeTimes->{3.7533294504749947`*^9, 3.7533297712314463`*^9},
 CellLabel->
  "Out[358]=",ExpressionUUID->"1a949cad-94f8-4f28-b05e-f132fc8ed791"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TaylorFunc", "[", "n_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"func", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "n"}], "}"}]}], "]"}], "/.", 
     RowBox[{"x", "\[Rule]", "8"}]}], 
    RowBox[{"n", "!"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "8"}], ")"}], "n"]}]}]], "Input",
 CellChangeTimes->{{3.7533293770273995`*^9, 3.7533293831390734`*^9}, {
  3.753329422333289*^9, 3.7533294225058107`*^9}, {3.753329453034155*^9, 
  3.753329483700167*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"2f11b65a-60fd-483e-a5e7-b5a51637cc5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TSeries", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"TaylorFunc", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753329486556529*^9, 3.7533295304362173`*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"7c1c2c2f-b6fa-4468-befa-c172469d65a7"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "8"}], "+", "x"}], ")"}]}], "-", 
  RowBox[{
   FractionBox["1", "288"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "8"}], "+", "x"}], ")"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "8"}], "+", "x"}], ")"}], "3"]}], "20736"]}]], "Output",
 CellChangeTimes->{{3.7533295067535334`*^9, 3.7533295344993906`*^9}, 
   3.753329771275365*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"4405dde1-1fc4-44c4-af39-4818c2b16cc0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P2 .9 .20\nExpress  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      SqrtBox["2"], 
      RowBox[{"\[ImaginaryI]", "-", "1"}]], ")"}], "10"], TraditionalForm]],
  ExpressionUUID->"05f61135-ee88-4b9c-9fb2-113f6205a9d2"],
 "   in x+ \[ImaginaryI] y  ( cartesian) form by expressing the fraction in \
polar form and then calculating the power. Check by brute force calculation \
of the power"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.743819047068395*^9, 3.7438192144570026`*^9}, {
  3.7438193606155324`*^9, 
  3.7438194069837837`*^9}},ExpressionUUID->"5da94672-f115-4577-9de1-\
962742f2fc85"],

Cell["Defining a variable to represent the given fraction: ", "Text",
 CellChangeTimes->{{3.7533298372529373`*^9, 
  3.753329848423112*^9}},ExpressionUUID->"1b8e475e-c362-464e-b3d0-\
fbacb972e5b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ogfrac", "=", 
  FractionBox[
   RowBox[{"Sqrt", "[", "2", "]"}], 
   RowBox[{"\[ImaginaryI]", "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.7533296318431025`*^9, 3.753329647391533*^9}, {
  3.753330235324747*^9, 3.753330235911213*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"5c9780bb-ef8f-4c8a-a78c-eb8e1e1a6702"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", "\[ImaginaryI]"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.753329647876234*^9, 3.75332977130624*^9, 
  3.753330236563435*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"a9e1515b-6ff7-4406-b6b5-997ea34873d6"]
}, Open  ]],

Cell[TextData[{
 "Multiplying our fraction by the complex conjugate to get the denominator to \
have only real numbers.\nNote this is now in Cartesian form, where ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"x", "=", 
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"Sqrt", "[", "2", "]"}]]}], ",", 
     RowBox[{"y", "=", 
      FractionBox["1", 
       RowBox[{"Sqrt", "[", "2", "]"}]]}]}],
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "c1d2eb5b-ea25-48a3-84a5-78b924403168"]
}], "Text",
 CellChangeTimes->{{3.7533298530696917`*^9, 
  3.753329909870783*^9}},ExpressionUUID->"2098ba4e-4c68-40dc-a54f-\
7a159023c8da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frac", "=", 
  RowBox[{"ogfrac", "*", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", "+", "1"}], 
    RowBox[{"\[ImaginaryI]", "+", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.753329650158134*^9, 3.753329704584626*^9}, {
  3.7533302393270483`*^9, 3.7533302410354795`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"b4afbbdc-bb9f-45f4-b232-760fdc3d5f9b"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", "\[ImaginaryI]"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.7533296663727827`*^9, 3.7533297053415985`*^9}, 
   3.7533297713361645`*^9, 3.753330241501255*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"80bef2f9-f0cc-43c9-912d-6bc90aef797d"]
}, Open  ]],

Cell["\<\
Using Abs[] and Arg[] to find the radius and angle of our fraction:\
\>", "Text",
 CellChangeTimes->{{3.7533298728647585`*^9, 3.7533298858968782`*^9}, {
  3.753330093143876*^9, 
  3.7533301176643534`*^9}},ExpressionUUID->"7cd985d9-5c6e-4661-8d14-\
c04c29fbdef6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"Abs", "[", "frac", "]"}]}]], "Input",
 CellChangeTimes->{{3.753329713261468*^9, 3.7533297528086934`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"774f2117-3ec3-4905-8cf4-86e66b7763dd"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.753329727862389*^9, 3.7533297713650827`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"bde5afe1-097f-4fb7-84fa-714595427309"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]", "=", 
  RowBox[{"Arg", "[", "frac", "]"}]}]], "Input",
 CellChangeTimes->{{3.75332972990792*^9, 3.7533297569726086`*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"04244425-baa2-4d13-a4f8-43365b55f6c1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"3", " ", "\[Pi]"}], "4"]}]], "Output",
 CellChangeTimes->{{3.75332974567377*^9, 3.7533297713930387`*^9}},
 CellLabel->
  "Out[364]=",ExpressionUUID->"2092020b-7692-4f93-81ac-3246d2b6530f"]
}, Open  ]],

Cell["\<\
Now that we have the values for r and \[Theta], we can substitute them into \
Euler\[CloseCurlyQuote]s Formula: \
\>", "Text",
 CellChangeTimes->{{3.7533301224973965`*^9, 
  3.753330135524567*^9}},ExpressionUUID->"48795739-27b7-4f6a-a0aa-\
b5d51b591d69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euler", "=", 
  RowBox[{"r", " ", 
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7533297795542207`*^9, 3.753329810412735*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"2b7da69a-98c2-4ba9-920f-e5cb95ce0dc2"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]]], "Output",
 CellChangeTimes->{3.753329819558236*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"04aa8d62-b7e7-4fec-a9ec-e5a597b7fe2d"]
}, Open  ]],

Cell["\<\
The beautiful part of converting into this exponential form is that we can \
exponentiate the 10 easily. \
\>", "Text",
 CellChangeTimes->{{3.7533301447110453`*^9, 
  3.7533301831383142`*^9}},ExpressionUUID->"ebfde6b9-e194-4736-8421-\
b615d993bbf2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"answer", "=", 
  RowBox[{"euler", "^", "10"}]}]], "Input",
 CellChangeTimes->{{3.753330185975688*^9, 3.753330192067399*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"a141992e-e3b4-43a7-8673-557f9d8c6051"],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.7533301927545595`*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"945dfbe1-d7f6-4f76-becb-09d28e00f207"]
}, Open  ]],

Cell["\<\
We can check our answer just by directly computing the 10th power of the \
given fraction: \
\>", "Text",
 CellChangeTimes->{{3.7533301976295643`*^9, 
  3.753330216816231*^9}},ExpressionUUID->"cacce76a-fe8a-4b70-b814-\
6bf8dbbc4008"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "=", 
  RowBox[{
   RowBox[{"(", "ogfrac", ")"}], "^", "10"}]}]], "Input",
 CellChangeTimes->{{3.753330219103116*^9, 3.753330245553402*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"821afeac-13ce-4006-b031-304e6d73939e"],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.753330246163768*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"cb2a2703-04a0-4fb8-9572-80d8d3fd6dd5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P2 .10 .9\nFind all values of ",
 Cell[BoxData[
  FormBox[
   RadicalBox["1", "5"], TraditionalForm]],ExpressionUUID->
  "8448e596-a87b-401b-97b6-7188928a832e"],
 " . Do it first by expressing 1 in polar form and then computing the roots. \
Check your answer by solving ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "5"], "-", "1"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"03cb16b7-b173-49f5-b44f-6aea2c7b73ed"],
 " and using ComplexExpand. The answer should be a list of the 5 fifth roots."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.744636600634424*^9, 3.7446366177809305`*^9}, {
  3.7447233242373033`*^9, 3.7447233263278656`*^9}, {3.7447262196857185`*^9, 
  3.744726243874236*^9}},ExpressionUUID->"14ccc25f-a00e-4b81-bb89-\
4ad4c590fdef"],

Cell["\<\
Like the previous problem, we convert the expression inside the power from \
Cartesian to Polar Form, then to 
Exponential Form using Euler\[CloseCurlyQuote]s Formula. Once it\
\[CloseCurlyQuote]s in exponential form, we can find it\[CloseCurlyQuote]s \
nth-root easily. \
\>", "Text",
 CellChangeTimes->{{3.7533309650930634`*^9, 3.7533310088630857`*^9}, {
  3.753331147952738*^9, 
  3.75333116111753*^9}},ExpressionUUID->"15fa0f84-8277-46e7-8dc7-\
932c40bf6f3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cartform", "=", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"y", " ", "\[ImaginaryI]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7533304271223297`*^9, 3.753330427467409*^9}, {
  3.753331245798145*^9, 3.753331263050025*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"ac7259ed-26dc-4929-846f-3b00ec8c6db8"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.75333126407623*^9, 3.7533828970591307`*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"3caf6b80-f8a6-4eb8-8fe6-4dca0499110e"]
}, Open  ]],

Cell["Using Abs[] and Arg[] to find the radius and angle: ", "Text",
 CellChangeTimes->{{3.7533316754629817`*^9, 
  3.7533316840609927`*^9}},ExpressionUUID->"88465a8a-86ec-405f-a714-\
7449c17cd648"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"Abs", "[", "cartform", "]"}]}]], "Input",
 CellChangeTimes->{{3.753331267978841*^9, 3.7533312826516094`*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"9d818988-f59c-465a-85a3-dd1a9b854bf6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.753331283599079*^9, 3.753334039713525*^9, 
  3.753382897176817*^9},
 CellLabel->
  "Out[578]=",ExpressionUUID->"61e206d4-7b21-4ff7-923b-7298f6cdfbc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]", "=", 
  RowBox[{"Arg", "[", "cartform", "]"}]}]], "Input",
 CellChangeTimes->{{3.7533312851778593`*^9, 3.7533312911179705`*^9}},
 CellLabel->
  "In[579]:=",ExpressionUUID->"24b23c0f-aaa5-4a33-83c3-40a9e4982ab4"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7533312917263365`*^9, 3.7533329729286056`*^9, 
  3.7533828972007504`*^9},
 CellLabel->
  "Out[579]=",ExpressionUUID->"f3e104ad-0d39-453d-a61d-a9ee2830979a"]
}, Open  ]],

Cell[TextData[{
 "We have to keep in mind that there are infinitely many solutions to obtain \
this angle. \nThus we define a general solution to account for any additional \
multiple of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    RowBox[{"\[Pi]", ":"}]}], TraditionalForm]],ExpressionUUID->
  "42e0ce08-9806-4987-afb2-285fd9cec286"]
}], "Text",
 CellChangeTimes->{{3.75333168959715*^9, 3.7533317323381333`*^9}, {
  3.753389478888026*^9, 
  3.753389486807887*^9}},ExpressionUUID->"e15514aa-24cc-4bd4-9a82-\
80e9c1a56b81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]gen", "=", 
  RowBox[{"0", "+", 
   RowBox[{"2", "\[Pi]", " ", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.7533317349202323`*^9, 3.7533317456235757`*^9}, {
  3.753333039080792*^9, 3.75333303944178*^9}, {3.7533330754755487`*^9, 
  3.753333075703833*^9}, {3.7533340168786716`*^9, 3.7533340190438795`*^9}},
 CellLabel->
  "In[580]:=",ExpressionUUID->"49c9ed6e-a580-4e32-9344-f7b171d1b8e1"],

Cell[BoxData[
 RowBox[{"2", " ", "n", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{
  3.753331900385841*^9, 3.753332185206631*^9, {3.7533329591195674`*^9, 
   3.7533329760842113`*^9}, 3.7533330409307995`*^9, 3.7533330764638376`*^9, 
   3.7533340365051007`*^9, 3.753382335933548*^9, 3.7533828972266808`*^9},
 CellLabel->
  "Out[580]=",ExpressionUUID->"bef18557-4f4a-403e-ac58-c8350693642d"]
}, Open  ]],

Cell[TextData[{
 "Then we plug our general \[Theta] and our r into the equation ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "3c62f309-6d4e-40d5-a017-dd510286a489"],
 ", however we take the root by multiplying/dividing\nthe exponent by \
whatever root they want: "
}], "Text",
 CellChangeTimes->{{3.7533894933912888`*^9, 3.7533895289691324`*^9}, {
  3.753389571097311*^9, 
  3.7533895827042756`*^9}},ExpressionUUID->"fd849ea7-6ef0-49ca-982a-\
eceedbd10388"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expform", "=", 
  RowBox[{
   RowBox[{"r", "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "5"}], ")"}]}], " ", 
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Theta]gen", "/", "5"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.753331294683401*^9, 3.7533312948440204`*^9}, {
   3.7533313539847937`*^9, 3.753331368243331*^9}, {3.753331505877329*^9, 
   3.7533315158088226`*^9}, {3.7533318961920257`*^9, 3.753331896419458*^9}, {
   3.7533333200792336`*^9, 3.75333332115839*^9}, {3.7533334212955885`*^9, 
   3.7533334221552963`*^9}, {3.753333992550073*^9, 3.7533340510571966`*^9}, {
   3.7533340867527657`*^9, 3.75333408717365*^9}, {3.753382316030793*^9, 
   3.753382330574877*^9}, 3.753389504619232*^9},
 CellLabel->
  "In[581]:=",ExpressionUUID->"6ab7ecd5-7db1-402c-b79c-852e88976821"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}], 
   "5"]]], "Output",
 CellChangeTimes->{
  3.753331368997314*^9, 3.7533315164630685`*^9, {3.7533318976531563`*^9, 
   3.7533319028173485`*^9}, 3.753332187273131*^9, 3.7533324026961813`*^9, 
   3.7533324672545524`*^9, 3.7533329778544784`*^9, {3.753333053879182*^9, 
   3.753333080062214*^9}, 3.7533333217627316`*^9, 3.753333423306221*^9, {
   3.7533340119706697`*^9, 3.753334051574812*^9}, 3.7533340880383244`*^9, {
   3.7533823313527956`*^9, 3.7533823374115973`*^9}, 3.7533828972585955`*^9},
 CellLabel->
  "Out[581]=",ExpressionUUID->"2a75f560-45de-4b3f-8bb4-069513840a86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"1", "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "5"}], ")"}]}], 
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "2", 
      RowBox[{"\[Pi]", "/", "5"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753489032677562*^9, 3.753489086900545*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"7c44e1d5-e81f-46c0-80ca-e9e3e88b1501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], "+", 
  FractionBox[
   SqrtBox["5"], "4"], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    RowBox[{
     FractionBox["5", "8"], "+", 
     FractionBox[
      SqrtBox["5"], "8"]}]]}]}]], "Output",
 CellChangeTimes->{{3.753489053863867*^9, 3.7534890876605115`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"6e1c65b2-f3b0-4939-8dce-f29743250c53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "5"], "-", "1"}], "\[Equal]", "0"}], ",", "z"}], 
   "]"}], "//", "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7534891000922794`*^9, 3.753489114932728*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"3071b86e-668e-4d3e-9aed-ef869dfd9358"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "-", 
      FractionBox[
       SqrtBox["5"], "4"], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "-", 
         FractionBox[
          SqrtBox["5"], "8"]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "+", 
      FractionBox[
       SqrtBox["5"], "4"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "+", 
         FractionBox[
          SqrtBox["5"], "8"]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "+", 
      FractionBox[
       SqrtBox["5"], "4"], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "+", 
         FractionBox[
          SqrtBox["5"], "8"]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "-", 
      FractionBox[
       SqrtBox["5"], "4"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "-", 
         FractionBox[
          SqrtBox["5"], "8"]}]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753489109864148*^9, 3.753489115498087*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"edcfb808-594b-4c23-8d20-97ea06f47520"]
}, Open  ]],

Cell["Then we use Table[] to iterate through each root: ", "Text",
 CellChangeTimes->{{3.753389588495826*^9, 
  3.7533895970878444`*^9}},ExpressionUUID->"66d0d329-c4a1-446a-bac8-\
5aecf092f3b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"expform", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "4"}], "}"}]}], "]"}], "//", 
   "ComplexExpand"}]}]], "Input",
 CellChangeTimes->{{3.7533320534965005`*^9, 3.753332058574927*^9}, {
  3.753332170590734*^9, 3.753332177788452*^9}, {3.753332446368395*^9, 
  3.753332460662223*^9}, {3.753333300045792*^9, 3.753333300291136*^9}, {
  3.7533333601181116`*^9, 3.7533333604512224`*^9}, {3.753334025475669*^9, 
  3.7533340257191825`*^9}, {3.753334071380864*^9, 3.753334077696974*^9}, {
  3.753382340506355*^9, 3.7533823428251247`*^9}, {3.753382892116347*^9, 
  3.75338289294816*^9}},
 CellLabel->
  "In[582]:=",ExpressionUUID->"195d3b28-d636-4ef8-9354-eddd76a2648c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "+", 
    FractionBox[
     SqrtBox["5"], "4"], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "8"], "+", 
       FractionBox[
        SqrtBox["5"], "8"]}]]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "-", 
    FractionBox[
     SqrtBox["5"], "4"], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "8"], "-", 
       FractionBox[
        SqrtBox["5"], "8"]}]]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "-", 
    FractionBox[
     SqrtBox["5"], "4"], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "8"], "-", 
       FractionBox[
        SqrtBox["5"], "8"]}]]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "+", 
    FractionBox[
     SqrtBox["5"], "4"], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "8"], "+", 
       FractionBox[
        SqrtBox["5"], "8"]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7533321789732823`*^9, 3.7533321901294966`*^9}, 
   3.753332404445512*^9, {3.7533324612985053`*^9, 3.7533324693849*^9}, 
   3.7533333015447836`*^9, 3.7533333614565325`*^9, {3.753334026365245*^9, 
   3.753334094990738*^9}, {3.7533823390562*^9, 3.7533823432719293`*^9}, {
   3.7533828936003757`*^9, 3.7533828972964945`*^9}},
 CellLabel->
  "Out[582]=",ExpressionUUID->"79192994-d903-4fb4-9170-2d88cdb94db7"]
}, Open  ]],

Cell["\<\
Using Thread[] to put the Table[] results in the format of {Re[Z],Im[Z]} for \
us to plot: \
\>", "Text",
 CellChangeTimes->{{3.753389601255718*^9, 
  3.7533896268023815`*^9}},ExpressionUUID->"69c938fa-42b7-43c2-b3fb-\
65cae3e70466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"points", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "roots", "]"}], ",", 
     RowBox[{"Im", "[", "roots", "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753382351614656*^9, 3.753382352367612*^9}, {
  3.7533829004989347`*^9, 3.753382918802998*^9}, {3.7533829732027845`*^9, 
  3.7533829755694556`*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"d624b9a1-d480-4a9a-aa7c-d8f6b0382211"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "+", 
      FractionBox[
       SqrtBox["5"], "4"]}], ",", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "8"], "+", 
       FractionBox[
        SqrtBox["5"], "8"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "-", 
      FractionBox[
       SqrtBox["5"], "4"]}], ",", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "8"], "-", 
       FractionBox[
        SqrtBox["5"], "8"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "-", 
      FractionBox[
       SqrtBox["5"], "4"]}], ",", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["5", "8"], "-", 
        FractionBox[
         SqrtBox["5"], "8"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "+", 
      FractionBox[
       SqrtBox["5"], "4"]}], ",", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["5", "8"], "+", 
        FractionBox[
         SqrtBox["5"], "8"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.753382919492154*^9, 3.7533829760421867`*^9},
 CellLabel->
  "Out[585]=",ExpressionUUID->"4279bcb0-7fc4-4c5b-98bb-b027c6785c89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"points", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7533829219725246`*^9, 3.7533829431361976`*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"ec7559df-4b12-4d32-ad2e-8cc3bb395aca"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {0.30901699437494745`, 
      0.9510565162951535}, {-0.8090169943749475, 
      0.5877852522924731}, {-0.8090169943749475, -0.5877852522924731}, {
      0.30901699437494745`, -0.9510565162951535}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.8090169943749475, 1.}, {-0.9510565162951535, 
   0.9510565162951535}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753382944036783*^9, 3.7533829784787145`*^9},
 CellLabel->
  "Out[586]=",ExpressionUUID->"1bca6f42-12bd-4a0c-a4dc-4bc77fd14a8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P2 .14 .4
Evaluate  Log[\[ImaginaryI]-1] in x+ \[ImaginaryI] y (Cartesian) form , first \
by converting to polar form, and then by using ComplexExpand\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7439561382735796`*^9, 3.7439561607960176`*^9}, {
  3.743956202642629*^9, 3.7439562218380823`*^9}, {3.7439562532839274`*^9, 
  3.7439562961452513`*^9}, {3.74559323881145*^9, 
  3.745593240125458*^9}},ExpressionUUID->"c84a0ae5-c46d-46db-b6fe-\
1fbcde21e060"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]}]], "Input",
 CellChangeTimes->{{3.753333677027001*^9, 3.7533336815528607`*^9}, {
  3.753333862851057*^9, 3.7533338716036243`*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"a2653517-d3d5-40ed-89d9-892d59908db0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.7533336895604534`*^9, 3.753333873792817*^9},
 CellLabel->
  "Out[451]=",ExpressionUUID->"757c0d2a-9cc1-4524-bc15-d86c23659f1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"Abs", "[", "eq", "]"}]}]], "Input",
 CellChangeTimes->{{3.753333697122235*^9, 3.7533337025856295`*^9}},
 CellLabel->
  "In[452]:=",ExpressionUUID->"df284608-60b1-4ee4-b2e2-556aa035e598"],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.7533337032648125`*^9, 3.7533338782468634`*^9},
 CellLabel->
  "Out[452]=",ExpressionUUID->"250a50ac-ba6d-4e36-bad9-9f5c7643b0a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]", "=", 
  RowBox[{"Arg", "[", "eq", "]"}]}]], "Input",
 CellChangeTimes->{{3.753333691359683*^9, 3.7533336944902725`*^9}},
 CellLabel->
  "In[453]:=",ExpressionUUID->"ecafb919-7cad-45f9-a810-9802390eb230"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]"}], "4"]], "Output",
 CellChangeTimes->{3.75333370558968*^9, 3.7533338800091515`*^9},
 CellLabel->
  "Out[453]=",ExpressionUUID->"3030e706-47b4-4e29-9bc3-a409c3d56ec8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expform", "=", 
  RowBox[{"r", " ", 
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.753333708166741*^9, 3.7533337212656918`*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"8f314c11-b01d-4c5b-b71e-62fb8c5abe1e"],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]], "Output",
 CellChangeTimes->{3.75333372198181*^9, 3.753333911127642*^9},
 CellLabel->
  "Out[454]=",ExpressionUUID->"fff13b76-2ec9-43ba-aad4-22ed5f8bd1f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logform", "=", 
  RowBox[{
   RowBox[{"Log", "[", "r", "]"}], "+", 
   RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]}]}]], "Input",
 CellChangeTimes->{{3.753333814047535*^9, 3.7533338360796013`*^9}, {
  3.7533339462615795`*^9, 3.7533339503705587`*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"831e7b5c-071e-45ed-89e7-d3df82d7ef98"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"], "+", 
  FractionBox[
   RowBox[{"Log", "[", "2", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.753333950931059*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"c364f598-af85-4bee-9dc6-be6640e995e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "=", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"\[ImaginaryI]", "-", "1"}], "]"}], "//", 
   "ComplexExpand"}]}]], "Input",
 CellChangeTimes->{{3.753333972709868*^9, 3.7533339849900017`*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"40c9c66f-d0f9-4596-a944-fef7d5036b62"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"], "+", 
  FractionBox[
   RowBox[{"Log", "[", "2", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.753333979221422*^9, 3.75333398545975*^9}},
 CellLabel->
  "Out[459]=",ExpressionUUID->"2b50c073-4a03-41a9-b45e-2685cbdc558e"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"651730ea-3ccb-4ce0-a2d1-e9de25b76672"],

Cell[TextData[StyleBox["\n\n\n\nWeek 2 Homework ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.753382044643317*^9, 3.753382048810213*^9}, {
  3.753382099076787*^9, 
  3.7533820995415444`*^9}},ExpressionUUID->"1d15b5c7-a0e0-4473-bb09-\
75055fa79161"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wk2.P1\nFind  all of the square roots of \[ImaginaryI]. Do it by explicitly \
converting \[ImaginaryI] into polar form ( with an additional factor of 1=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", "\[Pi]", " ", "n", " ", "\[ImaginaryI]"}]], 
   TraditionalForm]],ExpressionUUID->"a468dc0b-1b60-4695-8cbc-50a1f277bd1f"],
 " ) and then evaluating the result. Check using ComplexExpand. Your answer \
should be a list containing the square roots."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7446532202515078`*^9, 3.744653278825811*^9}, {
  3.7446533214809904`*^9, 3.744653341403764*^9}, {3.744653952843197*^9, 
  3.74465395606291*^9}, {3.744654041608364*^9, 3.744654108219079*^9}, {
  3.7476041520050173`*^9, 3.7476041779727592`*^9}, {3.7476136140056734`*^9, 
  3.747613615276894*^9}},
 CellTags->"Wk2.P1",ExpressionUUID->"00f8721f-15d7-42d7-a776-9e07c808cba5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cartform", "=", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"y", " ", "\[ImaginaryI]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7533822385814285`*^9, 3.7533822474597178`*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"790ea452-1dc4-4edd-b14e-f5ed0f0caf3a"],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.753382248074054*^9, 3.7533830442487497`*^9},
 CellLabel->
  "Out[589]=",ExpressionUUID->"fe1a6476-d293-42b7-8640-e796b5a07adb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r", "=", 
  RowBox[{"Abs", "[", "cartform", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"Arg", "[", "cartform", "]"}]}]}], "Input",
 CellChangeTimes->{{3.753382252451376*^9, 3.753382261637785*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"90b8f54a-a1e5-4e94-a676-87ac26802d73"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7533822622152386`*^9, 3.753382741294571*^9, 
  3.753383044367606*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"b21b410d-5223-42da-a165-1ebdcbbfabbb"],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.7533822622152386`*^9, 3.753382741294571*^9, 
  3.7533830443715944`*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"b1fd5e58-9b92-44d4-8cf8-ec6e93bb87b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]gen", "=", 
  RowBox[{"\[Theta]", "+", 
   RowBox[{"2", "\[Pi]", " ", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.753382274073536*^9, 3.7533822758677406`*^9}, {
  3.7533824015953507`*^9, 3.753382404663188*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"da0606c6-0842-45a1-9d67-55cb04e16ee1"],

Cell[BoxData[
 RowBox[{
  FractionBox["\[Pi]", "2"], "+", 
  RowBox[{"2", " ", "n", " ", "\[Pi]"}]}]], "Output",
 CellChangeTimes->{3.753382453774845*^9, 3.7533827428115172`*^9, 
  3.753383044396529*^9},
 CellLabel->
  "Out[592]=",ExpressionUUID->"05627c5b-f54c-42db-8f60-822af530ef4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expform", "=", " ", 
  RowBox[{
   RowBox[{"r", "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}]}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"\[Theta]gen", " ", 
      RowBox[{"\[ImaginaryI]", " ", "/", "2"}]}]}]]}]}]], "Input",
 CellChangeTimes->{{3.7533824594008365`*^9, 3.7533824990647936`*^9}, {
  3.753382539961463*^9, 3.7533825577488675`*^9}, {3.753382603042803*^9, 
  3.7533826049985905`*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"1e054d5b-499b-4c0c-bf17-c2dd09044b52"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "+", 
     RowBox[{"2", " ", "n", " ", "\[Pi]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7533824737983136`*^9, 3.7533824996691523`*^9}, {
   3.753382550933088*^9, 3.7533825582754574`*^9}, 3.753382605795411*^9, 
   3.7533827442596817`*^9, 3.7533830444204636`*^9},
 CellLabel->
  "Out[593]=",ExpressionUUID->"af45f95c-52c7-4ea0-b878-a04efdb31d0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"expform", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
   "ComplexExpand"}]}]], "Input",
 CellChangeTimes->{{3.7533824766476936`*^9, 3.7533825093353024`*^9}, {
  3.75338261115014*^9, 3.7533826149629083`*^9}, {3.7533827475558662`*^9, 
  3.753382762042141*^9}, {3.753383018786912*^9, 3.753383019262638*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"c982576a-0660-4151-8130-a6a60fa11db3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "\[ImaginaryI]"}], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[ImaginaryI]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753382504460335*^9, 3.753382512971583*^9}, 
   3.753382560929394*^9, {3.7533826085879784`*^9, 3.753382615732844*^9}, {
   3.753382746004978*^9, 3.753382762681395*^9}, {3.753383020034286*^9, 
   3.753383044454373*^9}},
 CellLabel->
  "Out[594]=",ExpressionUUID->"9ed7a46f-8aed-40b5-8bba-ce58dacb9708"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"points", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "roots", "]"}], ",", 
     RowBox[{"Im", "[", "roots", "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7533830163663206`*^9, 3.7533830320057325`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"9f9c19dc-89c6-44a3-9738-b2091faf1ed9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7533830325638275`*^9, 3.7533830444902773`*^9}},
 CellLabel->
  "Out[595]=",ExpressionUUID->"a74cf91b-c81b-45b5-88f0-19ab051d38ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"points", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75338303409274*^9, 3.7533830421380033`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"ffb27fec-d916-45e1-991c-f0c248e3ef87"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.7071067811865476, 
      0.7071067811865476}, {-0.7071067811865476, -0.7071067811865476}}]}, \
{}}, {}, {}, {}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.7071067811865476, 0.7071067811865476}, {-0.7071067811865476,
    0.7071067811865476}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7533830445790405`*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"86985e09-0e41-4eda-812c-d2e9738e66cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wk2.P2\nFind",
 StyleBox[" ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ImaginaryI]", "\[ImaginaryI]"], TraditionalForm]],
  FontSize->24,ExpressionUUID->"18549e7b-8420-4b02-bb43-af03eb968881"],
 " . Do it by explicitly converting each term into polar form and then \
evaluating the result. Check using ComplexExpand."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.744657115796788*^9, 3.744657130328439*^9}, {
  3.7446636118828583`*^9, 3.7446636241532373`*^9}, {3.747604228316798*^9, 
  3.7476042713857913`*^9}, {3.7476135853900356`*^9, 3.7476135856927056`*^9}},
 CellTags->"Wk2.P2",ExpressionUUID->"526f47ce-033b-4d1e-96d4-4d3ab5a794ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cartform", "=", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"y", " ", "\[ImaginaryI]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7533836991286325`*^9, 3.75338371016416*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"0166034b-0f04-4cbb-86c7-e14b9093839a"],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.753383710854273*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"4bd147ff-f0d1-43b5-a694-30dc9a2d9d37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r", "=", 
  RowBox[{"Abs", "[", "cartform", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"Arg", "[", "cartform", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7533837140098352`*^9, 3.7533837332597136`*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"24e96973-b75e-497f-a656-5095eec329cf"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.753383733791467*^9, 3.7533838169290247`*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"f7a65aee-4f01-48b6-b2c8-770e54d2eee5"],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.753383733791467*^9, 3.7533838169330373`*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"390d8154-114e-44ec-8e47-32d510f31fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expform", "=", 
  RowBox[{
   RowBox[{"r", "^", "\[ImaginaryI]"}], " ", 
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "\[Theta]", " ", "\[ImaginaryI]"}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.753383737967184*^9, 3.753383839016963*^9}},
 CellLabel->
  "In[610]:=",ExpressionUUID->"22bf702e-4ad4-497a-a40d-d26258afe0d2"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], "/", "2"}]]], "Output",
 CellChangeTimes->{{3.753383772834234*^9, 3.753383839573519*^9}},
 CellLabel->
  "Out[610]=",ExpressionUUID->"f396bd11-29db-4dd0-9d3a-acdb1f8ed666"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"\[ImaginaryI]", "^", "\[ImaginaryI]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7533837752737207`*^9, 3.753383788641942*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"a862a750-d8a1-4988-ac41-b537be94d846"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], "/", "2"}]]], "Output",
 CellChangeTimes->{{3.7533837891844916`*^9, 3.7533838412181005`*^9}},
 CellLabel->
  "Out[611]=",ExpressionUUID->"66d03499-b8f3-476e-aef9-bbb266bca245"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P2 .17 .26\nFind ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[VerticalSeparator]", 
    StyleBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
       "\[ImaginaryI]"}], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", "2"}]],
     FontSize->24], "\[VerticalSeparator]"}], TraditionalForm]],
  ExpressionUUID->"a6abfae3-2c3a-46a2-904e-9851d5a56a48"]
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7447297997994246`*^9, 3.7447299108330297`*^9}},
 CellTags->{
  "Problem", 
   "P2.17.26"},ExpressionUUID->"f8e7c35b-3c3b-4b56-8d95-5cdf9ebd5143"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", "\[ImaginaryI]"}], 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", "2"}]], 
  "]"}]], "Input",
 CellChangeTimes->{{3.75338390704804*^9, 3.753383907426054*^9}, {
  3.7533839750056276`*^9, 3.75338399174901*^9}},
 CellLabel->
  "In[612]:=",ExpressionUUID->"3d8b4437-3927-4bd9-ada8-99f20b7ef7bb"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7533839923684125`*^9},
 CellLabel->
  "Out[612]=",ExpressionUUID->"079bc8a7-e8f7-4fb1-9aee-79cce258efae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P2 .16 .8\nFind the impedance of the circuit in the figure below. A circuit \
is said to be in resonance if Z is real and \[Omega]>0; find the resonant \
frequency ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "res"], TraditionalForm]],ExpressionUUID->
  "49845b79-1522-43d3-b6fb-0dec4ce3dc5d"],
 " in terms of R, L, and C ( treating these as symbols, not numbers) . You \
can use the fact that parallel and series combinations of complex impedances \
obey the same formulas as parallel and series combinations of resistors. For \
numerical values R=50 ohms, L=5 milli Henrys and C=0.1 micro Farad, make a \
plot of  Abs[Z] and Arg[Z]"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7460643750228357`*^9, 3.746064507296578*^9}, 
   3.7460661894187813`*^9, {3.7460663301218395`*^9, 3.746066330778163*^9}, {
   3.746066413943493*^9, 3.7460664850512433`*^9}, {3.7460665229362164`*^9, 
   3.7460665294135437`*^9}, {3.7460665992945566`*^9, 3.746066617132182*^9}, {
   3.74606761585737*^9, 3.746067616198019*^9}, {3.746068191217677*^9, 
   3.7460682031284075`*^9}, {3.747594243469119*^9, 3.747594291174862*^9}, {
   3.747594759402934*^9, 3.747594759659379*^9}, {3.747594841448741*^9, 
   3.747594848112361*^9}, {3.7477700549507914`*^9, 3.747770091196879*^9}},
 CellTags->{
  "P2.16.8", 
   "Problem"},ExpressionUUID->"69cb9321-2cb0-4d23-8182-d0c6279841eb"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0, 0}, {4, 0}, {4.6, 1}, {5.8, -1}, {6.4, 0}, {6.4, 0}, {
     7., 1}, {8.2, -1}, {8.8, 0}, {8.8, 0}, {9.399999999999999, 1}, {
     10.6, -1}, {11.2, 0}, {15.2, 0}}], 
   GeometricTransformationBox[
    LineBox[{{0, 1}, {1., 1.}, {1.1298334166468282`, 0.9950041652780258}, {
      1.2586693307950612`, 0.9800665778412416}, {1.3855202066613397`, 
      0.955336489125606}, {1.5094183423086505`, 0.9210609940028851}, {
      1.629425538604203, 0.8775825618903728}, {1.7446424733950354`, 
      0.8253356149096782}, {1.8542176872376912`, 0.7648421872844884}, {
      1.957356090899523, 0.6967067093471654}, {2.0533269096274833`, 
      0.6216099682706644}, {2.1414709848078965`, 0.5403023058681397}, {
      2.2212073600614355`, 0.4535961214255773}, {2.292039085967226, 
      0.3623577544766734}, {2.353558185417193, 0.26749882862458735`}, {
      2.4054497299884603`, 0.16996714290024081`}, {2.4474949866040543`, 
      0.0707372016677029}, {2.479573603041505, -0.029199522301288815`}, {
      2.5016648104524686`, -0.12884449429552486`}, {
      2.513847630878195, -0.2272020946930871}, {
      2.5163000876874144`, -0.3232895668635036}, {
      2.5092974268256816`, -0.4161468365471424}, {
      2.4932093666488737`, -0.5048461045998576}, {
      2.4684964038195902`, -0.5885011172553458}, {
      2.43570521217672, -0.6662760212798244}, {
      2.395463180551151, -0.7373937155412458}, {
      2.3484721441039564`, -0.8011436155469337}, {
      2.295501371821464, -0.8568887533689473}, {
      2.2373798802338296`, -0.9040721420170612}, {
      2.1749881501559045`, -0.9422223406686583}, {
      2.109249329213982, -0.9709581651495907}, {
      2.041120008059867, -0.9899924966004454}, {
      1.9715806624332903`, -0.9991351502732795}, {
      1.9016258565724198`, -0.9982947757947531}, {
      1.8322543058567513`, -0.9874797699088649}, {
      1.7644588979731683`, -0.9667981925794609}, {
      1.6992167723103802`, -0.9364566872907963}, {
      1.6374795567051477`, -0.896758416334147}, {
      1.5801638590915066`, -0.848100031710408}, {
      1.5281421090572809`, -0.7909677119144165}, {
      1.482233840816026, -0.7259323042001399}, {
      1.4431975046920718`, -0.6536436208636119}, {
      1.4117228889355893`, -0.5748239465332685}, {
      1.3884242275864118`, -0.4902608213406994}, {
      1.3738340632505448`, -0.40079917207997545`}, {
      1.368397926110484, -0.30733286997841935`}, {
      1.3724698823349029`, -0.2107957994307797}, {
      1.3863089963665356`, -0.11215252693505398`}, {
      1.410076742435899, -0.01238866346289056}, {1.4438353911641597`, 
      0.08749898343944727}, {1.4875473873756675`, 0.18651236942257576`}, {
      1.5410757253368614`, 0.28366218546322625`}, {1.6041853176722678`, 
      0.37797774271298107`}, {1.6765453442798468`, 0.4685166713003771}, {
      1.7577325577760994`, 0.5543743361791615}, {1.847235512444013, 
      0.6346928759426347}, {1.9444596744296079`, 0.70866977429126}, {
      2.0487333621276793`, 0.7755658785102502}, {2.1593144574023624`, 
      0.8347127848391598}, {2.2753978205862437`, 0.8855195169413194}, {
      2.396123335169764, 0.9274784307440359}, {2.520584501801074, 
      0.960170286650366}, {2.647837495727905, 0.9832684384425847}, {
      2.7769105971825034`, 0.9965420970232175}, {2.9068139004843507`, 
      0.9998586363834151}, {3.0365492048504934`, 0.9931849187581926}, {
      3.1651199880878154`, 0.9765876257280235}, {3.2915413635133786`, 
      0.9502325919585293}, {3.4148499206165983`, 0.9143831482353194}, {
      3.534113351138609, 0.8693974903498248}, {3.6484397643882, 
      0.8157251001253568}, {3.756986598718789, 0.7539022543433046}, {
      3.8589690401258765`, 0.6845466664428059}, {3.9536678638491534`, 
      0.6083513145322546}, {4.040436620628565, 0.5260775173811045}, {
      4.118708095811627, 0.43854732757439036`}, {4.187999976774739, 
      0.3466353178350258}, {4.247919672031487, 0.25125984258225487`}, {
      4.298168233877, 0.15337386203786435`}, {4.338543345374605, 
      0.05395542056264886}, {4.368941341839772, -0.04600212563953695}, {
      4.389358246623382, -0.14550003380861354`}, {
      4.399889810845086, -0.2435441537357911}, {
      4.400730556679773, -0.3391548609838362}, {
      4.392171833756294, -0.4313768449706208}, {
      4.374598908088281, -0.5192886541166856}, {
      4.34848711262349, -0.6020119026848236}, {
      4.314397097874113, -0.6787200473200125}, {
      4.272969230082182, -0.7486466455973999}, {
      4.224917192891762, -0.811093014061656}, {
      4.171020856457885, -0.8654352092411123}, {
      4.112118485241757, -0.9111302618846769}, {
      4.049098362349352, -0.9477216021311119}, {
      3.9828899141002463`, -0.974843621404164}, {
      3.9144544235070615`, -0.9922253254526034}, {
      3.8447754254533577`, -0.9996930420352065}, {
      3.7748488795381907`, -0.9971721561963784}, {
      3.7056732187770187`, -0.9846878557941267}, {
      3.638239373589056, -0.9623648798313097}, {
      3.5735208707480717`, -0.9304262721047533}, {
      3.512464106224679, -0.8891911526253609}, {
      3.4559788891106304`, -0.8390715290764524}, {
      3.404929351107117, -0.7805681801691826}, {
      3.3601253124064563`, -0.714265652027199}, {
      3.3223141902364177`, -0.6408264175949933}, {
      3.2921735309143463`, -0.5609842574272288}, {
      3.27030424002833, -0.47553692799599256`}, {
      3.2572245783871927`, -0.385338190771828}, {
      3.2533649837298118`, -0.29128928172134383`}, {
      3.2590637699335088`, -0.1943299064553348}, {
      3.2745637466936226`, -0.09542885100095065}, {3.3000097934492962`, 
      0.004425697988050785}, {3.3354474117960113`, 0.10423602686569865`}, {
      3.3808222708486833`, 0.20300486381875213`}, {3.435980750097911, 
      0.2997453432770149}, {3.5006714743353244`, 0.3934908663478909}, {
      3.574547825311571, 0.4833047587530059}, {3.6571714050312925`, 
      0.568289629767975}, {3.748016416080968, 0.6475963386538773}, {
      3.8464749152228777`, 0.7204324789908387}, {3.9518628877629665`, 
      0.7860702961410393}, {4.063427081999565, 0.8438539587324921}, {
      4.180352535465401, 0.8932061115093233}, {4.301770717763173, 
      0.9336336440746379}, {4.426768208634199, 0.9647326178866098}, {
      4.5543958245516905`, 0.9861923022788637}, {4.683678102648799, 
      0.9977982791785807}, {4.813623047221139, 0.9994345855010047}, {
      4.943232041419944, 0.991084871814253}, {5.071509825101539, 
      0.9728325656974354}, {5.197474439137693, 0.9448600381598606}, {
      5.320167036826641, 0.9074467814501962}, {5.438661464372375, 
      0.8609666164623057}, {5.552073514707224, 0.8058839576404497}, {
      5.659569762196602, 0.7427491727036695}, {5.760375889952448, 
      0.6721930835534681}, {5.853784426551621, 0.594920663309892}, {
      5.939161814856497, 0.5117039924531475}, {6.0159547423084625`, 
      0.42337454445066386`}, {6.083695669444104, 0.33081487794904696`}, {
      6.142007501394976, 0.23494981853982308`}, {6.190607355694871, 
      0.1367372182078336}, {6.229309388747918, 0.03715838479082463}, {
      6.258026652716361, -0.06279172292408354}, {
      6.276771964274613, -0.16211443649971827`}, {
      6.285657776549278, -0.25981735621375585`}, {
      6.284895055524682, -0.354924266788705}, {
      6.274791172140503, -0.4464848914122672}, {
      6.255746831142933, -0.5335843865891192}, {
      6.228252067375316, -0.6153524829547208}, {
      6.192881349511976, -0.6909721807191258}, {
      6.150287840157117, -0.7596879128588213}, {
      6.101196869659987, -0.8208130944926693}, {
      6.046398688853799, -0.873736983011081}, {
      5.986740573130612, -0.9179307804142932}, {
      5.923118356745702, -0.9529529168871803}, {
      5.856467481937796, -0.9784534628188842}, {
      5.787753652299443, -0.9941776251838154}, {
      5.717963183785936, -0.9999682933493399}, {
      5.648093149772318, -0.9957676088732885}, {
      5.57914141862581, -0.9816175436063844}, {
      5.512096683334935, -0.9576594803233847}, {
      5.447928582815991, -0.9241328000731296}, {
      5.387578013601534, -0.8813724903622346}, {
      5.33194772871322, -0.829805798070649}, {
      5.281893317652051, -0.7699479605420695}, {
      5.238214657630877, -0.7023970575027135}, {
      5.201647921465702, -0.627828035246386}, {
      5.172858221980253, -0.5469859627942356}, {
      5.152432966418496, -0.46067858741136253`}, {
      5.14087598726563, -0.3697682638631698}, {
      5.138602508120443, -0.27516333805159693`}, {
      5.145934994918356, -0.17780907112311564`}, {
      5.163099933958403, -0.07867819473184015}, {5.190225568926989, 
      0.021238808173646012`}, {5.227340619529368, 0.12094359992847767`}, {
      5.274373994531842, 0.2194399632114593}, {5.331155502081876, 
      0.31574375491924334`}, {5.397417550208815, 0.4088927393988798}, {
      5.472797820514419, 0.49795620278841546`}, {5.5568428883385135`, 
      0.5820442524021253}, {5.649012753228323, 0.6603167082440802}, {
      5.7486862344445, 0.7319914978089467}, {5.8551671775937155`, 
      0.7963524702919231}, {5.967691410373269, 0.8527565521308732}, {
      6.085434377928107, 0.90064017238477}, {6.207519381530387, 
      0.939524893748256}, {6.333026338263379, 0.9690221929390499}, {
      6.461000974185801, 0.9888373426941459}, {6.590464359121632, 
      0.9987723565872102}, {6.720422687806815, 0.9987279672435014}, {
      6.849877209662952, 0.9887046181866692}, {6.97783420798296, 
      0.9688024594072101}, {7.103314928819899, 0.9392203466968696}, {
      7.225365360372893, 0.9002538547473045}, {7.3430657651577, 
      0.8522923238654625}, {7.455539869719601, 0.7958149698139441}, {
      7.561963620068136, 0.7313860956454967}, {7.6615734153521515`, 
      0.6596494533734593}, {7.753673737507106, 0.5813218118144357}, {
      7.83764410064167, 0.4971857948712022}, {7.912945250727628, 
      0.408082061813392}, {7.979124553647895, 0.3149009076879342}, {
      8.035820517766977, 0.21857336778525918`}, {8.082766405835907, 
      0.12006191504242673`}, {8.11979290014267, 0.02035084333167943}, {
      8.146829794278798, -0.07956356727854007}, {
      8.163906694618618, -0.17868300502473455`}, {
      8.171152724502116, -0.2760171012494705}, {
      8.16879523407724, -0.37059332583764143`}, {
      8.15715752869235, -0.46146670441591253`}, {
      8.136655638536055, -0.5477292602242684}, {
      8.107794161801092, -0.628519086319688}, {
      8.07116122290598, -0.7030289574653885}, {
      8.027422596150238, -0.7705143956585688}, {
      7.97731505351766, -0.8303011087085271}, {
      7.921639003094196, -0.8817917275413242}, {
      7.861250491654941, -0.9244717749141217}, {
      7.797052651327726, -0.9579148059017166}, {
      7.729986675795438, -0.9817866687932767}, {
      7.661022416199844, -0.9958488438257798}, {
      7.591148690709596, -0.9999608263946371}, {
      7.52136340457592, -0.9940815309292618}, {
      7.4526635793932385`, -0.9782697014065067}, {
      7.386035391188953, -0.9526833244002685}, {
      7.322444316878564, -0.9175780505318598}, {
      7.262825487539491, -0.8733046400935156}, {
      7.208074344890436, -0.820305458367489}, {
      7.159037694333751, -0.7591100556583875}, {
      7.116505243955755, -0.6903298762015725}, {
      7.081201714024582, -0.614652148814467}, {
      7.053779595824829, -0.5328330203333975}, {
      7.034812632180319, -0.44569000044433316`}, {
      7.024790084805461, -0.3540937933963556}, {
      7.0241118457639296`, -0.2589595982126113}, {
      7.0330844418793514`, -0.16123796432418536`}, {
      7.051917972020604, -0.061905293994420546`}, {7.080724007863372, 
      0.03804591356977048}, {7.119514479102844, 0.13761697894187933`}, {
      7.168201554256136, 0.2358130209505226}, {7.226598518245447, 
      0.3316528972032528}, {7.294421637993375, 0.424179007336997}, {
      7.371292997390071, 0.5124668610443709}, {7.4567442733060485`, 
      0.5956343152752115}, {7.550221414922107, 0.6728503883183468}, {
      7.651090179621979, 0.7433435626961754}, {7.758642470134875, 
      0.8064094939122546}, {7.872103409609378, 0.8614180480287028}, {
      7.990639083926772, 0.9078195977561968}, {8.113364873895277, 
      0.9451505141481711}, {8.239354294072609, 0.9730377990280002}, {
      8.367648249902228, 0.9912028118634736}, {8.497264620669155, 
      0.9994640538508954}, {9.539822368615503, 1}}], {14.5, -1}], 
   LineBox[{{24, 0}, {27, 0}, {27, -10}, {14.5, -10}, {14.5, -8}, {
     14.5, -12}}], LineBox[{{27, -5}, {30, -5}}], 
   LineBox[{{13.5, -10}, {0, -10}, {0, 0}}], 
   LineBox[{{13.5, -12}, {13.5, -8}}], LineBox[{{0, -5}, {-3, -5}}], InsetBox[
    StyleBox["\<\"L\"\>",
     StripOnInput->False,
     FontSize->14], {20, 2}], InsetBox[
    StyleBox["\<\"C\"\>",
     StripOnInput->False,
     FontSize->14], {14, -6}], InsetBox[
    StyleBox["\<\"R\"\>",
     StripOnInput->False,
     FontSize->14], {8, 2}]}]], "Text",
 CellChangeTimes->{
  3.7460647800016575`*^9, {3.746064833725314*^9, 3.74606485559179*^9}, 
   3.7460650056142473`*^9, 3.746065075958784*^9, 3.7460651259642725`*^9, 
   3.7460652798947053`*^9, 3.7460653110586033`*^9, 3.7460654892510414`*^9, 
   3.7460656188485403`*^9, 3.7460656560222464`*^9, 3.7460657581180744`*^9, 
   3.7460658413673177`*^9, 3.7460660249541993`*^9, {3.746066119053265*^9, 
   3.7460661450704646`*^9}, 3.746066177617937*^9},
 CellTags->{"P2.16.8", "Problem"},
 CellLabel->"Out[20]=",ExpressionUUID->"a0d9d42e-1740-4a6a-b5d2-ed3eb3bd26c1"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7533840673282766`*^9, 3.7533840751165447`*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"dbb1b7de-3051-4420-b94b-5fe70276c6f6"],

Cell["\<\
First we define variables to represent the voltage going through the \
Resistor, Inductor, and Capacitor.
Boas gives the formulas to define each component: \
\>", "Text",
 CellChangeTimes->{{3.7533847603575907`*^9, 3.7533847854481783`*^9}, {
  3.753384888360332*^9, 
  3.753384901813176*^9}},ExpressionUUID->"15b437eb-402a-4520-95dc-\
b98c1a4af7b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vr", "=", 
   RowBox[{"Res", " ", "Cur"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vl", "=", 
   RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "Ind", " ", "Cur"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vc", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "Cpct"}]], "Cur"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7533840788362226`*^9, 3.753384113243964*^9}, {
  3.75338436968913*^9, 3.7533844317888603`*^9}, {3.7533845869020925`*^9, 
  3.7533845875748453`*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"713c44c7-6f69-4fc7-a1a6-01890e3e9770"],

Cell["\<\
Since these are in series, we can just add the voltages of the resistor and \
the inductor. \
\>", "Text",
 CellChangeTimes->{{3.7533858723901424`*^9, 
  3.7533858944432125`*^9}},ExpressionUUID->"8d31a66f-7d32-48bc-9f59-\
579c426fc11c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vrl", "=", 
  RowBox[{
   RowBox[{"Vr", "+", "Vl"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.753384567381629*^9, 3.7533845741273594`*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"0983cf6b-885c-416e-b419-9b2748bbd6b8"],

Cell[BoxData[
 RowBox[{"Cur", " ", 
  RowBox[{"(", 
   RowBox[{"Res", "+", 
    RowBox[{"\[ImaginaryI]", " ", "Ind", " ", "\[Omega]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7533845744186125`*^9, 3.7533845902419195`*^9}, 
   3.753385279199091*^9, 3.753385523692758*^9, {3.753385565444111*^9, 
   3.7533855828153553`*^9}, 3.75338575387945*^9},
 CellLabel->
  "Out[696]=",ExpressionUUID->"63672184-4aa9-4918-aef6-874912c559db"]
}, Open  ]],

Cell[TextData[{
 "We are also given that the complex impedance is: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"Z", " ", "I"}]}], TraditionalForm]],ExpressionUUID->
  "f5162a5d-40ff-408f-adc9-fe57a74a289b"],
 ", where Z is the complex impedance, I is the current. \n\nOur next step is \
to set up these equations and solve for the complex impedances of individual \
circuit components. \nWe can use the given property of parallel and series \
combinations of complex impedances. \n\nThis equation represents the complex \
impedance for the resistor and the inductor. "
}], "Text",
 CellChangeTimes->{{3.7533849119250855`*^9, 3.753384955096507*^9}, {
   3.7533850219260254`*^9, 3.753385026871938*^9}, {3.7533851357337303`*^9, 
   3.753385182168777*^9}, 3.7533858550591884`*^9, {3.7533859232551055`*^9, 
   3.753385925529231*^9}, {3.753385955993903*^9, 
   3.7533859693098392`*^9}},ExpressionUUID->"0529bcb4-6ac6-48c6-98e7-\
3bbe99aa37d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq1", "=", 
  RowBox[{"Vrl", "\[Equal]", 
   RowBox[{"Zrl", " ", "Cur"}]}]}]], "Input",
 CellChangeTimes->{{3.7533851852698135`*^9, 3.7533851908542166`*^9}, {
   3.753385221754159*^9, 3.7533852413263655`*^9}, {3.7533853592274632`*^9, 
   3.7533853668900146`*^9}, 3.7533857475466743`*^9},
 CellLabel->
  "In[697]:=",ExpressionUUID->"84a13f7a-8049-409a-acf6-2c42546f039c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cur", " ", 
   RowBox[{"(", 
    RowBox[{"Res", "+", 
     RowBox[{"\[ImaginaryI]", " ", "Ind", " ", "\[Omega]"}]}], ")"}]}], 
  "\[Equal]", 
  RowBox[{"Cur", " ", "Zrl"}]}]], "Output",
 CellChangeTimes->{{3.7533852431313844`*^9, 3.7533852822317853`*^9}, 
   3.753385367416787*^9, 3.753385523738537*^9, {3.7533855654856815`*^9, 
   3.7533855828586435`*^9}, 3.7533857539669256`*^9},
 CellLabel->
  "Out[697]=",ExpressionUUID->"f8d9e037-805c-4516-9b33-7b39573130ad"]
}, Open  ]],

Cell["Solving for Z, we get: ", "Text",
 CellChangeTimes->{{3.753385912128378*^9, 
  3.753385914600215*^9}},ExpressionUUID->"4a52de17-b39f-4eb1-b35b-\
6d941f7fa4a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZsolRL", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"eq1", ",", "Zrl"}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.7533852472046194`*^9, 3.753385255396736*^9}, {
  3.753385289334276*^9, 3.753385307849124*^9}, {3.7533853555731306`*^9, 
  3.753385370810074*^9}},
 CellLabel->
  "In[698]:=",ExpressionUUID->"2f75f5df-afa1-4155-bbfd-1328a58ce7bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Zrl", "\[Rule]", 
   RowBox[{"Res", "+", 
    RowBox[{"\[ImaginaryI]", " ", "Ind", " ", "\[Omega]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.753385251402581*^9, 3.7533852923418245`*^9}, 
   3.7533853714619455`*^9, 3.753385523784487*^9, {3.753385565530068*^9, 
   3.753385582905792*^9}, 3.753385754026702*^9},
 CellLabel->
  "Out[698]=",ExpressionUUID->"d8300650-d83a-43e8-a134-1befb5a95785"]
}, Open  ]],

Cell["\<\
This equation represents the complex impedance for the capacitance. \
\>", "Text",
 CellChangeTimes->{{3.753385972625866*^9, 
  3.753385987360135*^9}},ExpressionUUID->"93d39a6e-4608-4d40-85c7-\
8ad46739804d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", 
  RowBox[{"Vc", "\[Equal]", 
   RowBox[{"Zc", " ", "Cur"}]}]}]], "Input",
 CellChangeTimes->{{3.753385294481258*^9, 3.7533853198125324`*^9}, 
   3.753385362595865*^9, 3.7533857491118717`*^9},
 CellLabel->
  "In[699]:=",ExpressionUUID->"4f7111b6-1fc4-4e64-a6bd-b273e7cd25e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "Cur"}], 
    RowBox[{"Cpct", " ", "\[Omega]"}]]}], "\[Equal]", 
  RowBox[{"Cur", " ", "Zc"}]}]], "Output",
 CellChangeTimes->{
  3.7533853210290246`*^9, 3.7533853640619698`*^9, 3.753385523826761*^9, {
   3.7533855655756536`*^9, 3.753385582985767*^9}, 3.7533857540736628`*^9},
 CellLabel->
  "Out[699]=",ExpressionUUID->"6d344df5-8b1b-43d6-a7f4-e8aebc962d08"]
}, Open  ]],

Cell["Solving for Z, we get: ", "Text",
 CellChangeTimes->{{3.7533859920788116`*^9, 
  3.753385994983037*^9}},ExpressionUUID->"efeca5ba-a49e-4be9-b82f-\
6b24441cfc28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZsolC", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"eq2", ",", "Zc"}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.753385323685586*^9, 3.7533853362331715`*^9}, 
   3.753385374601713*^9},
 CellLabel->
  "In[700]:=",ExpressionUUID->"75f053b7-7bd0-4291-8501-bb5b962f34dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Zc", "\[Rule]", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"Cpct", " ", "\[Omega]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753385333357485*^9, 3.7533853370179815`*^9}, 
   3.753385375121564*^9, 3.7533855239198117`*^9, {3.7533855656433997`*^9, 
   3.7533855830440936`*^9}, 3.753385754165596*^9},
 CellLabel->
  "Out[700]=",ExpressionUUID->"ac0aef2a-70cb-4610-ab86-2aa359846924"]
}, Open  ]],

Cell["\<\
Now we apply the property of adding complex impedances in series, which is \
the inverse sum of the inverse impedances.
The total impedance is: \
\>", "Text",
 CellChangeTimes->{{3.753385999661796*^9, 3.7533860210041494`*^9}, {
  3.753386069989221*^9, 
  3.7533861161418953`*^9}},ExpressionUUID->"a59c506f-b893-4c3e-9645-\
9e2aec426cb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ztot", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "Zrl"], "+", 
        FractionBox["1", "Zc"]}], ")"}], 
      RowBox[{"-", "1"}]], "/.", "ZsolRL"}], "/.", "ZsolC"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7533853780364065`*^9, 3.753385404806917*^9}, {
  3.753385504548997*^9, 3.7533855155142126`*^9}, {3.7533856043775544`*^9, 
  3.7533856456509805`*^9}, {3.7533857288596535`*^9, 3.7533857301621237`*^9}},
 CellLabel->
  "In[701]:=",ExpressionUUID->"0afdd18b-1f76-47f2-b388-e1f7058e4bc7"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "Cpct", " ", "\[Omega]"}], "+", 
   FractionBox["1", 
    RowBox[{"Res", "+", 
     RowBox[{"\[ImaginaryI]", " ", "Ind", " ", "\[Omega]"}]}]]}]]], "Output",
 CellChangeTimes->{
  3.753385405412549*^9, {3.7533855161967516`*^9, 3.753385523992756*^9}, {
   3.753385565721672*^9, 3.753385646952198*^9}, {3.7533857309145694`*^9, 
   3.753385754244461*^9}},
 CellLabel->
  "Out[701]=",ExpressionUUID->"0e5d9cd4-96f9-4b09-b8b6-defd8a9bbb95"]
}, Open  ]],

Cell["\<\
Using ComplexExpand[], we can force our expression into Cartesian form: \
\>", "Text",
 CellChangeTimes->{{3.7533860901519504`*^9, 
  3.7533861236011753`*^9}},ExpressionUUID->"23b26455-7326-4de9-a21c-\
5b0559255676"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "Ztot", "]"}]], "Input",
 CellChangeTimes->{{3.753385411624831*^9, 3.753385417081417*^9}, {
  3.753385561126709*^9, 3.753385562156991*^9}, {3.7533856571672907`*^9, 
  3.7533856589030647`*^9}, {3.7533857636509104`*^9, 3.7533857639590445`*^9}},
 CellLabel->
  "In[703]:=",ExpressionUUID->"dc6916e4-8754-4bfd-8949-93ee78bcb5e5"],

Cell[BoxData[
 RowBox[{
  FractionBox["Res", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["Res", "2"], "+", 
      RowBox[{
       SuperscriptBox["Ind", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["Res", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Res", "2"], "+", 
          RowBox[{
           SuperscriptBox["Ind", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cpct", " ", "\[Omega]"}], "-", 
         FractionBox[
          RowBox[{"Ind", " ", "\[Omega]"}], 
          RowBox[{
           SuperscriptBox["Res", "2"], "+", 
           RowBox[{
            SuperscriptBox["Ind", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}], "2"]}], ")"}]}]], 
  "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cpct", " ", "\[Omega]"}], 
       RowBox[{
        FractionBox[
         SuperscriptBox["Res", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["Res", "2"], "+", 
            RowBox[{
             SuperscriptBox["Ind", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cpct", " ", "\[Omega]"}], "-", 
           FractionBox[
            RowBox[{"Ind", " ", "\[Omega]"}], 
            RowBox[{
             SuperscriptBox["Res", "2"], "+", 
             RowBox[{
              SuperscriptBox["Ind", "2"], " ", 
              SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"Ind", " ", "\[Omega]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["Res", "2"], "+", 
         RowBox[{
          SuperscriptBox["Ind", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["Res", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["Res", "2"], "+", 
             RowBox[{
              SuperscriptBox["Ind", "2"], " ", 
              SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cpct", " ", "\[Omega]"}], "-", 
            FractionBox[
             RowBox[{"Ind", " ", "\[Omega]"}], 
             RowBox[{
              SuperscriptBox["Res", "2"], "+", 
              RowBox[{
               SuperscriptBox["Ind", "2"], " ", 
               SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}], "2"]}], 
        ")"}]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.753385417705614*^9, 3.7533855240493307`*^9, {3.753385563014268*^9, 
   3.7533855836826277`*^9}, {3.7533856386092033`*^9, 3.753385659671122*^9}, {
   3.753385754285155*^9, 3.753385765059066*^9}},
 CellLabel->
  "Out[703]=",ExpressionUUID->"9cc80e9e-c7e4-4b32-a7d1-40339a28e566"]
}, Open  ]],

Cell[TextData[{
 "The prompt tells us that a circuit is in resonance if Z is real and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "509d3693-96b5-4132-b01e-47824c419585"],
 "\nThis is equivalent to saying that the imaginary part of Z is zero. \nThus \
we can set up another equation that equates ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Im", "[", "Z", "]"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"ea9422bb-78ed-42d2-904a-37aaf138c6c1"],
 ", and then solve for \[Omega]:"
}], "Text",
 CellChangeTimes->{{3.753386134987707*^9, 
  3.7533862117130623`*^9}},ExpressionUUID->"2fdc6e18-8ed2-4413-b3c6-\
efca0864664b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZtotIm", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Im", "[", "Ztot", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7533857745552187`*^9, 3.7533857826277795`*^9}},
 CellLabel->
  "In[704]:=",ExpressionUUID->"f2d7d211-9b8c-411d-8d9a-4fe546fbf9b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"Cpct", " ", "\[Omega]"}], 
    RowBox[{
     FractionBox[
      SuperscriptBox["Res", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["Res", "2"], "+", 
         RowBox[{
          SuperscriptBox["Ind", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cpct", " ", "\[Omega]"}], "-", 
        FractionBox[
         RowBox[{"Ind", " ", "\[Omega]"}], 
         RowBox[{
          SuperscriptBox["Res", "2"], "+", 
          RowBox[{
           SuperscriptBox["Ind", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"Ind", " ", "\[Omega]"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["Res", "2"], "+", 
      RowBox[{
       SuperscriptBox["Ind", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["Res", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Res", "2"], "+", 
          RowBox[{
           SuperscriptBox["Ind", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cpct", " ", "\[Omega]"}], "-", 
         FractionBox[
          RowBox[{"Ind", " ", "\[Omega]"}], 
          RowBox[{
           SuperscriptBox["Res", "2"], "+", 
           RowBox[{
            SuperscriptBox["Ind", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}], "2"]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{3.7533857831584053`*^9},
 CellLabel->
  "Out[704]=",ExpressionUUID->"d0669d58-9b16-4e7a-aece-dd41ce10102f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ZtotIm", "\[Equal]", "0"}], ",", "\[Omega]"}], "]"}], "//", 
  "Flatten"}]], "Input",
 CellChangeTimes->{{3.7533857908988714`*^9, 
  3.753385818858073*^9}},ExpressionUUID->"f17dc1c1-205b-4e21-b276-\
c7a8c7cc6967"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
   RowBox[{"\[Omega]", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      SqrtBox[
       RowBox[{"Ind", "-", 
        RowBox[{"Cpct", " ", 
         SuperscriptBox["Res", "2"]}]}]], 
      RowBox[{
       SqrtBox["Cpct"], " ", "Ind"}]]}]}], ",", 
   RowBox[{"\[Omega]", "\[Rule]", 
    FractionBox[
     SqrtBox[
      RowBox[{"Ind", "-", 
       RowBox[{"Cpct", " ", 
        SuperscriptBox["Res", "2"]}]}]], 
     RowBox[{
      SqrtBox["Cpct"], " ", "Ind"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753385802791686*^9, 3.753385809923696*^9}},
 CellLabel->
  "Out[706]=",ExpressionUUID->"ddb587e9-dabc-497a-b03c-c00d9c0cd369"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P3 .5 .24\nFind the parametric equation ( of the form ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "2c14a6c0-1c5a-46fa-83e0-4a36b1f07f51"],
 "=",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "b298d3c4-ca0a-4d14-924d-b6f1db942ad5"],
 "+",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "747588e6-f26c-4bd5-bb1c-022c21a0a020"],
 " t as in Eq 3.5.8) for the  line formed by the intersection of planes \
defined by 3x+6y-3z=10 and 5x+2y-z=12"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7477934327444*^9, 
  3.747793630765994*^9}},ExpressionUUID->"6dc2aa2f-3810-41ed-8db8-\
df78eba5f272"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n1", "=", 
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", 
    RowBox[{"-", "3"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.753386706164385*^9, 3.7533867384397717`*^9}, {
  3.753386843197412*^9, 3.7533868435006*^9}},
 CellLabel->
  "In[719]:=",ExpressionUUID->"2acd59c8-631e-42f7-9cfd-adac497ccbcc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", 
   RowBox[{"-", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7533867390062847`*^9, 3.7533868438575196`*^9},
 CellLabel->
  "Out[719]=",ExpressionUUID->"2060a9e5-a375-4e4e-b78e-aa3a0e864348"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n2", "=", 
  RowBox[{"{", 
   RowBox[{"5", ",", "2", ",", 
    RowBox[{"-", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7533867403829374`*^9, 3.753386743768463*^9}, {
  3.7533868456829205`*^9, 3.753386845822556*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"7676ec14-dae2-4de6-9671-fdec748bcf18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "2", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7533867442771177`*^9, 3.753386846159498*^9},
 CellLabel->
  "Out[720]=",ExpressionUUID->"61936808-74d3-4c0a-91d4-aef544505e54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"Cross", "[", 
   RowBox[{"n1", ",", "n2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753386839658259*^9, 3.7533868563191566`*^9}},
 CellLabel->
  "In[722]:=",ExpressionUUID->"0c21e226-a0fb-4d4a-b8a0-ef0f5f53bc6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "24"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7533868507449913`*^9, 3.753386856741989*^9}},
 CellLabel->
  "Out[722]=",ExpressionUUID->"c4378d20-030a-469b-a3ca-774788621060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "x"}], "+", 
     RowBox[{"6", "y"}], "-", 
     RowBox[{"3", "z"}]}], "\[Equal]", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"5", "x"}], "+", 
     RowBox[{"2", "y"}], "-", "z"}], "\[Equal]", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"xysol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eq1", ",", "eq2"}], "}"}], "/.", 
      RowBox[{"z", "\[Rule]", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "//", "Flatten"}]}]}], "Input",
 CellChangeTimes->{{3.7533867610671234`*^9, 3.7533868089755745`*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"b9369737-184c-48ba-8bec-fe6b3f23e2d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    FractionBox["13", "6"]}], ",", 
   RowBox[{"y", "\[Rule]", 
    FractionBox["7", "12"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.75338679199627*^9, 3.7533868095450153`*^9}},
 CellLabel->
  "Out[717]=",ExpressionUUID->"dbc1fdf0-8d49-4b8f-ae4f-f4fcd61af6ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r0", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "/.", 
    RowBox[{"z", "\[Rule]", "0"}]}], "/.", "xysol"}]}]], "Input",
 CellChangeTimes->{{3.753386799118191*^9, 3.753386812631503*^9}, {
  3.7533868592589674`*^9, 3.753386859474394*^9}},
 CellLabel->
  "In[723]:=",ExpressionUUID->"718757b5-9613-42c6-8510-7510bf6ddbfa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["13", "6"], ",", 
   FractionBox["7", "12"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7533868130912*^9, 3.7533868601486244`*^9},
 CellLabel->
  "Out[723]=",ExpressionUUID->"b3c8baa0-4372-43a4-a8f7-829b58aa2c1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"r0", "+", 
   RowBox[{"A", " ", "t"}]}]}]], "Input",
 CellChangeTimes->{{3.753386863608306*^9, 3.7533868710294695`*^9}},
 CellLabel->
  "In[726]:=",ExpressionUUID->"516f463a-5657-43ab-a73c-389b37faf16a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["13", "6"], ",", 
   RowBox[{
    FractionBox["7", "12"], "-", 
    RowBox[{"12", " ", "t"}]}], ",", 
   RowBox[{
    RowBox[{"-", "24"}], " ", "t"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.75338686725391*^9, 3.753386895847097*^9}},
 CellLabel->
  "Out[726]=",ExpressionUUID->"36b23218-ed57-4d8e-84dd-751e2c55d551"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"planeplot", "=", 
   RowBox[{"ContourPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"3", "x"}], "+", 
         RowBox[{"6", "y"}], "-", 
         RowBox[{"3", "z"}]}], "\[Equal]", "10"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"5", "x"}], "+", 
         RowBox[{"2", "y"}], "-", "z"}], "\[Equal]", "12"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineplot", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.05", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "/.", 
          RowBox[{"t", "\[Rule]", 
           RowBox[{"-", "1"}]}]}], ",", 
         RowBox[{"r", "/.", 
          RowBox[{"t", "\[Rule]", "0"}]}], ",", 
         RowBox[{"r", "/.", 
          RowBox[{"t", "\[Rule]", "1"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7533869105427027`*^9, 3.753386942319116*^9}, {
  3.7533870102858944`*^9, 3.753387067815523*^9}, {3.7533871909621534`*^9, 
  3.7533872082041206`*^9}, {3.753387381996394*^9, 3.7533874109290767`*^9}, {
  3.7533874735457764`*^9, 3.753387474421321*^9}, {3.7533875075371494`*^9, 
  3.753387532938258*^9}, {3.753387565683296*^9, 3.753387618627138*^9}},
 CellLabel->
  "In[751]:=",ExpressionUUID->"e28b56ce-6c21-45be-9bd4-43e14d99486a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"planeplot", ",", "lineplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.753387197678209*^9, 3.7533871996252203`*^9}, {
  3.753387603962791*^9, 3.75338760501023*^9}},
 CellLabel->
  "In[753]:=",ExpressionUUID->"85b47c5c-991d-4b44-b5e6-e0676b4704a2"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
YcL+767p89jKldWlBO7UaLKiJIvlQQHHuXCmbYtP6//nfrDQLshzIKal6dDQ
Klo/NN6btXHLD1YnFvKszIhf0DWB1Z8E/Z3zZYuC1+aK8F2zZgw9cS6B2gX9
4Fzbuccuyw7dTEhvw6JKtbvJWT1J4AlX39ccu83qVdK6SOivgIAK51YzdEnP
Syf3zzjygeVxAad7E40ebJ1jzr67qm3xwdYKVr8R8vfaOGtb4S1WrxK4r9Qw
ye4WqxsJ/kvSi0e1cGV1DoF37mff/vQtVheR5BH0YDNvRXGQnS7Js3/4B89z
t4pE9gl6lZXZxwaGsX5cVZqwJ8GV1YEEPiGsg0P2bVY3En6vY+aljsdusDqH
tP4R9Hlo8qo7vv9TX1PAdbIv5w+IZ/UMYVdzLnTK+XmjSGSf3Z/c8z2zktV9
BQ57y1XeNu/c2XTC8d3yccYyaXgV4U0aDPVYk8Dq/QIfP3Wt09v4Ms7eaqRu
IW7ybGdWnxB41lhFXKuEOo5PCeVLTLoWMHq8owbhDvuObrByZvUPwQf6/7ok
dVWZnTLRK8/LKrKNK+PaWyKtu9xkTk0cqzOJdQv4VHybm+cXXUR48dqdmYrr
rC4icD9nM+uguDpRf9mu8neIjisSfTf+ZcnWDzdY3UX6rtDeEwMmaK5xVJYB
n7ryaf9zTqxuIekH9XBy1BbIoqsIN/wdppfsosv5nxLpkRkHp67NYvmr4P/2
RYxSQBbbDwPHOULBx6GmXy0YrvXh06OuLroiPl7NLlqmZbK8TZIH9X6HOJgn
RBgSfs0qeIS6C6v7B72B3qRa6cn57iaE33RatOucC6sPDHxsxsLzU7NURXzO
H1691PSDFjfuakjP6r1/7GjtqEt2O1fRWWWzC6ubina1n3NqmUkmy0skvy3o
PyCvTUyynQbhKop9P11vsrqpaG//0957YjJZ3iP4o73xte7NzjjrEh7Z6Z1k
vjOrN2jzv/JTvaZ1w9s16xuqpgCuPaiz+egrrO5fv//9rtxjeHeDoNm5Ihzj
/dPe/J97LmkTvlHr2J6ie6yOH/DmNs3sNqsmUF46cOw7omPzKyfNMCZ5utj6
nW05k9UP7P+/7ZK7RefEbm2cIMLpfsSrq3ezwwwIj3iXHZqTlC6S33RZQuy2
aFbXDt8d2zj7U6NoVtfu7v/6c8WufW0XRtuz+nLAryoPeDrlHbu/Axz9Mu3t
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
7+LvW394PV6zVTGdmyPf5uvCx20m/Sij/I0q/Vkq81TZ/Vyc2x7t4bfUU4nd
ewU+9lPnp34ydn8NfHw/5ic93cruvYIeeZ4Xfkc1XZaXS3xSL7VqYK7M7qsC
tzQc+3KeF7vfCv7Iq/Spqj2bWsHySaY9WPy4ixq7Zwr859GKwz7b9ET5MMhH
NdHYE7P/dx199/7eplPTt7D7mOAzsGtOnfZWdj8ReJCd7cCzKkoiOZGvclo7
4sbBZbcp7+tYle3UWXJ2fw04/LvhzzEH6n7JaV72Xdd7arxOJZdHVO+Hfuv8
+KRZI8o7ovsRB+WGHdRZfpRy59bJrxrmi/az5QFT31zRK+H2sywP6vAvy6VZ
xWw/22HVueLT6koKfr/cIShv/N4Oz0XyeLls3DWtMbt3hvUz/G1LvSQz319a
hGevqPJZuIHVpeT3rRIVY6eTv1mc1t08z8monN1PAh5u3brNg9X6Mj6/qyz6
0O2+21n+D3CMi2n6mdWtqhj/woc1rkF//qqfKeB3ouwm9UhgdTvBx6tzZIK7
BrsXBnqMx9qDLp1Ts+rITt7eShhXoWwoyqNrb7bFvKsVu7cFHOPoitz0es1v
Zs9rh0ZGVyjY/WLg+PvQpMz8X7VMTsRbvtrJrs39WEf2RvePXP3sPjT/Rrh3
27o+8ZrsXhXwLj6hbWboPJfzeaGHpXf3X9Rh962A/7ev3M5Jo0SUP6ax6XiG
uhK778Pncflf9O/i3KKY8nlaDNXeel7C7h8B33a297Ds/9g9CD6f7XsT99B3
hiwPKiRS48xSTXY/CHhwa80jtbUf5XyeVeG7hz6LatUUfF5Q69SD49dtZPd0
+PzGHXMrzQ54s3wY4BePass9TKrpu7tGHM+5rcbu0QC/9T1iyQFldu8GfE6P
fClfW/1D/u/6Sk92YslglytVxfJ/1yEs309zUYaVpgaT/36z7VuvbmD7Nj7v
rtTw1MovOiy/aGnYjd+3tZ/L+bwgb4O6FffqKuR8npJN+uQiy+pqosd34Ydd
/0ww71c/z1IeeG3JGkcvdt8E+MKg1KUSKbuXAf6epQ3GL1BSF+FZ9kO1z23W
FPE5PyqzfUmdgYKLF9H4emol75yoyuwK805q0+ieQ1pmEz3wfI23g3/Vrz+B
jz2U6mhRp63g27t+14kGQzaxew3tFFub1VobU9yLv68NfOUjdRcVg0dU5wF+
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
yrnz7RLzpfz6aoqH5Fmzi+/ou3w8DfRrslqkylO1FCsHRh01XsrulcIOD25W
1dhhISE7h/3MMphXtHsGi8fy79HQ/qhv7XjvSzdE8dvbC21UywPK5O4hp66P
ns7iBvx7LsA9+l7+3PNcnTy/oKR5Z9taUVz3/UOjvaHTWLvofaXrMaFdnMsJ
h92O7hdunrW6muTBd6ddmJ4YVm9voAfeaXjw9oeLi6T8+s1wvtmz8/a1NI4o
f+ef+IaeLOiAW8TZEyYyK0OPnaPcymmcYr2xo3Xqgvu2pYRjPQY9AO/pkbJv
aw9N2ZnBLd3u95DI+P3+jt0ngtXta0Xxgc19Cpeq9VWScX5VVlvX8HzS/Eop
v27h42873lVuPN1HT+acs8Svjyc7r4OcZ72WpuUsqyIc68/pxov7f1jDzrWA
z9ZzsUiu58PHQ7SP2R3dtJzVP6D1WJvdnp3nV0r59erNnrkOF1zLpfy69154
wz0PzFm8kY+PAW+ZerH70lMmMss7caHLhrB7upDn5m/dshl91dm9XrzfoTT4
a8OeaqJ4XdsVWzfOqcf5uNyIdVeWtDdXFcUJ+fjqilZH+rk2N5IlnGg/bHs3
Fufk45PAs5Z2dfy4tFp63KdsUmIPNVFcV6K9KO1VN1VRfO9Y/webBg9g+aGQ
v72pa3p5H3XC+XcoKN/tj/N+U0tN2ZV78m7rB6uI4r3Vl/TWzLOrFcXr+LjT
U78egb97q8hmXN/059TaalGcrXz6LKu5fZRIP/S+jMvh3h3q7Z/qDeC95sde
Y5NsWVwR68CBD0LfXq3nw8fBnJ6kPfLoweJjdF/73fXf9wezPC96n+hrs7BG
xKeEvU/xc1zgawsJ4Xwcm+In556vPz+3WDp4gbfpmGWsvgL4uLsva/VjbiXh
4NNrqkN3zXo759e3a2bHGe6YweKE/DsRwHOif/R5ebN+3WNVPX7PvErCKZ5p
NXJIB9tSGkf8ew3Ac9zUHa67VkvLV6xRq1lSRDi+a7/b7cHRpawuGr33ETOv
46HH+VJ+X+P0qt2PvQnfpPz+AuMU50d9pmVVJbmXydvMeOVZYcbyneGHB6sP
P3yyk54M+d10nrgn4ISjpS7hoD/tk7y3aR8dwjEvNK35E3ijvwbxB96h33fT
7/X86b6pMO+cGmi0NY7qA7N3BB78/tjjsiXL18a8ab1ux0XPHuy8D/gXJaO2
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
LurP+l/KrcoX7cD9lcXSVtivfpSL+ADeVtRQ6bipFY2TfC8mOieuP3vegeyI
pjXtIqM8WtF6BtxO89qqEc+bGdIuiEnbzn+9ow2tZ8ArTrgn9T5oYEj9HJ7r
bDHd/F1ELcKfCjvye1d0oHgB4LPPTNo5YmM3wmE8T/VnrvhvVy8V59q/UG2k
glMnQ9rpvVq2q1W29TCk/WVeOVVS1LWbIe1x8OM1pLrxfRbi/Jd8/5zQbl0F
HuGf590Ykah+f7ASikMBXpfYfVJsSyuSDymH75mJ4psjvqPxID9YPndQf2gt
tmdbLbZbrBRS8RTdhqfvrv6/3pOIBwEfvl6qm1/od7T/AK76zt9o7elryC4o
n7qUo7NKSMV3lsyaohs7EcebYB2GiSke13XsRPMC+nmW+jVmG7oRDvRLY++u
15uI/XgwHrljK4Nv/7+O9Q9/wAvufzcdwq4H4IP2/y/L8g229iA5oLix5VuX
NKsOhrRHLkR3pOfZdjKkfbFSXyPugXM32h9QPza/qT+fu/cwpP559suvhVft
OhnS7lilcGPmJj0RHumXUxUuWtNsIkb5h0H+C6r39x2vQnXPvGbTcz/FrDoY
0o6wr1NVfLe2myH12FdPVi0s8+ql/IqwrjqMvKM2pCpT/r28kEea1j9U0Lxg
PLK79z2trpLE92z9wV16kyNlnbG/TinX7OCNTT0MqYcLuz7opLuie68RH/7s
7qD8bW0MqRcF2XonLc1pRjjwgefysr6/y1mL/XVN0jVGn5YJKT/eiju6sp/0
sJ8T5d3a8u9+NRSl/J/Ng6blJNgImX/tGtxvXOWI376G2nfIP7/Z+Mjrxomy
PGJ/4DEaHueajCR5xHfN+y2t8GDLdHxPGeBw3h0dLxPvnoXjF9KPk7n7tMWp
uAbQz73lHNKa1UH588O+Rz+PzfqF/P/BLxfPKWP5kHGKtd7lLV/0yfiUPM8h
s3pv3kQJKt9gr1cRd5GOOBo/2B3Tnb20X06SRPSAB6gve5vJ0gMO57VZVouz
A0sPfGA8Q9cHcjdMkSL443jHgsi+16FTEhHupXJ/xn86MsRz5XlOA9c8sGHH
T8YprKwHWJaw/P+dFwfJLXhR5Y8JAbVo/Bpb1MI/TsD3vpHrn9neFPcwF/v5
G9YyVgeXCyn/v83K26WL9EWIOE4fozjPuvXlZDEqPmgQ92juEyNRhAMf5Uuv
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
i1Ei/HvyvC5rP2MtdWXCb9nH/A91Lcl5
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwd1ndwVkUYxeEbAiRAIKEHCEioEhIEAYEQOobeggYpISSgIlIURxwsIGMB
FEQdu4MFBMWxYG8IFhS7KDq2GSdgGUFlLEgLgs/rH795z549u3u/e+/u/XIr
F5UsrJEkyR9IDeolydG0JKldP0k+0X4CH6NZ7STpVTNJGqYnyU6ZmeosmTfo
GfRMukp9S3av+lFKktQ08Qfq2zJlvHKZ3XQFPZt+XnYrduA73jZ1v9pdJktt
LbOd9xJexOv8afwZ/B30dLqMzqcb0K3oM+hMOofOozPoFvQ2eio9ne5K16db
0tWu7zhSXetT1rgf9+Ev/IyfsBmb8Agy6rgX8llqczUbTXFM31EcwXDzZ5u/
o/nT9CU4pYzmt+R35hfTLehO9Fg6h+5CZ8oelP0dY/it+KfzD2v/g0Mo43fi
9+Q/q/0CnsYMfkf+mfz25umILjiH357fjd9Q+6TsvzjTM53rmebqmyzTTi2Q
aSxTrf9PTOd34PeIe8vvjBboijx0i+fsXmSptdQ2ai5y0MP8c8zf1vhh5mmu
djDPVu9XEb+p9mlyrZGPS2XO4BXF/dEejmEYjUKMwdVYjEW4BpfgWlxlbC9j
Bxu7nO5DD6VLXcNWa/XWnsM/Xe3NH2BMEfpjNr8zvxd/Lp1H96Hn0fl0P/oi
uivdl15Ed6P70/PpArqQLjfXeIzDcmsOjGtT+6hDMQQXyneRP0v+Gvosegg9
Ia4Dk7CU35M/iL+Y7k4PoL/wPPbg89iT/Fn8Sv5+Y35Ghnd4ML8Zvz1/X7yL
qMJv+BUH4l1x/wtdVxO5H2O/4hfk17IvzFGgHtC3i/eD+pn6DnbjezyOLTio
79uYO/ak9edgMi53DT14A11DK7oW3Sjuob65cQ/QD73RC9uxB1+EL99IPlf+
PbqcrqDrua50pKE/vzG/Hb+Gdy4j9q/a3bOu9LtO0zdeprWaJzMt9gBm4V7X
2xhZsW9kSmWmynTRvhV5SKyRglPyD2puwHqswHLchuuxCBfiLkxBaewrYypw
ArdrX4w7kGutdGs1tVYHui7dnL5bn8eR5KAhP+HX569Xv/IcbshIkpHmGoHS
2NMy9fRly7Sj69DN6FlxLmBdXA9vj7HXG7tW+06siWdp/F5U4Xljz5U7z9hj
2kdxOOaXW4kC7Ir9Yp7v6zpn6MnypfI5dG26cewR9/2gcQvU64y5AkuQLVNT
pqFMhfa1cT7hMizDpWgtkybTRGaFZ5dqrRLty/UtxlLMw2xUYqI1XrXW+Woj
Y1NkGxh7s77VWIWFWID5aCqTKpMl04SuQWfSz9Hn0FPoDGv+ZM409ZM4f9Qq
v/cf3q84EHvYtaXwJxnzmsx56jRjU+gjHl4tugF9gq5L97F2zzhf47vBHyc/
Kc557VEYh0z+v/L1+JO1z0UJKvy2bdasVB+RGWvsRJks+qR8Bv2k/q14Lc7G
uC8Yid4YjEEYiAEowsN4ABtxynzp8U0yf4HfVW6/tOGd5E3BVBTr7osR8W5a
97h10637KD1etoQeoq8zOmEY2sB0SX8Uoh9mmqsEZWip3RwTImeeY+ZMM8+N
+q7Dd8iMfQJ2stk6+9zzld7hfO32aItt/EP8VfxvjfkGX8f31TM7bM6aBm8w
/2i5CfQmtUr+RvlqmUMyNeI8kamm69Dvxn8U7I7/AjJ/81P4W2QmxLeRzrZ2
KzSLc8981f4snZI7Ee+KmiqzzA046X5ONOZq+gg9Jv3/Wx1HSvwNSB4y56g4
n+TfZ3yIz+Ps1hfbv27sE2NfNrZvfMvj3qE71ggM5p1t7GPaz2Iz7sB9cd7g
VplhMiNl1tJD6GJ6XfRhbXy/zf9B7FF1u3WW8raou/yOL9WR8T/JBc3Wv1Z9
Rv+beBob9c9Td6qb1CVx3mOFtQrjO2+tndq78FZcF38Efxz/7/jem/Mmc5bh
AvoWdZ+5dsTZpBa7WY/SY9UH1IewPt5NufHyN6sLtK/EMszkvWJcP3Pfbq3h
6qg4V+mz6TH0LfRQekR8C4wvN2aNutH4DXgY98gUy4yN/73an+Lj2IeyO8xf
pO8mmUHq8PiWGb9a3zr1Tf13y76v/gd9fzsQ
            "]], Polygon3DBox[CompressedData["
1:eJw13HWgZlXVBvDzMvfeOTPnXrq7u7u7u7tRGgwMQlQUEKQUu0E6pLtbUBpB
BUkBESklBYTv+c063x977l7v3qd3POtZz5q59v7c1odO1jTNxsNNM5S/O7RN
M5r624OmOXGkafae0DQ3pf7F1Lcda5qFYu8de4b0ubZrmq/GXj323eObZue0
75R+i8deOGXn1LfO+SZL3xdjHxP7yYlN817qx6e+Q/p/mrYtct0ZUo7Kb1/I
+TZN+7T5/Zac/485719i/zXl8LQfPNo0u6Q+XdrvT/vB6f9O7Clj3xf7D+n/
aOw/pnw1/e+L/afUH0v5Suy/5frj8sCnpr5rrr9bjn84bSfH3iX2frFfin1s
7O1j35/jv5B7+3rKkfntqRy/Sdpvzu87pn2rPN8beXGP57dvpn3/3N9GqX8n
v12a+/ldyrjhevbt0v+LOf9raZ8mv12Tto1j/y72jSl/yblXzfluzrHfjb13
jvl82l9N/cFcb6exesfe9T3pc2OO3yHt9w3qmXdP/YMcv0Hu9bfps4D7S5/P
pO9SOdeise/NNV5N+1VpXyz2V3LMmu49fW5I37ly/GLOnT5L55ip0j5L2r+Q
3/bq6h15V7Pk/m+KvUme92PjJu0bxf59zv+/2Aunz0Lp+7ucb73Yr45rmg3T
/m7s52Jfm+svmPaNc/y2sd9J+wZp3y2/PZS26XP+W2Nf19WYNBYPGK134F1M
SPvVaXsg9edyf8+nfCN9ps39zunb5372TPsWOWbu2F+KvXvsKdI+Xezrc9xS
OdcqOfctaTs1v+1hvOT+Z0p9hdSXTvvX0n+n2Lem/96xV0v/29P/B/ltn/TZ
Mvb/Yj8T++uxt0n/WwY15vZJfatcf/nUj06fvXP9zWNPHfuA2DvH3iz2tLEP
jr2j8ZvrLxv7plxv2Vxvy7QvaOymfY+0T8w538r7Oij2drGniT1r2lfKtZdJ
/zb262m/OscvHvvo/D597FlSdkx9j7Q/Oag5tWfqB+X8EzIfFsj7vMf3z28b
pm37lIdyLyvEPj71p8zB2Pul/9Opv5frn5X+n037Dd5vP773Sfu9sV9K+6+0
x7479t9j/yb259L/3UGNaWN7+ZTvpP522s/t6ttq+1fKt3LOn7d1/55jq5x/
i/S/Km3Ppf8v0n/DtD+d+kX57fc59o625qt5u2X6bxJ7Qtq/lt++lnPsm+P/
kb7j87yX5PgDY78Sezj2ZeZK7veR2K/kmF93NafMLevK5mP1DryLI3KuLWKP
pHyQtmcyfs/Mte5K+79zrfnSPm/arog9Z+wnra+xl8z552Wnf9P13znnWy5l
1RyzYfockr+P5Prf62pNsDYclt82S9uElI9yzOs5/vJcb3zs/8b+e+yr0nff
nP/P6f96jj8zx9+T397PpRbI8fNbO2K/FPuKHDNf7BlTupxn1vS/OW1t7A/T
9nLOd3Xs1WNvmmPPTPuXc75v5X2Mz3h5JH32Sduf0+frud4dsdePvXDad4+9
W8ojadsp9h9S/76xN1ZrrrV3tryPm3O+rdN+c9o/yvkvjL167uUbqa+R3/Yd
qTlkLlnHt8mxu8R+IPbDsfeMfWjs92PPnfPdkeO3j31H7O/l2N3T/mzuYTT3
+4PYe8U+PO3DsedN/7vT/+m0fzyoNcfac2TaR9I+Z9pv7+o7+97f9kwjNWfM
HfvS1um/XuwzY98Te6PYe+X9Xxz7iTzDD3P83rGvNHdi/7ir67jeXikb9Gva
ZLnejMO11q2R8/0kbXel37rWm9gHxr499nqx54i9VuyDcuwGseePvbO57J3k
Wb4Uu8n5Po395dT3yPm/kfr9uf5JOf+esc/WN/Zp1qP0udT6nvNtkvNtFPvc
2PfmepvGXjv2ofaf9P9++s8We5VBjVFj1T5uP/8g5QT7X9o3HtQeaa/cNNf7
MLe0XY7frKs91d46lue9IvYn+d7vpP2aXG/htK2U40/xPOlzco5dLPYBsfez
puZ8u8a+Z1B7tr171ZSfeV85//H2pxzzU+Mx9rFdjV3H7p+yWeorp/8PUz89
ZZXUd0j/g1M/O/2/mv6L5relYy9pT831Zow9R+qLwhCxZ4i9yKAwziKpb5lz
fg4+Stkq9eXy29H2U2Mg/Z9JeT31iXne33f1XJ7ve8ZA6jfkuienfpI1P/W1
YabUT0l94bbGlfH1W3tG2p7L+abM910y53uwq3llfg3lt1NSPyzX/2hQGAfW
WSv2r7y/tJ2aZ/1m7CnStniO/0OOX9eelfbPpGw8UvPG/Pl9yg+Nz/T/56Dm
kLl0dOz/Duqbw3JHxP5kUHukvdI80/dlcyb1FfPbaYN6Zt9259F6Xs/9Levt
SH2Ln6d8NvUl0+fLqW+d+knpu8NIvcvPp2wxUuug9fAyv6V+2/haa7wz727u
HL+Fb2HMe/6Rqu+TstFI4TZjc+WU1WKvk/7nDOqarr1uylmDeufm9qwpqw1q
zBv7G6ScP6g5Yq4saI4ZWykP5HoLxN51UO/0wdibxb58UHPMXIMjvKsdnD/X
3zS/nZf6oalvPFbzzrmvSPmcOTZSc3vblHVGau30bT+M/Z2RWgesB2unHJz6
LePrXjZPWTP2sjn/1wY1Rh/P/SwV+/DUL8j7P7Kr9+zZv+KeU9857Q8Oao21
1m6XctegxsSktXV8rfdHuqeRWge8m1VTDkx9x/S5f1Bj0tp/Z/ovlPp8zpf2
2fPb+p7FGmp/Gan6uilrpD5n2lca1J4ICy0e+5BBXdNeM3PsFQb1zNZC65Z3
e7tvOFJz2ngyrk7J+Fk99o9j35fnPRG+zG+/NL5jf6erPd3e/lrsM7p6R96V
eb1G2pbO8UfE3i72mrGXy5y8NH2P8T5grrQflfrFMEZXe4A5+8fYp3f1TeES
+MS3tiYYz8b1WmlbwjPEviT9v57+O+X+jot9Zexvxl4x1/ty6vPmt11zzEqx
rzJ3Yu8O202o9+s9rzNWa5K1iR+29lhhBnPm2Rzz85xv6Rx/VuoHGSMjtcYb
c3/Jbz9N+zE5vpus9nh7vT3TnF4468W9Xe359v75Yz/cFSY2pk/P8Q905dPZ
E6ZI+5Wx58z19knb5IPyQeaIvVfsznzr9xzf8Mn89hN4PWWP1BfLb4ukbfb0
3z320KB+2zrvZ6nUv5vf9k3fWXKPK8Y+LvZnuxpTxpNxtdxY+Wjm/Alpv6or
zAA7zJX7u6srTGINnSf2nV1hBmvgHLFv8z1zvbezP22V49ezf8VeJuc/KvZX
utoj7BU35pyr5tijcj//G9QeD1vYM+wdN6R9tbRvm+M/G/vXOf6wHD+PPST2
T2MfGnsbe571MPbnu/K17HV3ppw2UpjKemfdW2Ws1gRrw6npv0je1XdHau8f
5PudZMzm/L8e1B5gL7APqJ+Rsn/q/8xzbpnnOynHL9QW5oa9Z87vO7a159o/
7aOwIMwLE/07/X+b+5vXGmGviH1IV+/W2vGQbzJSGBwWfyftZ3eFmWCnN2Of
1xWnwG/iP+EaYDxY719pv6Arn4LvjD/ga2zV+zQfpP2crjCP9dE6uXLatsv7
2zf2b9L+pbTPl2N2jP0DY76rNdr6aJ1cYawwkvflvZ02WnuG/cK+sbx7S/ub
sRfJ+3ioqzXd2m7fXHGsfCS+0vrm5lj9ZW+QsknqD+a4QUGy5qHU30rZNfVv
pvzPnMo7Pi71KXN/s/NPrUv8h95HmCb2PKkvmjK1NSz3OFPOe3vs53NsM1L9
HTc+9rT8htgLpTyd4ycfqmvtlTKa+sSUb6R+DPdjqO5Bu34jOf6T2CvHfivH
Dsc+Idd7J7/tn99ubsvP6Zwr5c+pn5/flncv+qfhpfRdsSl/hF/yl9izx34q
9vuxv5MDX8hvk+e3H+bYH6RwhR7JP0M5/pnhOr/r8Kv+kr9zeb6U51I/I/3n
SP1vqU+Wjr+JPXfsv/b+1F+Hq7/j3svxZ6V9kdjPxp7DeDFH+MN53vm7wpj8
fv7/JOw5Wn49/95eAjPxQ9bo548xgovAjxk7b+Z6u+V8H7t+W5jFunpQjye+
G3sO62+a/5P2f6f/mqm/mP4D+M76ZizEnin389RwfW/fvU3b67F3iP1h2j/N
89yY3/aI/UnsmdN/JOf+UVP+Gz9OP/1/nDJbfpvMuE/99JSZUv94uL6/cTCE
m8vxJ8ae2djwLUZq/BhHE2L/MeXU2NPFnrMr//AfOcc/cp3x5oNvmPYZjdOu
3oP3sWfKp6kfn+d/Lv0Xj312+j6ceh6jeTBtb4+v67r+SSmzG49t8Uk79f7C
Qrmfj3AXsWdN25Sxr469YeyZY/+hLX96htgLpP8VsTeP/e+cfyLuLb9/Lvax
KVOl/kquv1FT/jM/2jg33ldJeTP1C3P8sqm/kfqEHL9zjnnZt+s5rl2903zb
cfBM6lum/Cttr6VshgOzLqb+m5RNUn8/5/tn6tsPFf8110idz3lnc++x34i9
eewZjOXYz8deN/YsvmfKm7G36Pk1e6EFZXzKbqkvOlK23+2V1hhrzcO5/3fy
fBfnt7Vj/yt229Vze/5N3fO48tlhut/l+FO6GpfG53IpL4yreWv+rpPyUuov
5/zrNsUP4Al+Yc2J/UTs/2Ut/NO44nJnTnks9cfTf5rUH0/93fT/UTtpmjQP
xf5kYt2n++W2Pjqu1g3rx/pNcYYv5vhlUn879Y9z/D/zd4HYa6W84pwpq6W+
elMcon76r+CbpX5pzz8ar6N5vqtibxX7vdhjsY/Dl+Qas+W3X6btv/l9J98n
5YPUj037Y2mfKvZP0v7qcF3Pdf+X+3l6uO7HfX0yvrimfWIfaDlI/a4cc1Tq
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
8t/58TO2xTNYO635NBqDsZoT/NUP832mSP9rm+K0cdvjxmoN4/9+PLFi/MYI
PurT2JON1ZjFb33EnlD8AR5hy672WfstThw3DhfYa+3RYqaD9B8MihPHjU9M
/wvTdiA839YYM9bwYYOu9AD2PHzcSFf36X5vSdkXhs/xNzWl8aH1sY/Zz/aL
PU9begZrAr5sXI7/G0zRlIaIluit2E/F3j/29rGHcn83x/5s7K274jHsXfYI
mhb36X6faUqzMl2ud3fqy6Q+Vc71Qso9sZeF1XP8q7Efj7127NW6wor2Ut/I
t8Kn4AZgEFqny9P+aFMYGBbm+9jLcSy4Fr6yvROnglvhSz/Q1Jg0NnFy8Bbc
havj0z4Ze9aR8nX/FfvPTd2je50lvz/c1DN4FvgO1nuuKW0T3/XSpjgqXNWM
Kfc1xdfibV9OnwebuodX2vJZf5/6DCPly14Cazb1zYw1HO8dqc88Utwv3/mC
pt6psWC8G9vWUHvrkzBTU/dw28RaP6wV9rhbaVPammue2bPjGIwH4wL38GZb
38o17phYPJtncc4NhgqjwCp4runbum/3v6a2ts7/x6b4ilW7up8rm+Ir1uiK
1/ItYJp1hgrf/KMpf3X1rr677/9EylqpP5f2O1NfLvXlunoP3sfysadxbMq9
1tPYK3TlBxkLf0pZYahiVWJZbcrpI6WZEDN9KG2ndrW+WDusubdMLI0FrcVv
035yV+uWseKbrTJU48L4WN3a2tY4NhYeSVkp9detsamvmvqKOf6N2H+LvRq/
tCsuw1pvDbOWLTVa/uPTPZ9NEweD4Qs3sT6MFt/9554vE9MV2/1F2pdoK6Yt
tv3L2EvG/tVQab1gLjEkv2sXExczg8dmaspfFl+C6WC7y2Mv31YMVixWjFOs
U6yR9oUGTExS/JYejT8mXimmKrZKs0K7ApPD5j+zv/R4fJOm+ADxrQX7eBH/
XfzLc3geMXQxsQX6eA1/W/xGXIovAdOLkdHM0M78yH7Tlk5C7J/mSAyK/og+
Ff8jHiUuJj5GIyMGRC9DPypeKR507lBpC2g2xHA9i3gx/p/OTzyanpPe8oSu
NEDeh/ciFiumjf/BA4nV8qV/0h/LL6RJoU2h4aHluTb1YwcV4+VT0tfRv/Fn
xXtp9Hw/33GFtrSgtCVi+DcOlaYWf4RHWhk+HSrtmJj5vUP13r1/PhSNLs0I
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
/5o+Ea+P3xf/4H/DkzSP4kH0mOIOfHDxG/o3OmRxEvEo/D3drjiHeJCYmNgY
fEO7N0nv2VZcQbyBnvH/46DiM/SO4qzireLBYqqL9t9bLG6SPrKt+Kf4Dn0S
HhgfTL8B44pReAbYlx/Nn5bTI4eBBpPukP6QNhNHiUfFp+IucaR4Y/wx7tQ9
iR3RSbhXGFiOyI49NoZ5YV/abfprPhRfivacvp5eXm4F/16uq3sWmxIn8yw4
JrwR/gj3hFPBG+GPJuWSdcXr4ndxQzAfjge3AwviAOQxysuDH3A4ntPz4nZg
RhwQDgOWhElwWjgLWAVGwJngNGAHHBQuCCeEm4JZcGg4DFgGZ4Y3xh/j0g7v
OTecCewC04vJGKOwvhiLOIx4jNiLGIg4hniG2Ig9XMzEmLW3i1mIY4hniGXw
58SY7mpK5wqz40iNYVheDEXcRPxEbMW7wGvht7wTmEHMyJyDJexB8pL9vxP2
JhgelhcbFy+HsXCCOCHYCybFQfPJYVWYzx5lb4IF7SHWfeu/vYVPx7cTuxdf
tyZZm8Tmxe+NebE2OgdzAWbDseHIYDmcHl4QP4jrwzHiDfGHuEecK/7j2Z6v
4aPyVWkh6CPkCMkVsifaKw9K+c+gOHD8EE6fLpQ+FNcv50jukfPhwmFsnDeO
Bvbm8/B9aCnoK3D29iX7Ey7fmkQrRMdlrcLP8NVv6s9nDab1gjmszXxsvjYt
Pf2FOS4eKC44Ses8oddxtbUW46PkxdORwUMwuZgDTuqCvk1cQnxirOezcNc4
bNyzfBQ5nvASvSefAUeNI+JLyEmUmwiTwCaHpLw1KD4NX8UHgkFgD74Rn0UM
AqfGl4F5xVxwMLAwHwyHh7vjm/E5YD5Yjy+CwxULERPB7eJYxSnEK3Cvv+z9
AfeD24AZ4Ax4A5aAKcQlxCdgDRwInAVv4UZgItjnhv778wFxKLgTviFMA2fA
G7AODAe3wW+wHZ8J5oF1+FJ8MDEaHBnfDKaFk+AlWJcGnE6EXoRWUMxSXEN8
QyxTjITOmN5Y7IReRB4EXQo9Gg4Nl/ZKn5+BU8Qtvtnnn8AAsMBjfT4LTeOG
TeksaYVxTLimT3v9MY4KV/WfPt/B+sJXeK3Pd6DBpLeku6RF5sOIofA5+DY0
ZLRkcgLkBtBU0ivRLcktsHbAqfCqNQSGhU3P68cPH1AMi0/DNxTTFDcWPxbr
FJMR9xP/E6uh8aTnpOukbcZ5iHHa03AhNGq0anRwchNwLrgXuXDyueRvTfq/
AgalxzV/4U1aa/kV8rnkAsN39Lk0d7R3dHu09jgreFVu3Mz994ZN5W7I16Dn
ea/PQ6Mvw2HhsuTOydfCF8q52iW/vTFcmkP6MToyuQdi5OJW4ldi5zgZMV6Y
FFeDk8HNyE2S/4dDxCXSXsm3oiGkD6QTpNWnYaNlo4uk/aeJpY2V0yC3gUbx
hKZ0krT7OCgxfhgINyUmKw4mHiZWy6cVw+Wj8nVpiOkH6QjlisB4NOV8QNgP
Bqbr5FPCxjCpHFQ+FqwKY8rD51Pt349fOmA+J2xLUy8vRH4IrT2NP102fTbt
P009nQK9Aq09Tg+3R3tCPyKHQp4FzSrtqpwTun0aVFpUGiL8p72SnoZPTDMA
I/KVxfzpAOgBaAFg8Fea0gnB5jCuGA6fE/aFiels+cSwMs24PBH5IrTk9EJy
YfgftB44MDFQPiluDMeKa5ULRg+H08Jt0b7Qu+AYxOhxArgHPjhfXK6efDoa
ZVplumm5dzSN9It0jHI7xPDF1SdpxCcURyNGj/PA3chflPOL36Cnx0GJ+eNA
cFM4V9yr3DV6PppYeshJOUVjxafS9nhGGBhfSmMjRiVPCacphs/nwnXCnxc1
FdMSt4KhL2hKtwRbi+nTWdBbiPXjCHGFtH/0QjA1bRSdFqzNv8PPuhZ9kvWR
TlzunlgMDk8MXMwHt4djoAOWe4F7gEdolvhcuGf4lA5WLgXunyafTp+Gi5YL
R07nzifDndPkyyujGacd9468q9ea0kLiNOms+Tib9t+bTo1PiGuXw0jHR89H
e0//LRdCDo5cHPyH/8eJ7oq/g//ATUzftxPTyv0Z7vdz44eujc+1ef/96MT5
nLh084XOjQ+ySY836ND4KLh+OYTyGGnead9pdml3l7QGtzWm5H3K/zTW7En2
prWa0vrT4NLiLmWNaytGRCcuF1DsiDBX3vJ8TWmFaZpomxZqSksr5kFXLBdY
LETMg45Xrq9YiBxJeX/rN6X1M0fMlReb0orhtGgWcTy4LnyN/zeLLp1/xefg
e9CA04LLKZY3THNMewzjwro0c7RzcpblOcqhkEvhXHSL9IvOCb/S2fFR+dr4
axpWPhuunEaZHpnGk9YTxoV1z2xKW0bzm+6TNKS0pMY73SEfEFcOX9KB8elw
7fw92kyaPPFf+k7vSh4mbTHMQMtOcwpLmDPmzrlNae/4z3zXJ/v1SDyDZo7P
KvYhBtc2lWspX/OlGH9oSptIX2j95A/T3NE7wqiwKg0z7TB/gSaYjyoWQJ94
e1P9xaP5u7g3mlLaUPkkcr1oXmlf8QO0rqO9TVPKP765929pXPF/E3v+QL6F
XCLtzmcPsBfQI9IW4lesTzSI4t/2SHns8tntnXwQvgg9Me2vPVGevHx5e6W5
R5dK82gOwviwPv00bTX/goYaByE2RiNKK3p+2t9uy+fge9BY0lrCc/Ji5L6L
lVrzrf1yCmijafho+XKaSVp3MTU6crneYm38aXkOcrnFlmAAWIAem5YdXpD3
QHMgtiPmSpcPo4jFwkSw0aJNaePtIfYSORVyK+AdunO5/WJ38Iz/A8A7E6uD
MWFNOTdyb2BIWFLOkdwj8T0D2jsUC4RZYJdjm8pdgNGsrfLVYDcYyFosHw42
whHgCk5qKrfC/F+kqTlqrsJUsNUxTeVqwLSw7Z5NafvlPMh9OCD2TW1hNFhN
ToPcBpgP9pNjIdeCJkP+gzyIGXq8LC9C7r1YLcwH++3VVC6FmL08IbnGYvly
rOQP0VTTVtuf5QnIncediwHT/cv9nbLHb/IKTDKxYXhcnpNcYbFk56cNsOZY
e2By2HzTpnKlYFLnlp8Pq8K78jKsyWKPMLJzyT+GnWFAY8f/FwAbipfLo+Bj
iK2b7/Jq5NqLxcP07k2ePqxvDbAW2GrkbsjJkZMxdewft7WmySOXpz1prRur
dyPPmi/BR+GryMGSiyW+LwfdMbQAMKmxJs8eVpUDIhfEK/pVWxjzkz6vG/a0
RrpXeQzWTj6HbyUvnS/yf4iGGHQ=
            "]], Polygon3DBox[CompressedData["
1:eJwl2HfcztUfx/HLdt9CVkL23lm3kT2SHZFVREZSKIqkpYiUklTiZ5RKKSJb
pET2zG3TMCuhpJLxe34e/fG+r/N5nffnc873e32/55zrLtp7cIdBaROJxAXK
QBOyJBJb0icSGzIlEgMyJhI9b0gk1icnEndibegcz+XMiUQDvtvFn/MV47ud
72/8Dqw5neH7S1yY71g6UjwdXz2+ulgDnkLiLLSP7xmfP6b5bxLX9W1Td59x
t2lvp0H6KiUlEunl7lJvN99RelduY6w1zxI5JdS5wxiz8aN8+6iwsrPECb4D
4oPyDtGtfGmxw9hh8RGqgq0zbgv1WtEpaZfkNuJrKV5sjOLGaM5XH2uGLcKK
Ys2wVLkLsa30jDnXMOcl2EljtMf+UO9f9TZgd4k70WXsStw79e4WL1PvpLl8
ijXHOmKl1S9DLY3RAmuHlRSXpVbYed5z9LW69fXV4VmjXUL7NppnjFT917Ad
5rJL/f1UWe5INQ6b6598F2Puxm8Q14O9IH6e6ovbqNlVu5x2eWottxnWAVsq
pxTWAiuO3RxjYleMsd64Sdhvxn0PO41V46vAn8YY9/B2p+X6rvF20+5MV8z5
qvhPaipuQj9hF8UVspq7/Kzy++Lt1S+PVcKSsPuwdthC3rPG/ZVayf1M/Ifx
+2in4UnQh8bdhufWPsJXBl4pflX+Dmygmg/Rfea8yv3Ljh3kK8G3mW8r5cJy
0kRsi3gFX7I4C43A1mH3qjHe3H7HLtAT4pV82bRvoNF83/LlwTdo76P9VED8
NZ6BJz0Nw76KMc3vr7g213OBVmB5sUw8H7mmf7Fa5rzUGFf4rlNPuav4iqh5
RLsxbyNayN8Lm2R+E+jluIfiN9Xbr3+j/sHi3uq19Uzvw1LpE7424nx8V9U/
b8yrVJuvpe9jkJxe2m/on0I3UUZ5c9W7zFdT3+fmc17uOWprToviO9PXRfsf
7G/6gH9SvPtyH1bzQWps3Pm8Z/SfphT+ueKrrjdVnKrGTno97p3cH7DZ6hzH
qhp3Md9P2M/UTO6CuC98eYzxMd85vuXxXhqnObWg7/RN5slMv8h7l+8E30d8
N2CnsFPin6mGMfJj17DfxdeoDjaP9zj2I1U37sfiQnw3qp3GdaWlunzZfS7X
XwEvT/ONlZXvkrz3tX9RL4VvWbwj2EXqyL9UvMi17Rd/T+Wx97Bm5r9bnZ00
x/fWVPw53yGeE9SY7xO+JfGOxJxjzcIWi8sat7i8T42bbF4Njfs7fkz/1njm
Yw8Rt9c3VO258V7RnfHeGOcf7UvxfunrKe5BP4u/jzUV6yx+W35Odb5zXXup
kjFmxH3m2WTcx9Xqg3XnPYUdiP1HbjfxTL5fxZv5hvP15bsXP4Odpl2xzohn
850Tb+EbwdePbwGWZLzt2GjsgXhezSXbf8tDwm1ITBZ39Dw/qr+DOh/LmUfv
4N8x7KF8fFPF06mgdh7KTdPEn7nPO2PfotiKpvjTSp2WtF/f0Xgn1OtkjGHG
mG++l+N+Y/fzXNH+l1bjd4m70knxiXg3sS7iD3j/Fj8lvwulYAfUPh/7Dr3I
VxMbpl1MuxSVoMfE/fHM7kFGykDz1ZqPP6J/GD1HC2KdwJP1nxVn8fmZeLjc
/Nr56GZaiT2G/cFzKta7qCFegWfV/4K5dXb9y8XvBVP3Ov4k3j/WA/GY2Hto
NC0W96N02mkpG90vLiW3gM8M8i7JX6PmJrrV/f0hDjP4beqtxQYI/8T+oi/F
q+kBbCyNoY2xPquVUe0MlJ56xPto3slxrdQrnmdjrvK5kr6gl/DVPofw5VD7
RrqIDRb/j/dg3EPzeIzuN5dJmf87Z233ZwdVxPrxnpZzni7QQPHB2Bf0l6Yk
B7SnsMPYLeJicR18Q7FnKJv+Z31ujrMbbaJyPJON+XzsXfqOyS2Lladzcgdg
W/kKi1/jeSN85nKErxBWJJ4FdZ/kWx/vvngSzys0AtuAlcJ2eWdexwbKHR/r
nXYTn8dd5wn6kdbFfkWb6BfxKPkl5ZaIZ80YT4jfwnPo/5Cm0+44yxijaKzh
xhij7qA4/8U+Z/7L6Xg8D+Jl5pzWfc5HT8r9Ru5X8Wzoe1neqzRS7i6+qTx5
8d5yy2HLYk+K78IYzeM8hS3FsmNjxePoUaxgPINq96XucQaOfYlniHY36hp7
lfhu3uNxTqH1xugknhZnYPFQtYZQO+xDc6wi5yc5B2iGeA5VwipTMZop7hPf
nTpH6Wrst2qNxqrE+kjZ3b/nxDvwW+P5EyfT09hO1ztFTh68e7zv4cNew3Jj
rbGi2CEspzgX/Yo9gJ3l2aedSnvpN3FmGmleT9EoShI/zpvWeC+5rgmxL/vu
95r3XP2Z4yxGDbA15ldQ/YniF+kReQ3imY31i76l8TyH4hxvvKW0jA6La8b7
pt4K2kG1wm/OXXwOiHMXX5JamShjrGPUH++g3vOxTsc5O9YC8xot7h7fa9SP
cyut891XxStr54gzJR2IZ8gYlbAqtNa4x7AF2HbffdVYC7Ej8T3KLRlnOHk5
6ShW2xwmGmMEDada4j1yp8eaETWxm7Ft2CviN2KOWJl4L7EJ4rdjvcGKYUOM
8XKc1eKMTXe5p9v5JsZ5hLrwleYbyvequGn8VqCOfOVjLcLeoYp8ecWD+N6K
63LtjfmKYw9jb2J3xDtMJbBq8VxhucS548ylXhF7VEHtQ66/nr5aPGWoSDyf
6mXSV59vufmli3sa18y7030pzZc3zrE8GWkHtpBvb/xOi2vm24WtxcqIy8Ue
jx3EvsRKiUvHvhhn49h7qZi4KM3C9sRZyvzyqr1RXAOvbszVsXZq30Q98A18
t7m+ye7HmzSF6ojrxjlEu0+cIege11FYvVu0m2qnqFWTvlAvv1qF4v7Heq7e
KTpJpykFr8E3htZqf+O+1MNfEFeislg2NW+kRurWi3U2nkX6msby7DbGNO0Z
1NecKsTejU8S3x6/+6iT3KexRVjnWFuoMl8vbCS2yrgpWA7sPuyJeJewWvF9
YpuMMTjWTapmjHyx1tFzcY6gFOwWcT+548Vr5DaMM5Bx+2Lj4kwS14YV4Nui
3uhYF6iM3EJYYRobe3o8K1h+cW+5o2IPlVtXbnv1emJD4n2Pd5XuxNrHWUvO
PDqibyrPWffxsHt+gBpi9bCq4dN+n+bEOhW/m7G18j6iPdh0rLbPVHl7Y5+g
avEu8j3E0yHeqzg7GXcE77v6voq1wXjDxZtd29NxjqIW/EXk3UQjxMOpCJYn
zra8Q8W11aoT34l6j2OzsdbxO5rujnVSvQ/inYn7L7d6/L7AZolnxn6DVcRG
yf00ngtz6Si3GtYo1k/9DWlmfIrH8W2IfYevvjm/KH6WlmBd5XWjrvF/C97p
cvrHWZd6YAP5Xuf7Um4zrCRPN2wQtgKrgbXl+8b82mIPxR4S5yK+jdiD4oF0
PvZBY1f2zlSTk6y/U/xfg7JpZ6XssdbE84rl0n40zkhUQL2ccc6J81n8TqWK
sWbFGqRe9bh35tAl/g8RjHegnKk0jZrEWQ2/YC2ZY85n7DfV+f8PvUpoag==

            "]]},
          Annotation[#, "Charting`Private`Tag$206057#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwV01toyGEYx/HX2WwilkNmTjnLFOaKknNygStu5DiGbQ6z2NgwzIay5bCW
FTVJkUPKWQ43hguHkPMp5TAashHxeS++Pb/39z7P8z7////995qXPSOraQhh
AZphksVEzEQPjEIqJrQKoapFCIWtQ0hICmG9eLRtCOMUjUcK3iaGsJRfxL9H
z6Mz6A8t9VebbZ2odoN4jP8pIYRavT+LJeq34gC68DqjE57jI56iK5LREVdw
GZcwQ80UTMcw6zQMRWtnFTjriLPG2BuNCfhqrx51+GLOFXLK5Mwy43HebPE9
fzl/M7+OzqFL6anew0H7Rdb/PFcWvTI+j7pqVKGpc7fw69qE8E7tMvsb1Sbz
i+nT9A/+KrqC7sDfRJ+k0/Vvb8buYo5e2SjDCOsEfn/xldpM+fnyO6rdTJ+i
U+kS+hpdKHc/DuMQanAQg+TUmq3SbIPpW/Qveqi9JkiO39FzzeVn6fXGtznh
/LdiN/nbeFf0/2KOM3K2WveOc6En/potj1ctp4/863Ia9P/Fz+VX8tvxD/Hr
+S3pfP5h/iD1aRgQ4d+U0yjnt9o1cqrkNJilET/xkr+Ev47/iF5AZ9NT7A3B
YDSY+3GsEfvpuUNObby3vMkYG+85fzv/Ov+O9W3cQh/0Rq/4g8RvZJ7P5in3
7DfMWC3+cW4B/yN/mrzpeIjTeI2z6BLvg/7n9X8gfz6dSRfokY9i1Ot1VZ/S
eF/V7MNe3Mc93EUmVmNxfH59Vsvdo88TehGdSzePd0CfdPO84C/mr+VvUbML
2+Ndwm4MxxxkoBz9zNDdLH3FGvUV4nf9UsQkfqq4UszBOVzEBZxHLkYhHc+c
m+HcPOfusR6JCgzUayf/Nr9Ur2PxnxcrcZwuEy+7e1PNv1Bee/k19DezbDRf
EQrjP+9b5sX/X/wPM4iiIA==
            "]], Polygon3DBox[CompressedData["
1:eJxF3HW47VX1NfDjPuy779l3HxUVuzERO352dyKIrQjS3SCd0kg3XLq7VBCk
UcRGEFQkFURCASWMd3zOnD7vH+s5a+61vr3WXHOMOdZ50QrrLL32YGpq6k3D
qalF8veN46mp501PTb1sNDX1k8nU1Evz9wWxn9+/vS7tz0p9p/SfTvuSsefF
XjRtR87mPLFfHPuFKW9O/d6UxVL/dvoP0v//Yr809s6uF3uYslvqf8rxx+X4
F/b5nhX7yrS9JvYznS/20bN1vh3T/1vzp6aOiv2Gvp8Xpf1H6f/fBVNTW6X9
ybEXpv3VaX9G2l8Z+5q0v2Vc194sxx+T9r/PTE39Mi/g/nlTU6el/Tlp/2rs
G9L/0LQ/nvMtl/63pf2w2Pel/fXTdb/Hxz4qx38q/a9PeSj1e1N+mvpPnHOm
zuv8v0p5IPUtc64n5PjXpOw6rPt5Seq79Pv4cOy3xX5PykdSvydlarqe54hc
b9HYD+dcD6Y8JfUnpTyU+t9Tnjyu7+N9vyD9r8r5/pb7Xzvn/m+u/Z0cP8pv
34n957SfEHvx9B+l/ytG9T6WzN9XxH5tyqtTvyPP8N2c+z85/hzfKv1PTdsh
aXs09rz8vTftf0sZpf6utL8y7a9K/dq0v2Nc53Pen8Y+OfZlsfeK/Vjsv8be
Lvez6fwaP7/J9Y7Muf6d6+0ee5D2O2Pfkv57xt439nk5/tDYjxufsSexnxv7
ih6PT4z9jNiXxX405/uN+8v5zoz9nrS/Ou139njbPvYxsQ+M/c+0/yNlv9T3
b/ufOe57Of7WlEdSf35+f3r6z+9r3pr3u2zu//epb5nz7Z7znZK2g2I/kuPf
G/uN3mfsn8V+e+wlpuudeDeLpNyScz+Wc++R418SeyZtb0r/X6T/n2bq+u7j
vNjvTPuSaV8i7cem/+vz9y2x/y/lDam/f1y233+e/vfH/qhrxT4x/f+Yv2ua
Pyl3pD6bPvun/p7Uz0j72JjL9aZj7xf737n+H2L/zhhI/V/zqv6XlEH6zKT/
3ak/IfXvel95HxvlfLfHPijH35X2P6f9Nu809sM5xw3mSs6zs/k3r+bKtSkP
p35z+l2e+mWuEfvdOf4N0+Uj+Io7Yp9hPKRt2xz/59i3xX409m6x/5rrr5y+
D8beJfaJud6yg/o+28Re4Hyxj/Bdc76H03+NYR3vedfPOFyLPxrUnPl72tcf
1v3vbf6Y/2m7ru2p2LcbH7H3iT07rvlgXnw/539W7A/FfnvO8UjO9WDKaqn/
Y171f2La7x/UMY79b+7396k/nvazcvwkv/019iI53wHpP88cj/2alPmpD1M+
mfpv0r5v2u9fUN/XdzZ/9NH3Fznf+TnfnWn/6rDe33ZpvzPt5w7Kv20/W9/Y
9/Wdz07/J6T9DgtEzrdX2h+I/aV8jw/GPi32Z2N/errGz8mxr07fH6f8KOWq
lNtzvjPz948538meJ+XgYR1/evr/Je1XDOp77eT7xb4m9n2xT03fx2P/elA+
lK9+p+fM8fsMa0xvk+91ROpfzT18YlQ+13gyrk7P8XfHvjL2PbFPiT1OOSD9
70rfU3K9X6f98LT/Ke0n6Z/3s7zxG3sH4yvtF6b9+yl3pb52rvfFtB83qD5/
nVfP7FnvTf3PKRelfrH+qd+d9/P4oObDwTnfPTn/ijn+7n7eP6X9j4MaD7vG
/mWucXDsO2PvGPsPsc8ZlA/gC27L8Z/L8b9O+9beX+wVzOXY3469Tu7vm7Ev
HdQ1to59SOyv5P18aFTH3Ji/Hx3WuZ6b6//b3E553rjGifHyWnPSnMg135j6
z1I/Ku/nJ7F3jX1N7KNjX2ncxN7BO0j9u2lfNfUfpH64dx37LcZE7E1z7cti
7xh7l5TLZ+q8zr93ys/5gnnVtmfKT7XlPp+W+rNS3pD6y0flH7fpNXyz/L55
yqYpGw8qvlhcPJDy0dSvyjXWze+7pVw9U9d0ftc5Mvf3wfR5R/q+3ftJ/eK0
b5L2S9J+RNovnVfXcO4fpn7JTD2v5944z3Nz7LPN/55PZ8VeLvY+7p/vzO/7
p74fH5r69fntmNSP5kNmqo++v0zbMbneNbH30hZ7C98qfw/lr1JuSv2R3OOP
8+x75dl/xZ+n/3lp+4Y1Pd/zt7EPi/3b9D0x57ssf9/K/3j+1C9P+WbqK6Rc
kfpN6X/aoK7xc+eaqXb9Fub4E1I/OeWklONT/jCq39Rvnlf37f5XMedT/3GO
/07qv0r92By/a+yXDiq+/GXu7y3DGlt82JtTP8nz9Hr5aMcH1vdzUk4ZV3z1
6fR9d/pen+MPjf3B2O+M/ZvYJ+Q6H479jtjfzDvZLef53nSd82BzToyU+vZp
X2JS9jWp75m+P837OzT299O+e/rel/ZvxF5/un7TtnzKRtO1plpb35tjPzuo
mO89qR+U394knhMvz9Z6JbZ7mhhoXDGIWOSZ1rXUN+G/xMYpr7Ne5xxL5lwf
S3lf6mfkeT6a+gdSX3F+/Z2zU96V+qk5549y7AE59l/W7thndTwknjoif8+P
fXnKPtaotJ8m1ux46XTP3/Hbf9q+NvZhsady/9/P9f8v13pbrrVyrr9n2k/v
d/nf9D+m47efpJyW+rfzPRYz7/ikfI+P5e86g5pzfIzv4vt8pNfAA+bVfDav
V8j5PzKssWPOfHhY8+cbqX8o9RsX1H24nxekvDX1I9P+8dQ/mPpvF1QMc2zs
owa15p2c9i9aD+dVPGZMG9vm0XE9HvmSpxrDqZ+U8rnUzzRPjffYn499Wuy1
c/zp+fu+QX0D3+bGtB8yKH9rfbg19vmDWkOtpe7Pt3wVn6ZvyrvMn/RfI/2P
jv0Jcyr2mrHPib08/x57g9inxf5y7C+lnJr6M8f17pZJef64ftN2Vvqvm/7H
xF4q9imx14p96rzq652bG57Rs+6f+gF5vr/kHP+KvUne378W1Dn1d9wPJrUG
WAuemHd5Ueynxv6n9Snlaak/PeW+1IdpvyDti8V+NPb82AfOVh99Z2JfaOzH
fiz2go4Hnx176djn5HqHzFY//R9JGY/K96yUsmL7KBgH1pmMCn+9LPYC86vx
Hbw4jP2U2Bfnei8eV2z+1Ng/jL1E7KdM1/y7NPYrGx/sAIc1/lgk9taxp2K/
KPZ0ry//WVCYCraazfGH53qn5H0+JfZ5uf+tYn8XJhjUGDV3zk/76oNaA62F
B6a8LfVj0rZa+h8c+z2DGhPGhjFirBzGj+b6x+Xv02M/w/icV8c5/h0px4oJ
0v/Z1o/UV4WHYr9pUGuotXqflCVSX5j2ldO+V+xXxj4y9r6TWnOsPb+PfULs
642L2Aem3AAjztT13cd+af+ZmGdQMYPY4YLYq8W+EB5O+/dirxX7gtgbzta6
79k3TLloXvlrvsscOsx8yG8vSv3F1px5NS6NTz6Bbzgzfb6Q+vW53nqzdYxj
zcMDc70zYr8s9sGxD/K+Yr8/9tmxD469fexFY59vfMXeaaa+j+90aOyzY3/N
fI29vvkd++WDOqdzH57yXutNyhGp75byQutZ7mel9N8h9nNjH5Tj95qU/+Ob
XMO1dk9ZfFDPuEfqO6c8z/tN/xVn6zv73nz+4anvaY4P6p17945xrPe0d86/
T8bfmRmPC9tfHxV7n9jrxX7Y9WMfH/vw2P/2fjJuN4+9RcrpqX9jVOuVdWuP
+Nt10n8n62vsZ6X/WmJo7yf2t9P+g2HFUmKqC1M/cVjY0hp4Wuob5vgDrI+p
PzfHrxt7j9jnxX527FVjbxP7zNjP8L6dF9+Tcm7qK43K9vuO82t9sn79SGyX
/lum/be59iqxd5lf65v1TMzzCuPNmmu+ppyV+nfSfnLqV6T+0rRvC9fH/mHs
nXP8LqPq77jdY180U8/nOZ83qef2/NumXDys9e6M9L8q9ZekfYNRvU/vdaf5
Ff/DBwf1fPkk/5z2Zd13+n8sf78W+1Mp7059QeOdV6T/2ql/PP3fb/1P2y9j
f6D5njc23n9K8zOv8g2bDxKfvjXtv+549Z3wfuxfxf5K7DVjLx37Bu8vZZnY
a6V8fVz46CjjIPbH0+fTKSun/k33mPpSKaumvlrKZ1L/fd7PWYPifHA/MM8F
3tegsNAXcs4V0/eT6fsb7zvnP25YHCGu8CUpz4UP+3pPbbzlntzbl5vvwjdd
b/yOKj65Mn12y7l2TftJ4pfYi08qDhePXxR71/k1v8zXhbGfOKn5+xX+MPaT
Yh8rnsjxK6Uck/qXxnVv7vHJzWfiN/GX7v2gYfkic/bI1D8BX08XJ4Ib+dyo
4hlxzfbz65k8G8zp3e4+rFhu/5QLhhV/ipeu7hjzmsY/RzZ+uoJPGBR+gj/E
4LATTCHmxuGYb+bddjn+91mDPpX6Gmm/NMfeHHspcyr2lbE3mFS8JOYWe/+p
+cqFfHDa1k/ZI/XdU340U/wsfIRvXFS8Y95NF2d7fOpfyPXXTf2k1HeYX/Hw
BmLx2Iul/975+zHjDWeW+tLj+ra+MWzNp3uf3utW8+s8ziemPpVvSv+FqV/i
vU8qvl4v9smxnx57m9hbedbYL5rUPDafj065LPX5k8L+Hzd+x4VtrZV86GHD
4ixxl/ulvuX84tvMJXMK98nfmovmJC7Cd/Q9P8CHDmvNdT7nhZ33zN93mcsp
e6T+9lE9v/ewxfyK4X1/42Dz+XVd18fx7TUsruKT03W/7vuQceGTaxqPfCDH
f2K6OLr3j+qZ9P1MyqfFUs2P4C/OSP/HYt84KP7szI6/4E/8hXhrs5QHBhWj
idUebT7Ob9o2TrlpUJwobvT145qv5u2PJ8Wh49Jf3PZ9zY/dLGaMfW/zV87h
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
XAWOxJj8f8rgvzA=
            "]], Polygon3DBox[CompressedData["
1:eJwV1Ht0z3Ucx/Hv4bjMqHPScVLJ6ajTOQ6nWrfN5TSVyCnHpUOahrJ0sbkM
u5hlG7lrOsaSLWGYxqpDRi5TZ7K0uYV0SpS5h0Slo6PH54/n+X1ez8/7/f58
vr/bva+OGZDWKIqiFDTBmpgoesqiBw43i6K0VlFUxD0uP4bvude5ni2iaL48
D90aR9Ez8ix1j8hxOKBupLpiLkGOx/KmUfQml2pvnp40r29jNI7ZK3ORl9QN
xs/cJTMXWC8O95Er9Pbl+ulNlLvgBbm316FcqboSnJV7IYlbIi/Fs/Jc/f85
55RzUrlLsWr1Z1pPRks1JWrWcXV6q7EDK+SOaG2doeYh9JA/VpvVPIry9N7O
LZd/5QfIg3DIWblcIveo3rlqBmOYvBifcxtQjtnyeUzRNxsN6lbqPcE9LXdH
uXljuQYuWR6OjZ7lhPf4XX46TtpL4s95tg18r/Ds2KA33X5v+4nOi8f9eEI+
Z2+nOa+pS8ExZ5/htnJbUI3TcqR/aXiPMAuFeu9Ctp5JiOWWqOnPLZQLkcCV
c7MwEzfcaRR/wf1WWidaP4m15qfa38w9J/fGUb0TuF32styhD9cXNfJlZxRb
L0Oy5xgkv4V863x9KUiVz2CCmnQ05haZV4f5PrdvuJlcvXwtfB7hfcLv3Jdc
DHfSuTec14jLbBlF193vCHeFu4ZJXDk3iFsvV4bPiLvJHef+lv9BBjfKvErz
1+O8eVXOOMQ/b32Pe7fHEDUXMVfNFky0t0fdn9waeR2SuE3cQb3x4buorxUe
UHMV5WoqMMTeRnWTuCr5M4zgtnNl7jfA/SrcbTU+kgtwG1ckLwqfh/mr9O4y
e3WYLV/DUOvVZq3CaHtJ8jb1E/WORzq2yrudM8f7XBPuo26Ouk+5PG4G15aL
41ap7aanKxJQFr6r/Pv254f/CuQ791u0tm7Ot0FnNUfUFutZGO6Nw+H9Vles
rlZNVfgPUPcvV8h9LX+BIq7Q83bUs1RPCcaomca145bIHyKN2+nOOXqX6dvm
3u24/dw+7MV7nqeAK9Xb1X4X9DSjRD5gv9B+Hbdbf4Vz/8IO+StMN3eXmlPc
G/IYHA/PzJWaWR3+Q8zKwQ7zKjHE+mUkhe9c+D7ik/BZhmfBD3KyeWnOG2jW
i5hi1kZ+hP1NZm7GOG4P14/bJ3+HGrkWhVy9vDd8FupOh9+Xu72CE9xi91uB
bM82Nfy2nNVBzUhkWQ9z5nDk6t1t3gzz9uirw3iuibpx+saGeeG/xKx23BV1
V3ETd8sZKDBvpJp0vKM3lrtgv6ncDFncQWd8wB01/0dM4GrQ1v6duBXt9eV6
XWDeJudux+XwuTo703NMk2+x10ldhd6L5tSbWYOz5m9BqvX+8N0O/5lyd7Wd
9DxsThxy9D3I3RHmyJ0xmSvgVnJT5bwA14a7bl6M3ALZ3Fr8YvZPZp9EA/qE
91Jvf68dcB9OqZvidWp4Dc+FP9TuM+9S+H8Mv0d7v/EDPVd/1HI5nvV/+hIj
Lw==
            "]]},
          Annotation[#, "Charting`Private`Tag$206057#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0stLlGEYhvFn8pRWQwVBIBFCRFCkrcpWRfgPVIgxJiQZdvAASW0KNSIq
FylURGG6MV2FBU0qkm6Ngg5qgVKD2SqSsqLChf0GWtxc933NyzffC19JbdPB
xkREPJaulRG5mJS5vIgH9i69H0txp2T4PrtMn8ArWC8/+VH7pD6OzfiHa8BG
OSN/7SNZ5kRU4RIucCm9ThL+/Dj+xgv5ol+UX/asl0w428ZP6dOyyF/DYazh
L+mX5al9FYewmt+ib83+ZlfgIFby7XqLDNhncQxr+ev6qN6BXXKM68Qbsqcw
4jxWrY44xJ/T++QAfw+r+Tr+rn5T9vK3sIav53v1+7KP78FTfAefWOGi0sIv
8qfxO36TBn0BV7n/V/xQFLFNL3J+rWTsUjuptzq7BnfY484etsdwzn3S+ERm
9GHMdeYTZuRlQcQyn68fxQJc9kpDfMrOsU/gMy4tD/nt9oi+GyfxjTzi99vT
ejm+xldS7I7v8Z188X1M4EbuOX625+WF/lE28z/sAX0K+3GdvPW+t+31+h3c
gJuyz+S77bz/3/A/+PFjSw==
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LVGEUB+CjUVEI0bKdrvwL2piiEEPFRGllfpY5VKZGQuBiVBClVWib
yhA1KAZMRRdGujAno1Ai3OaqLxAECSqwnaDPpcWP55zzvvfOfe+dkkzXpXsF
EfFccociThVGlMvYwYjU4YimAxFnWMs6qZfLRyMaeZXXWcsW/uVL1zW5vlFm
j0RUcpRVnGCKJ+zb5Tb77N9T78gx/T8e5wJ/2v+G3/lD5tQN9s9wQz/FaZmU
r56xztor9Yh8cZanyZw5blrPWv+kXpNf5h/4zfyW+Tv1smyZrzBrPuZMv7lk
vdesR95bH+Qf87z5gLpf7uo7Zcg17XzIvCzLYFHEcHIf9VuZcL5xWVGvy6z6
M2f4mk84z2dc5AhTrJBHyXfRlyXfhZU8xyqeZQlPspilMml/sz6TfDu2skNu
ywXP1MacPXdYnZyBNbzBF+ZpdXNyb15LfotXeF4eWy/Xp9Wned976Ja0ed57
yqpX+YAfmeFNuWh9TV9W+P8/tw93gFg7
        "]]}, {}, {}, {}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{1017, 1016, 2837, 2051, 1027, 1041, 2846, 1040, 2845, 2055, 
        1039, 986, 2816, 985, 2815, 2038, 984, 992, 2820, 977, 2811, 2036, 
        976, 978, 2813, 982, 2812, 2037, 981, 1055, 2856, 1056, 2859, 2061, 
        1062, 1063, 2876, 1087, 2875, 2067, 1078, 2869, 1077, 2868, 1076, 
        2065, 1075, 1081}], 
       Line3DBox[{1025, 1024, 2836, 2050, 1026, 1049, 2851, 1048, 2853, 2059, 
        1052, 1046, 2848, 1045, 2850, 2057, 1044, 989, 2818, 988, 2817, 2039, 
        987, 997, 2862, 1065, 2860, 2062, 1064, 1066, 2867, 1072, 2864, 2064, 
        1058, 1057, 2857, 1059, 2873, 2066, 1086, 2874, 1085, 2872, 1084, 
        2069, 1080, 1079}], 
       Line3DBox[{1067, 1068, 2861, 1069, 2081, 1128, 2902, 2901, 1131, 1130, 
        2082, 2899, 1098, 2881, 1099, 1097, 2070, 2880, 1094, 2879, 1095, 
        1096, 2074, 2890, 1003, 2824, 1000, 1001, 2046, 2832, 1015, 2835, 
        1023, 1020, 2048, 2833, 1021, 2841, 1035, 1034, 2052, 2840, 1031, 
        2839, 1032, 1033, 2123, 1271}], 
       Line3DBox[{1089, 1090, 2877, 1088, 2068, 1082, 2871, 2870, 1083, 1060, 
        2060, 2858, 1061, 2865, 1073, 1070, 2063, 2863, 1071, 2866, 1074, 974,
         2035, 2810, 975, 2814, 983, 990, 2040, 2819, 991, 2847, 1042, 1043, 
        2056, 2849, 1047, 2855, 1054, 1050, 2058, 2852, 1051, 2854, 1053, 
        1018, 2047, 1019}], 
       Line3DBox[{1115, 1116, 2896, 1121, 2079, 1122, 2905, 2904, 1132, 1102, 
        2071, 2883, 1103, 2889, 1111, 1114, 2077, 2894, 1106, 2885, 1105, 998,
         2042, 2823, 999, 2828, 1010, 1011, 2044, 2830, 1006, 2825, 1007, 
        1008, 2053, 2843, 1037, 2979, 1270, 1273, 2126, 2983, 1263, 2977, 
        1261, 1262, 2129, 1281}], 
       Line3DBox[{1117, 1118, 2078, 1119, 2895, 1120, 2903, 1133, 2084, 2907, 
        1134, 2906, 1129, 1112, 2076, 2892, 1113, 2893, 1109, 1107, 2073, 
        2886, 1108, 2887, 1012, 1013, 2045, 2831, 1014, 2829, 1004, 1005, 
        2043, 2827, 1009, 2826, 979, 980, 2125, 2981, 1272, 2982, 1267, 1264, 
        2122, 2978, 1265, 1266}], 
       Line3DBox[{1126, 1123, 2080, 1124, 2897, 1125, 2898, 1127, 2083, 2900, 
        1100, 2882, 1101, 1104, 2072, 2884, 1093, 2878, 1091, 1092, 2075, 
        2891, 1110, 2888, 1002, 995, 2041, 2822, 993, 2821, 994, 996, 2049, 
        2834, 1022, 2842, 1036, 1038, 2054, 2844, 1030, 2838, 1028, 1029, 
        2124, 2980, 1268, 1269}], 
       Line3DBox[{1156, 1155, 2916, 2088, 1154, 1142, 2911, 1136, 2908, 2085, 
        1135, 1147, 2934, 1185, 2933, 2097, 1184, 1183, 2932, 1169, 2922, 
        2092, 1168, 1300, 3006, 1309, 3005, 2138, 1308, 1314, 3010, 1313, 
        3012, 2142, 1255, 1241, 2966, 1240, 2968, 2118, 1236, 2963, 1235, 
        2972, 1249, 1250}], 
       Line3DBox[{1192, 1191, 2937, 2099, 1190, 1196, 2940, 1197, 2957, 2113, 
        1229, 1230, 2961, 1233, 2960, 2115, 1153, 1149, 2914, 1148, 2915, 
        2087, 1150, 1159, 2991, 1289, 2997, 2134, 1297, 1296, 3017, 1322, 
        3016, 2143, 1321, 1323, 3023, 1328, 3022, 1327}], 
       Line3DBox[{1207, 1206, 2945, 2106, 1144, 1143, 2912, 1145, 2930, 2096, 
        1180, 1162, 2918, 1161, 2920, 2090, 1165, 1172, 2925, 1174, 2924, 
        2093, 1173, 1301, 3020, 1311, 3008, 2140, 1252, 1251, 2975, 1260, 
        2976, 2121, 1258, 1248, 2971, 1247, 2970, 2119, 1246, 2984, 1274, 
        2989, 1283, 2130, 1282, 1284}], 
       Line3DBox[{1212, 1210, 2946, 2107, 1214, 1193, 2938, 1188, 2935, 2098, 
        1187, 1220, 2950, 1218, 2948, 2109, 1217, 1225, 2953, 1223, 2951, 
        2110, 1151, 1152, 3002, 1304, 3000, 2135, 1292, 1287, 2990, 1285, 
        2992, 1291}], 
       Line3DBox[{1243, 1244, 2969, 1245, 2120, 1237, 2965, 2964, 1238, 1239, 
        2117, 2967, 1242, 2973, 1253, 1254, 2141, 3011, 1315, 3013, 1316, 
        1317, 2144, 3021, 1170, 2923, 1171, 1166, 2091, 2921, 1167, 2931, 
        1182, 1179, 2095, 2929, 1146, 2913, 1137, 1138, 2086, 2909, 1139, 
        2910, 1140, 1141, 2104, 1208}], 
       Line3DBox[{1279, 1280, 2988, 1277, 2128, 1278, 2987, 2986, 1275, 1276, 
        2127, 2985, 1259, 2974, 1256, 1257, 2137, 3004, 1307, 3009, 1312, 
        1310, 2139, 3007, 1302, 2999, 1303, 1177, 2094, 2927, 1175, 2926, 
        1176, 1163, 2089, 2919, 1164, 2928, 1178, 1181, 2103, 2943, 1205, 
        2944, 1203, 1204, 2105, 1209}], 
       Line3DBox[{1320, 3015, 1290, 2993, 1286, 1288, 2131, 2994, 1293, 3001, 
        1305, 1306, 2136, 3003, 1222, 2952, 1224, 1226, 2111, 2954, 1216, 
        2949, 1219, 1221, 2112, 2956, 1186, 2936, 1189, 1194, 2100, 2939, 
        1195, 2947, 1211, 1213, 2108, 1215}], 
       Line3DBox[{1324, 1325, 3019, 3018, 1326, 1329, 2145, 3024, 1318, 3014, 
        1319, 1294, 2132, 2995, 1295, 2998, 1299, 1298, 2133, 2996, 1160, 
        2917, 1157, 1158, 2114, 2958, 1231, 2959, 1232, 1234, 2116, 2962, 
        1227, 2955, 1228, 1201, 2102, 2941, 1202, 2942, 1198, 1199, 2101, 
        1200}], Line3DBox[{1367, 1368, 2158, 1377, 3049, 1378, 3050, 1371, 
        2156, 3044, 1372, 3045, 1373, 1386, 2161, 3054, 1387, 3061, 1395, 
        1396, 2164, 3062, 1394, 3058, 1333, 1334, 2152, 3038, 1360, 3037, 
        1361, 1363, 2154, 3040, 1364, 3042, 1352, 1353, 2179, 3091, 1430, 
        3082, 1431, 1425, 2172, 3080, 1426, 1427}], 
       Line3DBox[{1369, 1370, 3048, 3047, 1376, 1374, 2157, 3046, 1375, 3067, 
        1403, 1400, 2165, 3065, 1397, 3063, 1398, 1402, 2166, 3066, 1348, 
        3032, 1345, 1346, 2155, 3043, 1365, 3041, 1366, 1362, 2153, 3039, 
        1349, 3033, 1350, 1351, 2151, 3036, 1357, 3035, 1358, 1354, 2149, 
        1355}], Line3DBox[{1381, 1379, 2159, 1380, 3051, 1382, 3052, 1383, 
        2185, 3103, 1472, 3106, 1460, 1458, 2181, 3096, 1459, 3097, 1454, 
        1455, 2183, 3099, 1465, 3100, 1466, 1420, 2171, 3078, 1419, 3077, 
        1418, 1405, 2167, 3069, 1406, 3071, 1409, 2169, 1413, 3074, 1414, 
        3075, 1415, 2177, 1445, 3088, 1443, 1444}], 
       Line3DBox[{1401, 1388, 3055, 1389, 2162, 1390, 3057, 3056, 1391, 1384, 
        2160, 3053, 1385, 3059, 1392, 1393, 2163, 3060, 1342, 3030, 1343, 
        1344, 2189, 3113, 1451, 3093, 1452, 1449, 2180, 3092, 1450, 3094, 
        1453, 1448, 2178, 3090, 1423, 3079, 1424, 1428, 2173, 3081, 1429, 
        3085, 1437, 1438, 2176, 1441}], 
       Line3DBox[{1404, 3068, 1399, 3064, 1338, 1339, 2147, 3028, 1340, 3029, 
        1341, 1347, 2148, 3031, 1332, 3025, 1330, 1331, 2146, 3026, 1335, 
        3027, 1336, 1337, 2150, 3034, 1356, 1359}], 
       Line3DBox[{1442, 3087, 1439, 3086, 1440, 1432, 2174, 3083, 1433, 3084, 
        1436, 1434, 2175, 1435}], 
       Line3DBox[{1467, 1468, 3101, 1469, 2186, 1473, 3105, 3104, 1474, 1471, 
        2184, 3102, 1456, 3095, 1457, 1464, 2188, 3110, 1478, 3108, 1479, 
        2190, 1482, 3114, 1411, 3073, 1412, 2168, 1410, 3072, 1407, 3070, 
        1408, 2170, 1416, 3076, 1417, 3089, 1446, 1447}], 
       Line3DBox[{1470, 1463, 2182, 1461, 3098, 1462, 3203, 2191, 1483, 3115, 
        1484, 3116, 1485, 2192, 1481, 3112, 1480, 3111, 1477, 2187, 1475, 
        3107, 1476, 3109, 1421, 1422}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1518, 2047, 1517, 1958, 3344, 2051, 1527, 1525, 3208, 
        1524}], Line3DBox[{1529, 1528}], 
       Line3DBox[{1560, 1561, 3209, 1562, 2067, 3362, 1566, 1547, 2060, 3353, 
        1548, 1554, 2064, 3357, 1555, 1556, 2070, 3363, 1971, 1570, 2075, 
        3368, 1975, 1510, 2042, 3336, 1511, 1514, 2045, 3339, 1957, 1515, 
        2094, 3387, 1984, 1602, 2090, 3383, 1982, 1600, 2095, 3388, 1979, 
        1590, 2085, 3378, 1591, 1595, 2102, 3393, 1623, 1615, 2099, 3391, 
        1616, 1617, 2108, 1634}], 
       Line3DBox[{1563, 1557, 2065, 1558, 3358, 1559, 2068, 1967, 3359, 1564, 
        2066, 3361, 1965, 1546, 2082, 3373, 1972, 1571, 2072, 3365, 1970, 
        1569, 2077, 3370, 1974, 1574, 2073, 3366, 1575, 1576, 2139, 3421, 
        1999, 1607, 2093, 3386, 1608, 1603, 2091, 3384, 1604, 1610, 2097, 
        3390, 1612, 1613, 2116, 3401, 1990, 1641, 2113, 3398, 1986, 1620, 
        2100, 3392, 1621, 2107, 1631, 3212, 1632, 1633}], 
       Line3DBox[{1619, 1618, 3211, 1614, 2098, 1985, 3397, 2112, 1642, 1645, 
        3400, 2115, 1644, 1643, 3399, 2114, 1611, 1606, 3385, 2092, 1605, 
        1983, 3426, 2144, 1684, 1680, 3422, 2140, 1679, 1676, 3419, 2137, 
        1579, 1578, 3369, 2076, 1577, 1573, 3364, 2071, 1572, 1973, 3374, 
        2083, 1587, 3375, 1586, 2081, 1565, 3360, 1968, 2069, 1568, 1969}], 
       Line3DBox[{1622, 2101, 1599, 1598, 3381, 2088, 1594, 1593, 3379, 2086, 
        1592, 1978, 3389, 2096, 1609, 1601, 3382, 2089, 1513, 1956, 3337, 
        2043, 1512, 1955, 3338, 2044, 1508, 1953, 3335, 2041, 1509, 1954, 
        3367, 2074, 1552, 1550, 3355, 2062, 1549, 1553, 3356, 2063, 1543, 
        1964, 3354, 2061, 1545, 1544, 3210, 1567}], 
       Line3DBox[{1628, 2104, 1627, 1987, 3395, 2106, 1626, 1625, 3394, 2103, 
        1624, 1661, 3409, 2125, 1659, 1535, 3346, 2053, 1534, 1522, 3342, 
        2049, 1521, 1516, 3340, 2046, 1501, 1500, 3333, 2039, 1496, 1489, 
        3329, 2035, 1488, 1494, 3331, 2037, 1493, 1492, 3204, 1491}], 
       Line3DBox[{1630, 2105, 1629, 1657, 3407, 2122, 1656, 1995, 3410, 2126, 
        1530, 1960, 3347, 2054, 1533, 1520, 3341, 2048, 1519, 1962, 3350, 
        2057, 1539, 1503, 3334, 2040, 1502, 1490, 3330, 2036, 1487, 1486, 
        3205, 1495}], 
       Line3DBox[{1637, 1636, 3213, 1635, 2109, 1988, 3396, 2111, 1596, 1980, 
        3380, 2087, 1597, 1981, 3416, 2133, 1671, 1678, 3420, 2138, 1677, 
        1681, 3423, 2141, 1655, 1994, 3406, 2121, 1654, 1993, 3411, 2127, 
        1589, 1977, 3377, 2084, 1588, 3376, 1584, 2079, 1583, 3372, 1585, 
        2080, 1551, 1966}], 
       Line3DBox[{1640, 1639, 3214, 1638, 2110, 1989, 3418, 2136, 1666, 1998, 
        3417, 2134, 1672, 1670, 3415, 2132, 1669, 2000, 3424, 2142, 1653, 
        1649, 3403, 2117, 1648, 1651, 3405, 2119, 1650, 3412, 1662, 2128, 
        1582, 3371, 1581, 2078, 1580, 1976}], 
       Line3DBox[{1660, 2123, 1523, 1959, 3343, 2050, 1526, 1541, 3351, 2058, 
        1538, 1537, 3348, 2055, 1536, 1505, 3206, 1504}], 
       Line3DBox[{1664, 2129, 1658, 1996, 3408, 2124, 1531, 1961, 3345, 2052, 
        1532, 1963, 3352, 2059, 1542, 1540, 3349, 2056, 1499, 1498, 3332, 
        2038, 1497, 1507, 3207, 1506}], 
       Line3DBox[{1675, 1674, 3215, 1673, 2135, 1668, 3414, 2131, 1667, 1683, 
        3425, 2143, 1682, 2001, 3427, 2145, 1647, 1992, 3404, 2118, 1646, 
        3402, 1991, 2120, 1652, 3413, 1665, 2130, 1663, 1997}], 
       Line3DBox[{1700, 1699, 3433, 1698, 3432, 1697, 3431, 2146, 1686, 1685, 
        3222, 1712, 3221, 1709, 3438, 2006, 3441, 2007, 3483, 2166, 1799, 
        1798, 3257, 1797, 3258, 1800, 3479, 1761, 3458, 1760, 3457, 2156, 
        1759, 3242, 1756, 3239, 1755, 1757}], 
       Line3DBox[{1726, 2149, 1725, 1724, 3229, 1723, 3228, 1722, 3444, 2009, 
        3455, 1747, 3451, 2154, 1741, 1739, 3232, 1738, 3234, 1707, 3437, 
        1706, 3436, 2005, 3475, 2163, 1776, 1775, 3245, 1777, 3248, 1780, 
        3464, 3465, 1779, 3463, 1769, 2159, 1768, 1767}], 
       Line3DBox[{1729, 1727, 3230, 1728, 2186, 2033, 3525, 3524, 1925, 3526, 
        1890, 3293, 1891, 3294, 1892, 1907, 2183, 3519, 1908, 3520, 1909, 
        3531, 1838, 3278, 1839, 3279, 1841, 1842, 2178, 3505, 2023, 3495, 
        1849, 3497, 1853, 3284, 1854, 1865}], 
       Line3DBox[{1732, 1731, 3231, 1720, 3443, 1716, 3442, 2008, 3450, 2153, 
        1743, 1742, 3233, 1696, 3219, 1695, 3430, 2004, 3473, 2018, 3477, 
        2164, 1794, 1788, 3250, 1787, 3249, 1786, 3469, 2016, 3470, 3471, 
        1791, 2162, 1774, 3244, 1773, 1772}], 
       Line3DBox[{1734, 1733, 3446, 2010, 3447, 2151, 1736, 1745, 3235, 1746, 
        3236, 1748, 3452, 1737, 3448, 2011, 3449, 2152, 1740, 1744, 3254, 
        1793, 3255, 1792, 3472, 2017, 3474, 1782, 3466, 2160, 1781, 1778, 
        3246, 3247, 1771, 3243, 1770, 2014}], 
       Line3DBox[{1735, 1730, 3445, 2150, 1721, 1719, 3227, 1718, 3226, 1717, 
        3454, 1749, 3453, 2012, 3456, 2155, 1693, 1692, 3218, 1694, 3256, 
        1796, 3478, 1795, 3476, 1785, 3467, 2161, 1784, 1783, 3253, 1790, 
        3251, 3252, 1789, 3468, 2015, 2020}], 
       Line3DBox[{1750, 1751, 2158, 1763, 3460, 1764, 3462, 3461, 1765, 3241, 
        1766, 3259, 1801, 1802, 2165, 3481, 2019, 3480, 1803, 3482, 1715, 
        3225, 1714, 3223, 1710, 1711, 2148, 3439, 2003, 3429, 2002, 3428, 
        1687, 3216, 1688, 3220, 1701, 1702, 2175, 1861}], 
       Line3DBox[{1852, 1851, 3496, 2172, 1850, 1856, 3289, 1878, 3288, 1877, 
        3511, 1883, 3510, 1880, 3507, 2180, 1879, 1932, 3310, 1886, 3292, 
        1885, 3512, 2027, 3516, 1894, 3514, 2181, 1893, 1922, 3308, 1924, 
        3306, 3307, 1916, 3521, 1912, 2031}], 
       Line3DBox[{1859, 1858, 3500, 1857, 3499, 2024, 3506, 2179, 1876, 1875, 
        3291, 1884, 3290, 1882, 3509, 1881, 3508, 2026, 3532, 2189, 1888, 
        1887, 3296, 1896, 3295, 1895, 3515, 2029, 3527, 1923, 3523, 2185, 
        1917, 3302, 1915, 3301, 1914, 1913}], 
       Line3DBox[{1863, 1862, 3502, 1860, 3501, 2174, 1691, 1690, 3217, 1689, 
        3224, 1713, 3440, 1705, 3435, 1704, 3434, 2147, 1703, 1708, 3260, 
        1806, 3261, 1805, 3485, 1804, 3484, 1762, 3459, 2157, 1754, 1753, 
        3237, 3238, 1752, 3240, 1758, 2013}], 
       Line3DBox[{1864, 2025, 3503, 1855, 3498, 2173, 1837, 1836, 3277, 1835, 
        3276, 1834, 3492, 2021, 3493, 2022, 3494, 2171, 1840, 1911, 3300, 
        1910, 3299, 1906, 3518, 1889, 3513, 2028, 3522, 2184, 1921, 1920, 
        3304, 3305, 1919, 3303, 1918, 2032}], 
       Line3DBox[{1867, 2176, 1866, 1828, 3273, 1826, 3271, 1824, 3490, 1812, 
        3487, 1808, 3486, 2167, 1807, 1818, 3267, 1816, 3265, 1814, 3534, 
        1928, 3529, 2034, 3530, 2188, 1929, 1949, 3325, 1943, 3319, 1941, 
        3536, 3537, 1904, 3517, 2030, 2182, 1901, 1900}], 
       Line3DBox[{1870, 1869, 3285, 1868, 3287, 1874, 3286, 1832, 3491, 2170, 
        1831, 1844, 3280, 1843, 3283, 1848, 3282, 1847, 3309, 1927, 3528, 
        2187, 1926, 1930, 3323, 1947, 3322, 1936, 3313, 1935, 3311, 3312, 
        1934, 1933}], 
       Line3DBox[{1872, 1871, 3504, 2177, 1829, 1830, 3275, 1833, 3274, 1811, 
        3263, 1810, 3262, 1809, 3488, 2168, 1821, 1846, 3281, 1845, 3320, 
        1944, 3321, 1946, 3326, 1951, 3538, 2192, 1950, 1938, 3314, 1937, 
        3316, 3317, 1905, 3298, 1898, 1897}], 
       Line3DBox[{1873, 1827, 3272, 1825, 3270, 1823, 3489, 2169, 1822, 1820, 
        3268, 1819, 3269, 1817, 3266, 1815, 3264, 1813, 3533, 2190, 1931, 
        1945, 3327, 1952, 3328, 1948, 3324, 1942, 3318, 1940, 3535, 2191, 
        1939, 3315, 1903, 3297, 1902, 1899}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2193, 3117, 2811, 3330, 2736, 2197, 2814, 3119, 2817, 3333, 
        2739, 2220, 2824, 2217, 2822, 3335, 2740, 2223, 2828, 3125, 2831, 
        3339, 2231, 2230, 2999, 2345, 2924, 3386, 2768, 2342, 2923, 2341, 
        2922, 3385, 2767, 2337, 2917, 2331, 2915, 3380, 2762, 2336, 2952, 
        2951, 3165, 3214, 2369, 2368}], 
       Line3DBox[{2198, 3204, 2199, 2258, 2856, 3134, 2863, 3356, 2753, 2271, 
        2867, 3138, 2880, 3363, 2755, 2294, 2878, 3141, 2894, 3370, 2302, 
        2301, 2893, 3148, 3004, 3419, 2397, 2396, 2975, 3173, 3011, 3423, 
        2393, 2392, 3010, 2414, 2995, 3415, 2778, 2429, 3017, 2412, 2994, 
        3414, 2407, 2990, 2406, 2411}], 
       Line3DBox[{2200, 3118, 2812, 3331, 2737, 2257, 2866, 2265, 2860, 3355, 
        2752, 2266, 2879, 3142, 2891, 3368, 2293, 2292, 2885, 3145, 2886, 
        3366, 2758, 2300, 3009, 2426, 3008, 3422, 2390, 2389, 3013, 2424, 
        3005, 3420, 2780, 2419, 2998, 2418, 2997, 3417, 2416, 2415, 3001, 
        3000, 3177, 3215, 2421, 2420}], 
       Line3DBox[{2205, 3205, 2204, 2203, 2813, 2194, 2810, 3329, 2735, 2269, 
        2862, 3137, 2890, 3367, 2296, 2295, 2888, 2221, 2823, 3336, 2741, 
        2299, 2887, 3146, 3007, 3421, 2781, 2427, 3020, 3180, 3021, 3426, 
        2428, 2425, 3006, 2417, 2996, 3416, 2779, 2408, 2991, 3176, 3003, 
        3418, 2423, 3002, 2422, 3178}], 
       Line3DBox[{2213, 3206, 2212, 2207, 2816, 3120, 2849, 3349, 2252, 2251, 
        2848, 2232, 2833, 3341, 2742, 2235, 2842, 3130, 2843, 3346, 2227, 
        2226, 2826, 3124, 2919, 3382, 2764, 2338, 2918, 3154, 2929, 3388, 
        2770, 2348, 2934, 3158, 2962, 3401, 2373, 2372, 2961, 2370, 2956, 
        3397, 2365, 2950, 2364, 3164}], 
       Line3DBox[{2214, 3207, 2196, 2195, 2820, 2210, 2819, 3334, 2209, 2208, 
        2818, 3121, 2832, 3340, 2222, 2216, 2821, 3122, 2830, 3338, 2229, 
        2228, 2829, 3126, 2927, 3387, 2769, 2346, 2925, 2340, 2921, 3384, 
        2766, 2343, 2932, 3157, 2958, 3399, 2335, 2330, 2914, 3153, 2954, 
        3396, 2367, 2953, 2366, 3166}], 
       Line3DBox[{2215, 2206, 2815, 3332, 2738, 2211, 2847, 3133, 2850, 3350, 
        2253, 2234, 2835, 2233, 2834, 3342, 2219, 2218, 2825, 3123, 2827, 
        3337, 2225, 2224, 2926, 2339, 2920, 3383, 2765, 2344, 2931, 3156, 
        2933, 3390, 2772, 2349, 2959, 3168, 2960, 3400, 2333, 2332, 2949, 
        2948, 3163, 3213, 2363, 2362}], 
       Line3DBox[{2236, 3208, 2237, 2248, 2846, 3132, 2852, 3351, 2748, 2254, 
        2851, 2245, 2840, 3345, 2745, 2243, 2838, 3127, 2983, 3410, 2400, 
        2399, 2982, 2358, 2943, 3394, 2347, 2327, 2912, 2324, 2909, 3379, 
        2323, 2322, 2911, 3152, 2941, 3393, 2774, 2357, 2940, 2355, 2939, 
        3392, 2354, 2938, 2353, 3160}], 
       Line3DBox[{2240, 2239, 2837, 3344, 2744, 2256, 2854, 2238, 2836, 3343, 
        2743, 2244, 2839, 3128, 2980, 3408, 2242, 2241, 2977, 3174, 2978, 
        3407, 2777, 2359, 2944, 3161, 2945, 3395, 2326, 2325, 2910, 3151, 
        2916, 3381, 2763, 2334, 2942, 2351, 2937, 3391, 2773, 2356, 2947, 
        2946, 3162, 3212, 2361, 2360}], 
       Line3DBox[{2249, 3131, 2845, 3348, 2747, 2250, 2855, 2255, 2853, 3352, 
        2749, 2246, 2841, 3129, 2844, 3347, 2746, 2247, 2979, 3175, 2981, 
        3409, 2202, 2201, 2928, 3155, 2930, 3389, 2771, 2328, 2913, 2321, 
        2908, 3378, 2761, 2329, 2955, 3167, 2957, 3398, 2775, 2350, 2936, 
        2935, 3159, 3211, 2352, 2371}], 
       Line3DBox[{2261, 3135, 2859, 3354, 2751, 2264, 2865, 2270, 2864, 3357, 
        2260, 2259, 2881, 3143, 2884, 3365, 2757, 2298, 2889, 3147, 2892, 
        3369, 2759, 2313, 2974, 3172, 2976, 3406, 2398, 2391, 2973, 3171, 
        3012, 3424, 2395, 2394, 3014, 3179, 3016, 3425, 2783, 2409, 2993, 
        2992, 2410, 2413}], 
       Line3DBox[{2276, 3139, 2875, 3362, 2280, 2278, 2870, 3140, 2873, 3361, 
        2754, 2287, 2901, 2314, 2900, 3374, 2312, 2310, 2904, 3149, 2907, 
        3377, 2319, 2317, 2986, 2386, 2970, 3405, 2776, 2378, 2964, 3169, 
        2968, 3404, 2377, 2375, 3018, 2432, 3022, 2784}], 
       Line3DBox[{2283, 2274, 2868, 3358, 2275, 2282, 2877, 2285, 2872, 3360, 
        2281, 2267, 2861, 2268, 2897, 3372, 2307, 2306, 2896, 2305, 2895, 
        3371, 2304, 2303, 2988, 2404, 2989, 3413, 2405, 2384, 2969, 2385, 
        2972, 2388}], 
       Line3DBox[{2291, 3210, 2290, 2289, 2876, 2263, 2858, 3353, 2750, 2262, 
        2857, 3136, 2899, 3373, 2760, 2297, 2882, 3144, 2883, 3364, 2756, 
        2315, 2906, 3150, 2985, 3411, 2403, 2387, 2971, 2383, 2967, 3403, 
        2382, 2381, 2966, 3170, 3024, 3427, 2434, 2433, 3023, 2430, 3015, 
        2782}], Line3DBox[{2431, 3019, 2376, 2963, 2374, 2380, 3402, 2965, 
        2379, 2984, 2401, 2402, 3412, 2987, 2318, 2903, 2316, 2320, 3376, 
        2905, 2311, 2898, 2308, 2309, 3375, 2902, 2288, 2874, 2286, 2284, 
        3359, 2871, 2279, 2869, 2272, 2273, 3209, 2277}], 
       Line3DBox[{2457, 2458, 3435, 3029, 2459, 2460, 3223, 2471, 3438, 2472, 
        3456, 3043, 3183, 2448, 3219, 2454, 3448, 3037, 2498, 2499, 3232, 
        2500, 3509, 2804, 3507, 3092, 2655, 2624, 3278, 2623, 3493, 3077, 
        2622, 2603, 3267, 3266, 2604, 3488, 2796, 3072, 2599, 3283, 2630, 
        2631}], Line3DBox[{2461, 2462, 3434, 3028, 2463, 2469, 3225, 2480, 
        3441, 3032, 2464, 2449, 3218, 2450, 3430, 2453, 3449, 3038, 2501, 
        2507, 3234, 2508, 3508, 3093, 2656, 2715, 3310, 2712, 3531, 2798, 
        3494, 3078, 2625, 2602, 3265, 3264, 2601, 3073, 2600, 3281, 2634, 
        3282, 2628, 2629}], 
       Line3DBox[{2477, 2476, 3440, 2785, 3439, 3031, 3184, 2473, 3221, 2474, 
        3453, 3041, 2451, 2452, 3233, 2506, 3452, 2787, 3451, 3040, 3186, 
        2504, 3290, 2658, 3510, 3094, 2657, 2626, 3279, 2620, 3492, 2795, 
        3486, 3069, 2591, 3269, 2592, 3262, 2593, 3070, 2596, 3280, 2627, 
        2633}], Line3DBox[{2519, 2520, 3240, 2521, 3460, 3049, 2518, 2516, 
        3239, 2517, 3468, 3055, 2539, 2540, 3244, 2537, 3243, 2538, 3463, 
        3051, 2535, 2536, 3301, 2682, 3521, 3101, 2493, 2494, 3230, 2495, 
        3303, 2674, 3517, 3098, 2672, 3297, 2673, 3298, 2675, 3202}], 
       Line3DBox[{2528, 3048, 2523, 2512, 3238, 2514, 3462, 3050, 2530, 2531, 
        3242, 2533, 3252, 2563, 3471, 3057, 2542, 2544, 3247, 2550, 3465, 
        3052, 2551, 2552, 3302, 2686, 3307, 2696, 3525, 3105, 2688, 2690, 
        3305, 2693, 3537, 3203, 2725, 3315, 2726, 3317, 2721, 3312, 2719, 
        2717}], Line3DBox[{2529, 2789, 3459, 3046, 3188, 2515, 3241, 2526, 
        3458, 3045, 2525, 2534, 3253, 2564, 3469, 2790, 3466, 3053, 3190, 
        2553, 3248, 2554, 3527, 3106, 2683, 2684, 3308, 2697, 3526, 2806, 
        3522, 3102, 3201, 2691, 3319, 3318, 2728, 3116, 2724, 3314, 2722, 
        3313, 2723, 2733}], 
       Line3DBox[{2575, 2576, 3485, 2793, 3481, 3065, 3194, 2582, 3258, 2570, 
        3476, 3061, 2557, 2558, 3250, 2561, 3472, 2565, 3475, 3060, 3189, 
        2545, 3295, 2670, 3516, 3097, 2671, 2667, 3294, 2668, 3518, 2678, 
        3530, 3110, 2704, 3328, 2734, 3326, 2706, 3111, 2705, 3323, 2707, 
        2708}], Line3DBox[{2577, 2578, 3484, 3067, 2579, 2580, 3259, 2581, 
        3479, 2791, 3467, 3054, 3191, 2559, 3249, 2560, 3474, 3059, 2555, 
        2546, 3245, 2547, 3515, 2805, 3514, 3096, 2669, 2666, 3293, 2665, 
        3513, 3095, 2664, 2694, 3325, 3324, 2732, 3538, 2808, 3112, 2709, 
        3322, 2730, 2731}], 
       Line3DBox[{2585, 3064, 2584, 2590, 3260, 2586, 3482, 2587, 3483, 3066, 
        3193, 2571, 3256, 2567, 3473, 3058, 2566, 2568, 3254, 2467, 3437, 
        2468, 3532, 3113, 3198, 2660, 3292, 2661, 3520, 3100, 2676, 2677, 
        3300, 2681, 3534, 3533, 2713, 3114, 2714, 3320, 2700, 3309, 2701, 
        3109, 2703, 2710}], 
       Line3DBox[{2613, 2612, 3089, 2650, 3286, 2616, 3274, 2605, 3074, 2797, 
        3489, 3490, 2606, 3277, 2619, 2618, 3079, 3495, 2636, 3288, 2654, 
        3197, 3091, 3506, 2489, 3444, 2488, 3235, 2509, 2481, 3033, 3442, 
        2482, 3226, 2435, 3181, 3026, 3431, 2441, 3428, 2440, 3217, 2445, 
        2444, 3086, 2645}], 
       Line3DBox[{2632, 2615, 3076, 2614, 3491, 2595, 3263, 2594, 3268, 2597, 
        3071, 3487, 2598, 3276, 2621, 3196, 3090, 3505, 2803, 3511, 2659, 
        3291, 2503, 2502, 3042, 3455, 2510, 3236, 2505, 3187, 3039, 3450, 
        2786, 3454, 2475, 3222, 2470, 2442, 3025, 3429, 2443, 3224, 2479, 
        2478, 3087, 2801}], 
       Line3DBox[{2643, 2644, 3502, 3084, 2446, 2447, 3220, 2455, 3433, 2456, 
        3445, 3034, 3185, 2485, 3231, 2496, 3446, 3035, 2486, 2487, 3229, 
        2492, 3500, 2799, 3496, 3080, 2637, 2638, 3284, 2639, 3503, 3085, 
        2635, 2609, 3273, 3272, 2610, 3504, 2802, 3088, 2649, 3285, 2647, 
        2648}], Line3DBox[{2646, 2800, 3501, 3083, 3182, 2436, 3216, 2437, 
        3432, 3027, 2438, 2439, 3227, 2483, 3443, 2484, 3447, 3036, 2497, 
        2490, 3228, 2491, 3499, 3082, 2642, 2653, 3289, 2640, 3497, 2641, 
        3498, 3081, 3195, 2607, 3271, 3270, 2608, 3075, 2611, 3275, 2617, 
        3287, 2651, 2652}], 
       Line3DBox[{2711, 2698, 3107, 2807, 3528, 2699, 3321, 2729, 3327, 2702, 
        3108, 3529, 2680, 3299, 2679, 3199, 3099, 3519, 2663, 3512, 2662, 
        3296, 2548, 2465, 3030, 3436, 2466, 3255, 2569, 3192, 3062, 3477, 
        2792, 3478, 2572, 3257, 2573, 2574, 3063, 3480, 2583, 3261, 2589, 
        2588, 3068, 2794}], 
       Line3DBox[{2716, 2718, 3311, 2720, 3316, 2727, 3115, 2809, 3535, 3536, 
        2692, 3304, 2689, 2687, 3104, 3524, 2695, 3306, 2685, 3200, 3103, 
        3523, 2556, 3464, 2549, 3246, 2543, 2541, 3056, 3470, 2562, 3251, 
        2532, 2524, 3044, 3457, 2788, 3461, 2513, 3237, 2511, 2522, 3047, 
        2527}]}}},
    VertexNormals->CompressedData["
1:eJztXbGOZTUMHUELPSXbU9MNQ4Wo+QAKJGr4mp2dqfgEfoB929HTrLTiC5D4
BxCa21zJJE58co5zXT3p6Cpxjh3bSZy8Vz/89N2PH93d3f3x6d3dx//+Pnzx
yc+/ff7h9tV/v3+9/H54aOEPL/hDJ+5tPwpXk4c13lEe0Lyp6MXLm5dPtB1m
t3O0P2Hxk10v2flRiVNfv+D3QfKw/DnLT2a3kyzxgiUny056v78Ptv9d+VfR
F9ufsOYpyx4K17QTNTlrXIUXXngWfFX+UPG68MILz4p7/STKX42u09X4RPt5
Fg/Ff8l5hXFlkbPwOT2Wfn28oeeFWlxDxetWnpNF7yw7YfsNdXtWw4uHwguP
x1t1KTVP98bV4nKWPGcX3OKzeC58hZ+JtluV8fbib//89rP7L/++Pf76yzeP
379/+f29ib/u/P4W1M7o90/O77241b6339FxPQX329IXi8+o9lk4alwtfbHk
V9MjSx41HrLLHyXPVfxYtH+w4hR6vN74qCb/gb8B2w+6/TP+xtmvmj2g9bgr
D968F+230fkJq181+ct+cuYtKv5Kzd6KB435Pmufan6VZVdZ4hc6LmTx57vK
Ez0ur3/wroOsfdRzO1a+ba2DLL1483bvOsuS/8BfT7bv5dn63svn7Ly4nfq1
+OnFLfmfg/3eWV+j/vDczqge2X6s95yid7xWv+j9jSx+G7XPYOnxduK/Vy/W
vGbzj7If1v7Pwf85bqrJr5avouVv5UsHjjoXWJ0/qPlJlt1GraNb8703brL2
61r9ouVvzTv1edErv+W3o+pzvPbsPdeLjgur/FIrL/La+eh8tPLqXp69+YPa
ed8sn716nOV/l7ipJn+vP0TJs0t9rLdf1n0BVv1/9nsHavJnlyfKztHzJYoH
lDzsd1rU+s0yj9D2n4WHwrn2piZn4aV3Bb+qyvNV9Fi4z55H73fvMi9Q/ar5
TxU+o9+7yI57405Lj1F8ottXwdF+T82vou1zlZ2r2E/hhRe+D66an6D9J7qd
2e93f4dql3Fll18Fj7aH2Xay2CdbTnV+evFzfc65bhaNW/VCzyR5WLh3vOjv
z/U/s+N9Mtq36sRU9BLNA8pOonC0vUXJkwXPMi60nFl4aMl/9mPWuM73bVvt
W99b+PneZctftdrpbd8ar+XPvTyw/XCvnBY/VjsHD88i88hrJ48N3LKT3vG2
xtXSy9tOu1XPN7LkD2ryZ/k+yh+2/DBaL6vm11X2E1ByZhmXOj57XoDiP2o/
P4s8auNSk7/me+EZ8LLPa+FqcarwPeYvy65W9avCsxru5bn8DxZn11O19JhF
72ryXA0f5X/V/pvVflS/rP1e77kS65xIbT9cbb+d1b6l9+h9cu/54Gp9qdWr
ZJcffR4UJQ+6zod1PoiWX81+WPLsyo/a+W92P5BF7y3cG8etupfe7739tuSZ
rSMarf+Z5bPXHt6d+m3VrbXqf1r68taf99YBjvKAqlNaNe8s/mfHxfYbvfNI
Tf5V+xKzfrXVvmVXXv8z66/QcYclv1cv3u9bdciz82iV3/bGd7S9zdo/6z6R
d99mtk6YjUfzHJV39eZLUe2z7Jzt5y3cujdxzvPZ+2OjelQ9d/OeC7PqCtjn
YllxdT6v+t6FynhV12usfCN7v7vLg953Otq/mh9mjzeKH7V2Cs+JZ9U7ym7Z
9Y2jekH5gWie1e2t/KG2ne+qR7acvX5vVE52Hh6FR+1jq61TWLi3DiFqnzmq
nfO5ZKs+gb2unG1nVb2Ql7fz/0hm8f9qcnrzwCzyZ+F/V/tR65f1fRQ/6HnK
mu9o+dXmb5b5Vfg1cbS/Uhtv4XvganZ7bie6HkBtfrHyBzX7UcPR9haFZ9eX
mjyFl36Lh8IPXEVfV7ef6H17tfMm6x6r954Iux5+lk/vvUg1PWbBs78L1Lr/
qCJnlF6ixrXrfdvs8hw46n8Q0N+r9cuK+1naib7nqzKPWPr13vtWi7NZ2lGL
1yy7zfIeEXs+svSI+n83q33v/yiN1mei6/TO61/vuEbziqN97ztLo/xEvefA
euc26v2iqPdP1OKs9/8fWe94RNlP9LslXnz2fZ5d8+EoHiw8yj+rxfGWfqPi
bK8/9743yJpfXj8/Kk/v/8yy4kJrvljvVa7+P1b0/9qz/Fi0vaF5YL3jNNuv
yn47+/zU235UnY9afdHVzruzyMkaV287u7/7ZNUzqN0rZOO9+TZ6/3D0Hd3Z
/Hx2n21V3GHFtfLPucbLsquouJOFT7V5lx0vHvbgTS2OqLVT+P/zidLX6Hon
6ns1+9l1XFlwdP5Q+iq8cNx8YcWXwvvwrPyryXM1+VH4aP2S2v5za/929Xk6
61yeVU+bvT5ZzW5V6/Bn6yu85x2tOsne8xRvHWbU+dSovzrjLR6s+8K99VHe
86ZW/dJV5kUUjq5vR8edqHFZ55jZ9w2yrO+y8InmX03+Wgddc1yreVOrv1q1
DlVbJ65aZ3n/n7o331udX+3uZ2bj16p8z9sO+vuo+aX6TghqvaO2z4OWM/s9
dFW9RL1j0xt3UP5h9D64FWfV3t1SzX9m99lU/SrqvpX3fugq3lT01ZKHdV/P
wq35aO1jo/ZjvXivf8uWb6us01W/j+JNjX81/RZeelEeL9o/zOJq+5yq+r0a
P1lx9non6r1u1rpsdd67aj+T9b3aejyL/Fcbr1qdT/R5Imr/IYo3NP/e9wBX
+Vv0fhSq/dE6TNQ7hyw7ZPuH3v+biD4HYe1bHvg/sL1hvw==
     "]], 
   {Thickness[0.05], 
    Line3DBox[
     NCache[{{Rational[13, 6], Rational[151, 12], 24}, {
       Rational[13, 6], Rational[7, 12], 0}, {
       Rational[13, 6], Rational[-137, 12], -24}}, {{
       2.1666666666666665`, 12.583333333333334`, 24}, {
       2.1666666666666665`, 0.5833333333333334, 0}, {
       2.1666666666666665`, -11.416666666666666`, -24}}]]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{425.78103376719866`, 410.27977521134954`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-5, 5}, {-5, 5}, {-5, 5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8842918912340932, 0.6961691375507841, 3.191140295101334},
  ViewVertical->{-0.016823093229384634`, 0.9002753100712753, 
   0.4349958041294939}]], "Output",
 CellChangeTimes->{
  3.753387200130289*^9, {3.7533876060047235`*^9, 3.753387621689745*^9}},
 CellLabel->
  "Out[753]=",ExpressionUUID->"86902105-2078-4495-994d-55c4d83fa0a2"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"cea09c75-4455-4f85-9145-f6f876696316"],

Cell[TextData[{
 "\n\n\n",
 StyleBox["Week 3 Homework",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7533877778898754`*^9, 
  3.753387780952685*^9}},ExpressionUUID->"b099f658-dc03-49c5-ae15-\
f6f80328ffc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P3 .5 .32
Find the distance from {3,-1,2} to the plane 5x-y-z=4\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.748359784069582*^9, 3.7483598220328217`*^9}, {
  3.748359924389032*^9, 
  3.7483599472819395`*^9}},ExpressionUUID->"16d31499-e078-41e3-8898-\
9d3513ca1b24"],

Cell["\<\
Defining a variable to represent the normal vector of the given plane:\
\>", "Text",
 CellChangeTimes->{{3.753388829880598*^9, 
  3.7533888398142147`*^9}},ExpressionUUID->"e29c7ad4-69b7-44df-b08e-\
56499845cd80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", 
  RowBox[{"{", 
   RowBox[{"5", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.753388120401635*^9, 3.7533881278042727`*^9}},
 CellLabel->
  "In[754]:=",ExpressionUUID->"d72999dd-87bc-42aa-9b25-826d83e8a603"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7533881283208914`*^9},
 CellLabel->
  "Out[754]=",ExpressionUUID->"9d1c92bb-5c64-491f-a0cf-1e719a040cfc"]
}, Open  ]],

Cell["Defining a variable to represent the given point:", "Text",
 CellChangeTimes->{{3.7533888452092934`*^9, 
  3.753388852549608*^9}},ExpressionUUID->"9099e552-a829-4631-842d-\
59ab8c7a8036"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"point", "=", 
  RowBox[{"{", 
   RowBox[{"3", ",", 
    RowBox[{"-", "1"}], ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.753388132206916*^9, 3.7533881375645*^9}},
 CellLabel->
  "In[755]:=",ExpressionUUID->"2aa26a10-80cd-4da0-9c85-6b6c8a9e67cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   RowBox[{"-", "1"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.7533881379963393`*^9},
 CellLabel->
  "Out[755]=",ExpressionUUID->"95256618-4852-4771-bf22-fba04e0b6896"]
}, Open  ]],

Cell[TextData[{
 "Finding an arbitrary point on the given plane, setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"0", ":"}]}]}], TraditionalForm]],ExpressionUUID->
  "3dfa077e-136f-4550-83b4-8d599d8e5b40"]
}], "Text",
 CellChangeTimes->{{3.753388858450441*^9, 
  3.753388872404743*^9}},ExpressionUUID->"29df6467-a8e2-402a-8c28-\
ede665a3ef52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plane", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"5", "x"}], "-", "y", "-", "z"}], "\[Equal]", "4"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.753388513279735*^9, 3.7533885188793497`*^9}},
 CellLabel->
  "In[756]:=",ExpressionUUID->"d50dc8ee-d3dd-4881-93eb-9402347e4d2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"plane", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[Rule]", "0"}], ",", 
        RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}], ",", "z"}], "]"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.7533884999700627`*^9, 3.753388553485776*^9}, {
  3.7533886145073357`*^9, 3.7533886183624525`*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"cfb178c5-7456-479f-8608-b7869b05d569"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"z", "\[Rule]", 
   RowBox[{"-", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753388534866974*^9, 3.7533885540299597`*^9}, 
   3.7533886192123537`*^9},
 CellLabel->
  "Out[761]=",ExpressionUUID->"63093a25-7b4e-4ea9-a9c8-d22bdef8fe0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pointonplane", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "0"}], ",", 
      RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}], "/.", "zsol"}]}]], "Input",
 CellChangeTimes->{{3.753388621097373*^9, 3.7533886435555553`*^9}},
 CellLabel->
  "In[763]:=",ExpressionUUID->"e2969eca-1a1e-4f56-80a0-f90d6e2b5794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{"-", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753388636705694*^9, 3.753388644048278*^9}},
 CellLabel->
  "Out[763]=",ExpressionUUID->"2559d02c-c0e9-41b2-a03f-5bb346d00db8"]
}, Open  ]],

Cell["Finding the vector connecting these two points: ", "Text",
 CellChangeTimes->{{3.7533888865861964`*^9, 
  3.7533888944943037`*^9}},ExpressionUUID->"dcef7abf-cd11-4c92-80a5-\
ae5d6c94f757"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec", "=", 
  RowBox[{"point", "-", "pointonplane"}]}]], "Input",
 CellChangeTimes->{{3.7533886463266325`*^9, 3.753388650962143*^9}},
 CellLabel->
  "In[764]:=",ExpressionUUID->"74b531b2-67f3-4588-96bf-c0133e3cbc0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   RowBox[{"-", "1"}], ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.7533886516213837`*^9},
 CellLabel->
  "Out[764]=",ExpressionUUID->"3044833a-a211-45c8-b071-42ea662d5a5b"]
}, Open  ]],

Cell["\<\
The distance is given by the scalar projection of our vector and the plane\
\[CloseCurlyQuote]s normal vector: \
\>", "Text",
 CellChangeTimes->{{3.7533888990396385`*^9, 
  3.753388917098499*^9}},ExpressionUUID->"154481c7-0865-4496-854c-\
f9ecfda282ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "=", 
  FractionBox[
   RowBox[{"vec", ".", "n"}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", ".", "n"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.7533886549102354`*^9, 3.7533886642049136`*^9}},
 CellLabel->
  "In[765]:=",ExpressionUUID->"88c82746-08e4-4fa5-962e-4206a46c154b"],

Cell[BoxData[
 FractionBox["10", 
  RowBox[{"3", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{3.753388664808731*^9},
 CellLabel->
  "Out[765]=",ExpressionUUID->"5855d91f-438e-414d-84a1-7590ca0e234b"]
}, Open  ]],

Cell[TextData[{
 "We can check using the \[OpenCurlyDoubleQuote]distance formula\
\[CloseCurlyDoubleQuote] given by: ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"ax", "+", "by", "+", "cz", "+", "d"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["b", "2"], "+", 
        SuperscriptBox["c", "2"]}], ")"}], 
      RowBox[{"1", "/", "2"}]]],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "04212b2a-b27d-4149-875b-395eeebca327"],
 " where the numerator is our plane equation and \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], TraditionalForm]],
  ExpressionUUID->"8a862d55-71f2-4ed8-a244-7a73772cf931"],
 " are plugged in as the given point: "
}], "Text",
 CellChangeTimes->{{3.753388923423534*^9, 
  3.7533889935566044`*^9}},ExpressionUUID->"b0813f12-5824-4c84-94b8-\
fbee8b341fe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", "x"}], "-", "y", "-", "z", "-", "4"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "3"}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"z", "\[Rule]", "2"}]}], "}"}]}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", ".", "n"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.753388738569592*^9, 3.7533888226151075`*^9}},
 CellLabel->
  "In[768]:=",ExpressionUUID->"c78d4b47-8079-4df8-badb-16efc086c0bd"],

Cell[BoxData[
 FractionBox["10", 
  RowBox[{"3", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{{3.753388775331978*^9, 3.7533888233560276`*^9}},
 CellLabel->
  "Out[768]=",ExpressionUUID->"86f1ea1b-5e90-429a-9d8c-2ba196d6f1ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P3 .12 .5\nFind the equations of 5 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"3", 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"4", "x", " ", "z"}]}], "=", "14", " "}], TraditionalForm]],
  ExpressionUUID->"1b188648-872c-4989-ad5f-8f20b1998afd"],
 " relative to the principal axes.  (See Boas 3.12) \nIn the primed principal \
axis coordinate system, the surface has equation  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["xp", "2"]}], "+", 
     RowBox[{"b", " ", 
      SuperscriptBox["yp", "2"]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["zp", "2"]}]}], "=", "14", " "}], TraditionalForm]],
  ExpressionUUID->"daf7ed76-26b8-420e-a7a3-b4f6dfc1d02f"],
 "; what are a, b, and c"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7483765307389073`*^9, 3.7483766885478525`*^9}, {
   3.7484806571704435`*^9, 3.7484807707541265`*^9}, 3.74848080432659*^9, {
   3.748708163820473*^9, 
   3.748708168751195*^9}},ExpressionUUID->"936a96ed-3a31-4df4-b79e-\
3355e8b3d72f"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753390283673177*^9, 3.753390289088967*^9}},
 CellLabel->
  "In[981]:=",ExpressionUUID->"e8b2bcc9-eeab-4c71-bee5-826fbf7bd5f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surface", "=", 
  RowBox[{"ContourPlot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
      RowBox[{"3", " ", 
       RowBox[{"y", "^", "2"}]}], " ", "+", " ", 
      RowBox[{"2", " ", 
       RowBox[{"z", "^", "2"}]}], " ", "+", " ", 
      RowBox[{"4", " ", "x", " ", "z"}]}], " ", "\[Equal]", " ", "14"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7492138065426116`*^9, 3.7492138997584476`*^9}, {
  3.7492141600407133`*^9, 3.749214160926344*^9}},
 CellLabel->
  "In[982]:=",ExpressionUUID->"9946d056-167e-40df-9903-ffaaf0dffff1"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
+OuCzLtgXZB5WufJYxbxQn1Ib2A/Rfz9GlI/D5ZEBma87mL0FdssdhRfeBGL
7AH4yPillN1o7mDg9oZmCfMV8LuWMF696rsK5Ytx3wPGZb5josRDJ/yeI+Am
HwJmT1R9iPiAH37Fz4vIeMrh50Wkv01erRioxO6nyTgCeQ4ZZ1fOTtmzdTl+
RxLoO/cUK2xdyaJJv/3r4MnUd3a4T4L2+/h5HdkXVeTngWRf9Ey1wQaLHvy+
Hupjm7il/fbD8sA6zQ7dUpql2EeTcbCrZeGAsgCLobfh/uE3I6YVjL4N1C8g
J+Q5IpJav07rXqLJ/ZFTMrGU4LQymtxPMeBYdPn44Xd/0P0n379UN0zCdSW6
BzXT0WVZfwJN7td80h5R3Vw/zJBH7IshZXoTzzvYycD08Q3yW1IY9uOq+Thm
zPJqBv2c1Z26j3P/0KQ/r/dqCAyUw+/loXvLN36aXb/3Mk3uS8qc+BKZeoNF
k36Y4tcRpB9eyK87yP0+Mb4eyP1H0Bu5X7mgT3VWVVwtTcZ3qJvI/VCjW/Nr
t5sNMOrNYn5fjvS3Vrb3aY8zw4x69tmYcXXny6sYfYbJP17va+rGdQfYm/ON
Q2rKQ+00uY+zTKNat+l0J6Ouv8KfL7Kf0Jgx78CL+UU02d8+we/nkPuDujMj
41X7WmkyTukl+nRWKJfRpD+8amo0vXNXJ83o88901Nx6tY0m+/zQbyT3EaA/
Se4jLJJ/FRx4BesTxmvs0uOS3oDf64H1rvbOLDnOBPdzAN/F70uT+1nQxyb3
sxTyW89+TeXR5D6U5MemvMx2bA+AW6vtaBNTYdHkfjH01ck4XsHvw5P7jwMy
zoH2drhfBHweO2uWL9Utosm84v8ASTP6tw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
f8ZoUdq+Rxja75qStT96MON7yQTyFPK9Ge8Tylcfg/6j/Tbyd3TnpHUe+n6k
Zyy6WwEfZhxHo3MEfA5tTsz5vkl3V0vReQ86Lek7et2/DIv5/nFa6FxI3+ge
aqDyJuiOD33fpbuoOjnPI9kPsfEE/z0mHzvptfGDzkHKMqF9vAT1l9PPfTx/
qnwk+BPFLugVx+bcpGOW3fCj8jGhXRHWPUsH8Iac5/lxxeTgD5R7jjueOo3n
WZrL8t2w85JiMuU1tYeH9gO78FyBfpwqvwI7B6jbifKiyD9Wf5FPQ/4f8j+Q
7wgdMym2ku+qvNjp8LI536vLNwvl10V+4BVp+3Py8YZSvzL8vLy/OTkFvXJ5
3z/qTlHfUZync4txq5B03uVF6lZAbyH6ryV8xzEv6X1+ftJxrM6vZfCrkVWA
zlduMetzck7e5+SEwN9haGy0Z1aP+Qxdhc4L6DTguVJgn6Zh3Hd5utNrB74I
ex3gdeF1oNoFjsPqRvgvdIvBT+quCHshuj3oT+WM9avAK2XsNykvfYVygdAx
9FvLvw8ct+seQ3FfA70DqKb6ozuouM+RZuCRoe8HV9PO14r/484D69zS+aV7
Ps2fioHvWpczXr14DnPO2+vMeUN3ENrHwPGc92Hd1emOoxZ2L4v5rjyvPDv8
J3gd5PVjvrdV7k154+460yh7PeEcuM7EMgXOn7+Z8ln4hPY25QWxfyV8NvLC
yBcr9x33Wd1Y453w+ajY6z9sXZv0Nyr1o/vCvbpPhHYFzvPrflH3jMoxDkv5
eyB9l/IH8sOB72UaR/ZvhhfJ+NxWnl85vda6r8g4LzhN50bS3+eMidknb5W2
X16K8nHQzzH7ANWiHNpy7ExVrI98YejYpIT8U+qWSvrOUfuL7l+ao78U/Q+i
3HdB1rHh0bhjK+WClBuSz1Y/imf0rUXjyI/UdyzjM/6eZlzGcUc+4VhPe44+
5noN3T45+55VaHN8yj6Nvst6UPGG/NGU4yl9N/O49jSeT6LzpnxD7bO0f2rO
90VtE86Z67sTxWu6S1IMMg/99ZQXQ3cyuGfK+4Pi19V5+6LDCnxf0w/ZVMVC
umNLOy95Ori/Yhxwq9B+7+4C3ycqXzsZeVPlEaEVBf5mZZLyK/qPijnQuSTh
OO5KqELMeekXoruqRcJp+5/yFQ9Be+QPK3bSPVDM99rJaO/dn/S3bfoOTPfL
ui/6F3xn0rG87gYOZXxvOUB5i9D3ukvow8Upx/67kf+W8b3TreqDxibq8+1J
x/X/ID+MTuG0cy7yu5R7XqrcqPbNnHMVyi3sSfsbkU+jvLq+r6pB3/8NfUeh
fIT2asX9n0V3zm9gpzp692mu0O7E0N+86Ru+tcqDY3t03DmUX5F/A++DjWza
OZrfQ9+JaT7o2z/dLb8T8135CK017FdOeZ/Xfq92pygfg8780PfPs9BpF/ob
s2+Rf4fsKXT+Bi8Infv6OcrzaN/Q/ZPunRvxfEeUzx8Z5ZmVb344mgOaC/Ny
tnU19b7I+e7zDnAF+Uuh4+Lfs8H/nGB9x1JGuSnlVsH1debRh7fSvuPTvWNT
dJNZ32XpLn5NzvesylUqT6JvI7rRh+upUw9cVHlL5c3pzwjk21LOGckfq4d8
iHK1ijup/5h8pYzzY/PAt2V8z9sp2m91h6h7XMVTndKOUa+Tvwx+FVwl5W8D
ToMfo+596NdUbkJzIYqXlAtdpryUYmj55NE76hb6u6lE0t/G6B61TsL5h4sy
Pid1Jmpv192a7jX0v/R9Vou8fSR9Y6JvbHRGaI/QNxtDsPMS8vboNQO3SThu
3RnlSOWXLJAfXOD7ysGRvuLoJ8DzwVVTvmdWPH9jNG76bqh73vc72mf1nUnV
jM/IavAx6C9AvxplX2T83ZTumDqknQsom7IfpfzjHmyOyvjbQX1TMTft73b0
LYe+C9L5MzbveyXNXX3HonuTSorrQ98tT9Q4p/wNhfCtodfK6cpFaa9APj3y
SR5XvhheCDvlk/7WpJxy1dFaqJjy/bDeqc7KtfRtduD7Mt1TjVPuKeXvEd5X
zhyd9tgsRNlHeccV8sv13cX/AcbsjYo=
           "]], Polygon3DBox[CompressedData["
1:eJw1nXngVdMXxe97777hvndLKkOKNJCUopSZlBAyZciUMpVQZEiKJBoUSeYh
GpTIVESURpSpQkiGUqJkTKbEb31a5/fH6Xv2Peeee+59Z9h77bVP9S7ofWqv
bBRF2xWjKNbf70pRtEJ/n1FaqPzaXBTdmomiNpJXKL81H0VHKT9f+ZoqPzOJ
opeUzyo/N42iRytR1Ep1JqnOOl17WHIbyYu4X/IjQV4u+RvJmwtRtJPy+6sT
20tuqPZa63lT1OYdZeWVPlfZB6rzVcnPH6ryL1VeXfIktXeX+n6N6kyTfJDq
f6H8S6q/WPIPau8s1R+k+veo7CHVP0xtLFH51yrvovK2yvdT+RiVj1fZaMl9
JW+n8gNCH3j2KqWPdf1wlR+o9Inym/L+PnynHVX+tv4eqrIjld5Rfjc9b4jK
lyt/r9p5Qn8PUllNpcnKH6Nr/6i/JdX5T/evVnvbR/4mq5SfqPtP0d9vJP+g
8stV/3fV36x0mfJr9aOdp7KLJJ+o7zCZ30TyBZJrqLyV3m+27p+ptJ/yP+ra
zSofyG8oeZ3af11lbfX8ryT/qfZuUNl1uv8stfeVyl9S+Zu8r9o+T9fP53nh
mc/rWi/lN+u+ERX/Rb5cZWfq/qZq83C1fYRSE+Uv1vWLVd5Dqbvya3XPuxoD
7yitUf573d9AZYeo7BTdP0vXrtHzq+n+arr/Nck9JG8neXvJbyjdq/rDVL+u
3u1NlV+u8suU3lA+q7+3q3ykUoFxp2uH6u8hSh8pP09poPI19FucpvsXSp6k
5+7A+Fbb3+taT/qr9ndQfq7ed6zk0ZL3kJyq/ijdP0v3XCB5q/p/q8rvUqqi
6/PDM2j7dKVFunaK+n6y0mLlp+u9qysf63lj1caJeuYVkj9X2SbdF0v+Q21d
pvKrdf++iX8rfrP1Kj+B91D5e0ozlN9f5Qer/CzVv0r1c5JTyT0l95H8uO6p
zrhS/e/1LuMld5S8TPJqyRMknyh5qeQvJLfQ/Xvr/ra6/xrd/7Ku3amywZJv
lHyIyo9VeS/J10t+T/eeL3mg5K/1PkXJo1T/KsnrJB+j+t1VfonSscp3CPIX
+g4ztX58ouffrXua6VojlX0q+T3d95y+91LmI/eobKjau1nPayP5TMk3SB4q
+UPVfyLvNYS1ZJ3SnSr7QW28nPp5l6qsh9Jxyp+q9KDKf1b5ayrfTvc/qvtX
SL5S7bVTeRfVvU91hkteofLn+M66tofKPpc8TfILSiuVX594fjPPR6p+Z8kz
lM+p7/PU/vuS31X5Qap/i+Sv9Pc6tXUV30D5L3g/1X9fzx+v8vt0rbHKGuva
u0WPecY+faAvDVSnqb7d66xxKpuq6/Mify++2x4qr6K/qVJD5cepfG+Vn6T2
3ma9CHJjpSeV/0t9rs8z1d8Hlb9J+e8jzwfmxUWSP5e8Uulm5RupzeNK/oZ8
y1uVGujZe6n8QV3/XfOht/LHq/xN3X+87vmKsabUQfk9mcPKf8a6oOfVVXsN
9T6n6n1q6v1m6do5auNspdeUr6r6VTKes8yr2bp2icom8puqbKbkCyQvl3yP
5G567n7Kd9AzLlR+L35z/V2ivkxI/RvyWzJmGDt76VpRZQ3UxvNqq57kHdWf
HZR2V36s6i1QW/PU3zmqV1/XSvq7p+pPLbu8isqP0TPmFf2950g+SvL8ot/3
OOXfUP7x1N/gWKXj8v42zEHmM/Oauckc/Uzy0XnP3c8kT5HcVPL9Fe+piyUf
nvdeO7/kvZc9+D7JD6nfDyo9qjRW6dOSv3dLld9b8RxgLjIHmRs76drFyi9T
+Y8V75Efqv4Ree+dw9TvoUWvn6yjQ5T/RN9iIXu45Fb6Bp9KnqhnPaD6B+Zd
Rp3bVPfLkvde9uAHK+7T6yp7Jeu+3qw687P+vgOVH6S0QPmqSs10Twu1/5by
j6vuGN1/iOSvs9ZZ0F1Ys1jLWNNYy45Q+SqVt5f8mOSD814rPwrvNJI9TuV9
JA9Xm+1U/zfJzyr/lOpfzf6rNk9Veklly/WN/lHdc3Xv0yobrfu/U/1VkX/H
wZKXSK6mNK5gHehjlbXNWzc6UG3cq7KdJY+V/I/k51T+tNK3Je/xa5Q/Oez9
dxf9DNpmrByn+j9nvSewN9yl9J5+r0VKdyjfmPUn4z2bvfs5pa7Kx7r2j9p+
NsjoX2skT5X8jPr5g9o8Sm2/z1hn/9UY/bTod+Rdf9e1/1T+TMXfhm90tORv
WZ8ln6v6vSU31N92fAul+srPKXg+7Kf8K2rvXrXVVH2prvvHsG+qXN2IVBS9
qvydYb3bTfWn6eJbav9J/e2j+i+oYnfms+q2YE9Wfryeub3m3gu6p6/efaGu
tWe+KL2h/JO6/0y1eYbSZOVPV51ndP0ftTlb8+9FXXtY+Tzvq7Lpkh+UnJX8
MWux2v836z2UvfQMpWkq+091Xtf9J6p8i8rLKq+o7GX2D5WVVGeF5HOUblbZ
bMl3qu4LKr9AfSno2r96n1qSByv/q679q/yxqvOL2vtL/c+gW+vaFdTX/Seo
bBd+P9Y2yXdLfj60x++7Re09rmuxvscxkg/S/fUSP+th1XlE/X1M5dVi79ns
3dV1bRd996cl92ZtVL0Nevb2av8Jvcet7E+Rvz+/w/aqX5u5ofpXqH59JVWJ
DlD9rmp7J8m1lJ+iug+q7m6Sm6vuI+gYFe+vLSS3U50LVX+Jyleo7Q9Vf6Lq
N0usK6Iz7qN8DV2ro+c9K7lP4muUnab7u+v+oexBkveU/LrauEVyPcm1JT+H
3lBy/3mPd/XsamqvltrbWWk75R9SGyV9jwm659LEifw0pf7KT1b5JKWJ6O4h
X1T9Quxr+7O3q/0Ka64y48r+Dfj2BysN03P3UFsNlG5Xvnni9++suj1oSzfW
yljHRddlzDH2HlPf71P/flb/16NL6lon1X9EKa9nj9E9l6nuDqqzq95lCjqE
5B2DfIvkOmov1bUk4zHKWEWHRpdGh0aXXqT0tJ61M/YLv3/Wc4c5dIryVVR+
T956SFXlZ5as396gssPZnyWPkTw06N/oxOjGdyk1VP5VlQ9V+Y2Sdy87kR+p
Pl6jvn4b2x7ALjhJ/bieNUf513VtDz2zr+QpkmdF1kvQvx9T/n5da1K2vjJb
cgOVDUi9/z0huQZ6p/rXT/c/q7pdda0hthXzQPk7de0KlfVXekH5C3Vtb5Wt
i52/MNhT2CHYI/WVDlZ+gcqrsp4p31rlb0jeMdivBxQ9Rhmr/fV+Z6k/r0su
q2yA5DNZbyRnJN8subPkd3T/Lrq/ta4drPubZW2H78x4Uv5IpabK74bNqfwi
FdYK+QNV/23JDSW3kXyo5AP0t3bkOrTZLuu1kjWzLb8Za5Xy2Pz7ZD2HmcuD
1J+z1Z839f1eRHdDh1PFPcN+dZ9SI+WbKj2q/L2q30/1s/p7u+5fr/FTq2Qb
/JpgO3ZT+b/q341q71pd61J0G7Q1Rvf1TW1DYr+eE9m27Jq4PdrNp7bhseXv
kXwD/VOdC9gflRYq/7vam6C/45UW696PVL9TZB0BXQEbF1v3L8aZ7p+u8r4q
OwddVvIm1XlY5XfoWhts3ZLH9nkq76HyzSp/VuUPhe9xta4/ofwMXbtPferC
eyl/YmSb+4ys81w7X/lbU+tL6E23KX8Y8wTbV+mSrO3TEcoP5L1U59Ksy6hz
kPLr1e9LI9vKJ6v8Z/VhmOT+/N4VX6f8kjCH2CP7BNt7JHtnye3R7sGSp2Kv
K99J5V3Unzn6PqUwHs+RPDv22Giif1qqzjzJuhztK7lV0fjKlcr/rOtD+f1Y
cyUPUZ0RaiOn9xmu/JVKv6rOM4wHylSnXtmJ/GjVvVr3Hxr0t8mMo/B7U59n
8Czwhb6St6it7ir/QP3dJPl0PWe05HmJsYrz+Xap/yKDYfyne/4sWV9DX0G3
4zflt+0S6ndSO/0jj1lwpPUB/6JP9O0vyb9F1pHQlXLB/tiatW5QTrzXs+ff
m3rPBssB02Evj4P9jQ6B7gbGUw7rMdhPZz1/M31lDijfXtc2Bf0TXesX1f9O
ZWU94ySV1VK6Pmtd9QJsjwRFQd9J8isV6yDl0L+TVTfRtbqsR9ghyvfWPd0Z
29i3yi9T/fXh3cHS0DGxzTZkrXtu0vN/kTy1YP3pc33T4/n+9B/dV884VfKZ
rEcqP1t/T8F+CXVWx8aLmNvHsSYoDVD+NrqtZ3XOei4zp7sx3sFJlD+L31/t
LYuNtR3D2qV7m2e91+bCGF0Ze31jnTta5XMkJ2Ft27/oOcJcYWz21Pu2V74G
67XSUVnjZ92U76r8Car/dey16BzJx0s+LWtdFp32JOVXxN4f2SePKnqPrBZ5
T+Dap7Hx0ZMZb0XrVOhWA/X8M/T8GSW/P9+B/nys+s1D223Bf7Je+9kDmtKn
rLFEMMUO9CXrvvMOLZUfq/ZahndprXd9RHIryZ3YjyQvV0OHST6O9a3ov8gH
hG96EN8o6z2EvaSke67X7zJV1zuXvcew17D/LFb5IZKPyHpNYG3AZsN2e16p
se7rWPTvyO/5Tez9kr62D98LTBlsuVbe6z/7Z7Wga/C9SHw79lTKvikbez5e
16qW/U68G/b8+JLHIOOM8faF6j+ma0co31HXtiv7mfwu/D705bPYvye/a/ui
vwHj6/DwjWiL8X1a5LHcU/3sF9k+wE5YF+zr6sEex4bEPgbTwbbcGOy3jsF+
Z31i7+sc9kPsebC3j/kdwBMT256sp11T6xzoHoxJxib24DeRMTns2dXBvj0s
2ONLE9uv2LGjUq/7rP/ovGCxK8GklZ+EbZXajlwl+cvImAN7CnsIeOyG2PY5
eEKr/9urFc/tW7HxdP+Xsec336ZD0fNk296tdG7WYwL9Aj3jkDB20EXQSdBl
3gevV9t76XueW7ZOjm5eX3Nkh8RjkLoHhLGJvsNeyL6JfsSahi6MTsxatwD7
ij1QZVeBr8XWl3gW+tD5qn+E6u+r9usmnt/szV3CenS8nj+jaB0XXXeS3v+s
yBg6WPoO4C85Y/hb8l5z2B95R9aib8ve79n3qys/ruT5yzzeHt2EMRp5jjJX
WdNY21gzWTuZ98z/fcOYxKeyJmcfB76OtWXPd+Z9lbL7fF745rwL+zVrRbOw
3h0ffpOzdW1N7Pbw1cxTqlGy3spcYM61UH5u7PW0edjfTysauwfD/zE23oTv
Bp8Nvht0CHSJXXXtoZLvQTfAxqetJbr2FOOvaH0cHZlnbqfyhbF1JnSnV5R2
VZtvBH3+bl2/Hn1Ycke+J3OqZMwXLPMGtXNj6nfcJ/wGvPuMrH0R7DEvKr9A
9SdHxpT20/dqkvfv+bLkAUXr47PxRYT1GLwIrPvwgEftpb/zJb8W2aZopWtH
Z72msrbupmsv81vqWp+i8Te+T+uAt+EjwVeyf8DXPgj2SOuA14H/goWBmw3W
8z9X+cqsdUR0xcPDmsT6/IHeb5+ANy7TtVuK1qvRVdBZ8NW8q/bmSr5J129O
beN0jYxBgUWxJxwV9gzGEnMCW6FJ5LlC+9g72EDgbTervVkZ2yunq71ZbKaM
h2CvoC8mWdsL2DdstsWg76DPgEGARYAxgTX9E2QwCrAP9J9S0IfQn7aWjE9Q
DpaB/gT2AcaFvoRNiF6Lfvud+vuT6n8b2Sc2Max/n7CesT6UbS+DX6AzoTs9
hc9M+Y34ydTfp0se34zz8yUvCvsROh+6H/pUTnPlIdaE1HYy9jI2ObgQezRz
Fn3gk9g6MmsC+sjrTET1aSvro+67OzXGtjzMH/DZ2cEeHBjsLezn+yL7OPEz
osehz/0p+f6idXJ0c2zGZhXrvei/GyXfo/K/df+/kXVGdMf/7/HsZx+pPxl8
YGqvi+4bk1qPQ59D5xvDfNf1WyKPJ3Rh1tjWYc1m7QUT/EvyC0H/RR/ALqkb
yrE32B/ZJ8HqWkmuoevTwTx0z+O6vgN9C3h4a5X/ybdUeT2Vt5D8X85zjrmH
P/lGfH0qe0/9vSBnDB/s/iIwJqXzwzXKVoFZZ+3zwveFT/QMXT8zZ18p/jv2
tVP17B3LnqPMReYkWEEv/As5+x+/qdgHin+Na5TtkljXaCT5nDBeGX/43/Cd
4v/DP8aext4Gpgm2ubfqv8QaKPln1d8x4FHoVrup/i4561gzC67bVOm1ghP5
ZkqzQ572mmR8La/+VFV+hsoWgx2GvRP8BhyHPRSZ6/g/twP3l1xF32A//Gcl
/wZ8+/oF42d7ghXp/uexUSXXlFwMGB6YEG2D/fH74s8aqPKddO+7qe1LMBzm
ac2y90P0MPRA/M/4DPEdgvedFHxn+K8ywcfFfokOzLyqVjZuDX6NjwZM8P8+
ZfQZsLyJJdsg6H3Vg32WUf3puu+zive4r3PeQ9n72LNvU/k3Oe/lR6jfX4Cd
qY3Okh8obZtu2zDM+7G1wCDV9nMqX6X2h6jNl5Xvq/s2gGeCYej36K1rZ5WM
QYJFLlb5atX9Ut/n5Jx9b/gun1bDB2R87R1dW1w0vjU1a//bHJXvzPoW8PbW
iXUVMHWwdeznn/Ss01W2U9m+SfxZzAF8lFNKxgjQ4/BP98R+Utmi4E+fAibL
OqDy91P7jw/LuA518f/tqOd35B7VeSpv7I0+Lg4YwplBJ2Dt/E1tXR8Z48WH
hd8M/xk+y4VFY+j54Ov7uOIxzLg9gWsF6wzoDrtH9g8yr5hfvNOROfvSGY9t
cvap/6J76urZH0ouq/7ZSlfG3oPbFIzDg8f30z3rCvYR4is8RPmP9b4b1J8X
VL5V9bZUbEe00b276e8yxiC/Ff5ApaV8A6W3wjXKGuh5f6P7g++rzb/Vv+uV
f1rXqqnsErW5KWcMCSzpH5Xvrra/yJnPcqTSXrH1ucboHJK7so+p/o15j090
y5WqXxVdX/29UPJtkgeqvWsr9mcernuX631ukDyQsak6jyf2q+Nfv1/pypx5
K/BX7lC6TvnTVH+A/t6odDptsV7r/jd0fyswNT3jppz99f2VPxe8XOV7YXeq
/ATWVNX9hHWs4j7Rt+Uqey51f4dJ/q5of+FwdHv807r2L1iMrvWKbdPvr3xH
1R+lsu/5bSv213ZDj9E9Y1TWSM//Q+XjVb9Kwb8BvxUcG34bMG2w7Z/YJ/X8
A9G3df9LTGJ0RPwP/P66vkTlP0lep/v2kfyO5Cb6m6q8p+p/zPoqeSO+Gcl/
SJ6rVEPP2zdnf9VhKt+KPqDy/wq2IWpiu+VsWxxU8vzCX7B7wX4O/B0tVD63
aB8xvkx8mshHqH792OM/LtpnjO84UX4p2D3zXfdemTEH5FqVXy75CqXr0G/y
tidel1xU3TpKPyh/t+rn9fzNidd71v1F2Jv6W1vPnqk6cck+KHxRP+r6Vn3L
HhV/c7717sq3UX5v9WcP9mNd+z7vucUcg+PFnGRuMldnF803YH3DpwbHoZ7S
7swZ3buFZ5eMDYPp/i55F8nfM2bxp0keHfwjzNFMyRjyd8qPDBhwXfAn9AVs
FnR5fGoqm6Nrd5XNz8AfNiCM9Z6JuQBwAuayXpaMIaFXYz9VLVjXQOfYi7VE
6QyV74z/RO3XAA9hvirVVz6j+ndk/Jvw2/xZsO+FPtE3fBL4JjDC4Ez04huH
+Xl02GNfVL5m7L33SfWht+5dkPd6/GtifYg9uZbkG/V3nOr+pnvO072D9E5j
0cMkV1e+pu4bp8dt1j0NS+acwT1jf9tJ+cGq8zyYkvq+Su31l3xYbB8Tvqae
qnMpdiC6V8E+0+dVVjW2LxWfFb5BfITjgs8L/2r12L6wfuiryrdTnVl58+Lg
5uETwzfWR/I9yn/Lnlewj/EExmNs3yN6A/oDnMGWqntx4vHLOC6pvwX18Uq1
21vyAOUvSjxeGDfF1L7Ncax9jJ/YvrDxGY8PfpMLEo8fxlFB9fP6DvXABGJz
YBL14V9+a/ZrlVfVtWZgiLE5kMN031DGBP4a/GjYk+DI+AdZL9X+fWABesZT
auuPxL/toWG92aNg3bdGWIMGYf8pvwkdHHxcz9g1dp/o22DGhPJ/q7wnflh8
aLE5JXBL6MsUyd9n3CfmZv2A14HbNSpY5jpzlz2GvQb9p53kTYnXL9Yx+Cs8
v57q78Kc0LVs0bZgnSC3VaodW+b+Mhi26l+jdteiP+jvnIznyLEqX6Nro/X3
7pLLm6u8IdgNOGnJfCDWOta8Z9RWB9YWlV8WmVPHfOX343fEt3m0/rZHv6N9
pVs1Bl7Q395q92u131b5I+kbcyI29+gI3l3peH67xDLX4SZdm/fYZw50KPke
9j76QFv7xeYqwVnaNzZ+CGaKHQXeiH8YXy/j+2H2SvXnfuU3oAMk5hh9nPEe
xl5WIzHe3kXyK5L7x35Xnsm+e7HSj5H3f/SABxJzldjj2evhmqC/wHmCc3KD
+r+rys+UfJrkGWrzvNjtXwPeru/yq8ofRi9T+Uf0Wfk91f+D9f5Pqf1fmB+6
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
+aaCz7bpUjFn4NLYPkl8k9gYYKxgq9gefwR7EBupc8U+DXwbYIRghVt1/6d6
hXZ58/HBXLqDY2WMxYBB4Etl/qE/w6lkb2SPZH1iz4J7emneexmc2QvzxuTA
5sDgTgn4B98bnQndCYwOrI6YofPz3v/ggx6V2s7F3p2SOKad2CL4om3LPoMH
fmrXgPcRI0+sPDHpxKYTP79WdacUHD9ADBC4H/gfsUHEDI0qes9j7wPDRq9H
vyd2i/hreKrwVT9MPD97gA2gEyReR7BV2oNx5B1TwVkHxMwTa0HMA7EUayLH
QsD5JTZ+XcB/iLHAbsJ+IvaCMzU4W4MzCDiLgPh1eLTwaYndJ6aBWPwlQV+F
044vZUrQZx8O+iw6KbopMRbEeHBewOqg7xJ7QQwG3HEwevQG9Ae4sJx5wNkH
b0eOvcA/ylkL6HDocpxZwNkFE1gPyuajtgr6M1zyuyve++HHv1/yGQGcFUAM
IrGI+MhuKtmnhW+rbcU+E3wl2KusP4ODzQAXipjG3kXzRuCngdENKZlzwPqE
j7Iv3yG27xKfBb6LSZH5sczX2rr/wti+Zfy7owo+A4azYIivAlMHSyc2kZhg
fCz4VmYGnxu8B3x89BcdFV0VTBdsFx86Pmx81/jWP1X9TgXzRyYn5hCC44Pp
gu2ic3IOCuehoIsSj8A5QXBQ8T8Rr3Js0ToHugc6GboZOge6B5gY2Fhbtfd4
yfsT2BoYG0ommB/Y3zbOf8WYG7gi+CJYHDoMugzYJLFq4Ld/FcwBhAuIPcDZ
GDdHPmvpA8kTAobRIDFef6rufZvxnhgDBAvsFPY/YuS7hflO7Dw+THyZB4K3
4M8JeD8+VXyrrKmsrWCy9ybmYLC+XF0wN+NEtdclZ58pvlP2TO6hLlgvZ55M
DBgGtsQK9KmCOQT83nBkwEnBS5OwZrJ2EleO7/kLlV+o+heAPaTmKOGTxRcL
dwl+w/2J9xT2lq9U5xLVvVjpy9RnFJ0V8IHJqfG1k8O+zN69FLxJz16K/Vj2
nsHeAecBbgP6SLuABzYP+xf7CZwKng0HCl8IPhFir+EUwfmC6wXXCE4Uvgt8
2XCl8Nf3jO1jZz/Cvwm3mdiDDWG/wvcO5wPuR4eAKYMJ0vdFQd8Bs07DHspe
yp7D3gNn8zjev2QuJxj1SHT4gF1TZ1jYD7n33bCf4eOHK9A/dew1ezB78Z9B
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
ho9x
           "]], Polygon3DBox[CompressedData["
1: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
3zcopy0GXhRZELd7W5M+/g9tFco0
           "]], Polygon3DBox[CompressedData["
1:eJwt1Xtol2UUB/B3rl3chorLGjFlYqlpG2ollYJCTQuJTFFDJZe5mblmpaal
aZl3dF7y3qTMFPGeKOatTM0oFS8bGkVs3da8bOaizFna5+HdH1/e83zP93zP
eX/v8zy/tiPHDShpEkXRMEiGTU2jqDohimpg7R1RNCU1in7IiKLZ6VG0XPwm
UbKCiZ4D8f3we1KiaJ9158Qo2iv+AJ+Gz+GRDS3w6/GHcTNgK9+b+BtQpK6S
vlTfE9bfwgD5Z/SqwJfQPynOVN8D31fcHp+K/8m8lZDOf538IVw6zE2KovnQ
Gr8Tv4Z+N/8SvcbBp3xK+VThp9KPE7ejK8WXiLuHvlCEm+ldF+gxH66lRdF0
+jK6OnP+AcP5fU/7K/+R1iOgAveb2mn0w/G1ZrmEuwhXoAuP/vAjzQG5fDX/
8K+g3carGv+a2fvhZybGPpfpK/ETrM/w+Erdnbhv6DOt19IuhVr5tfTH8M3C
t7NuoG0hLqA/5/mAdZmag97tMJzUd47cCrmOenzk/Q5CBp8+cqP4joHz6i7K
v4e/X5yhdg9Mxa3mtwam8ZkcvlH43XlMEvcwSyLcUjOIz0CoNtdI2tu8nsMP
g+u8Vqrbgu9GX6B2Eo8n+DaDHPxg+lZqL/u9aqFQ3VF8IowSvxN+F/lPUmL+
uPnX0JVBc7lifC/8ed5drLvCKX1PwCnaRfouoJlsfSPsN/n/9BwNFfjnrZuY
vzfk0r9Cf41uIv9ZMFVdNu1eGKRHT3OfDXsifB/6V+lf4jObbjH9TNhHV4Rv
CPtK3RG6SfL3iN/AR3rO8VgK8/Dt8Pt4dPeemeEb6nEEjkIafRt+9XLL9Fwe
zhi/DnId+FfhK6GjOI1Hb16lnpvlr/Kvg3r113Gb6H7B/y1eJ64SXwhnQL4T
rpb3FdjGvxcuh2db8yTKJUEy1Jk9G3dcfQpNLY86+I7PQuvi5PgcXYVU3NNQ
pq4oKf6+V+AC/2fxH+PH47NoW0NL/Czopm8e5PLKg3a+7xD6VD3T5JOsi9Ud
93wKNvDZTddSfqP4WOM56mSedD63Qg7ahjr1G/XakBDzeTRj8J95LjTbEkjl
PZpPm7A35U6GvQyn+Z+CEU3j/TCCdzmfAs/B6nP1nEX/vrib+tMJ8R24iP4a
/KX2eji/Ye/TjEqP/YfTDIUp4Zuo28rnZ/pC6z5+69P8D+n/MK51RvwuYf49
kCVXzOOm3EPiPqG3fFcop+0sN0x8L9+l8m+lxvfb554rvesiWCw/NiXeh1ly
Oda7eK+HNDVjeSzm/7X1fmhK21/96433Xr0ZG/j0kfvSnJt4zKPvqzYfWtG3
5zk9fFv5s/TlcA4qYJ1cDb+tPHZAfrjvw/9DWjx/uJPDvtrCax5dfkZ8Tgtp
3g37k75erpb+cfpp+A/pv5DbD2fVzA93TbiHrecmx2c86BvM1EX8IDSXz6fd
jq+jr7GeIb4qrtDj7vT4fFXzqDHnJRiA34D/k09ZQnxvZ/C/j88q2iVyE/hs
VLMKP16ch98uPz6K75kwz1B8Fn6n9zrDs5BPuefv+CGN92G4G8M5uh288Ltw
bwd/XjU8dtgvK7xHEp+X+bwQ/rPC/51cgbhnevy/cIAmBV8f9p3c5Yx4Xz3G
59/EeP7MxvOSG+7/8H3kq/guo7kozoZHxHfxSuD9qHizfNtwP5txNayCF+GW
3P+prSaY
           "]]},
         Annotation[#, "Charting`Private`Tag$220870#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0D0vQ3EYhvFHDYRJDF42k6GSSqSJSCxe2qZJO4jkkCIctVW9LMw2ibks
nTXxKYwikopY+RKC0e/EcOe6nufc539eZtKTjfZARDRkYShiLhdRl7GRiJJ5
la/IMi+O2vGjwYimpLIvZ7rbWHP9XS/hLbtv3U52Bv/iJfzFW7sfLOt3+bB+
4to9n+APOIk9PNdLsIWbeIw7OK1/wRt8il/yG/6JS+YPXHP+tV2Hz9rd4Wn2
jbzLC9jDJ3mWl+xZsui+it4WP5AaH9dN+Z5UzbvYzP4VP8S+XPFXfJN17/9o
LuO8ucgLmM/9/+c/TTMp3g==
       "]], Line3DBox[CompressedData["
1:eJwl0MEqhGEUh/FjhoSNbNja2IgVIUVNzKQhZZgY6jNs1NTMWLgC1yBCtspl
WKBJlGwsXIVsbPi9Wfx7nve857yd7xs9aG00uyIik6neiMlcxLQM9kcUnNf5
pizzmYGICj/MR9Qlkw/1tt5tfoRVbOC3vgJ+pVn8waL5S/15PWtq1/xX/QLL
zqF+x/vwBrvxCnvwIfXgIzbMVLCJ896s8mNewxHvtPgWH+ZtPoefOItnOIbn
OJ52SHt640T/LX+SjjzLi+ykefcr7mvpXSnxofStPJOy8y7uySrfx1c55e/4
Jkt2v3cu4mLamy/gRO7/v/8BKssqqw==
       "]], Line3DBox[CompressedData["
1:eJwl0EsrhFEcgPG/S81kUIqNbKzUkHLJREOTxCC5fQEpt435CGZKNE02kp2N
WIkF+Q5WYkW5xNrlM/hNFk/P857zP++8czpXC0vbNRGxgr7aiH5kEhGD3JKM
eKuL+MQHuuojctbSnLU/bC7DQxjRo7yO1oaIec9regMLus3app52dhJ5jGMC
c95ZSDmjr80t8g0v8zvf8iu/4FJXzF/xs+cDfaHLfMpP1nb0mS7yOZf4y/e3
8zf38C938A+fOJPWKbO9vOVbGnW33rdftF/Cnt6t/iZX+JjLfMSHnDR/p+/x
gEfM+s/N9nLuYEZPYUw3Wcvrger9Jf7v/g9Mqi2y
       "]], Line3DBox[CompressedData["
1:eJwl0D0vg1EYh/FbKyEMEoMQk43BKvWS8KQVkVDtszF2Y/DyAZBUJFJdBB9A
rBKRiK9gErtQnbSdfAW/J4Z/ruu+z31OzjlTtYN0vy8idqQwEDGfi9iVheGI
qnoxc0n52FDEHl/tj1iTRIrypF/GQ3vKgxEVfsS3eMq/rD/jB77gjX6bP/Im
f8C6+Qa/5yd4h8fYzUdMYA8nsYPjWDP/w2f5Jdad13XHC37Kz/EMe3pN3uC3
+KvetveaX+m94pu8y6a3jeglZjb4uizzOfOl7N1SUqdYlSKv4Ke9o+7Rwm+Z
zv5GPYMr1pfMJVjI/f/xH6qxLKc=
       "]], Line3DBox[CompressedData["
1:eJwl0U0rhGEUh/HjpYgoGwvKUCjSfAJJdoYkNkOZNCnynpkpkZQNK29bRdGs
mJRiJZKVz+ADkA1fgPxk8e+6zrnPee6n52nLrowtl0XEnKSrIgrlERmckg3e
Vxsxz7d5FptrInb4DN/EXufTfIu3OtvFBO7hA85WRjziHJ7odfF9XLLTzg/5
M2aqIxbMpHEJ8/KkP6le5WfmTmXN3gWeS9J5Tl3kBTMlXFdf4guOVEQMS1J6
pFtu9Ye88x0m1C1yw1N6HbxTHtT9eI9ZdwzwPL6qF3mBf7rjS1L8BwfxG0ex
zsw4NmDRzqBnN/Lrv++HE85KvIlfYVr9YfeYH8k7P8A3rDeTK///N7+3OjN0

       "]], Line3DBox[CompressedData["
1:eJwl0c0qhGEYxvHbUMTOx87CDCKaHIHFZK0pocbIxGTha6b56M2UxNoCsWFF
TbPSlCys7OUQ5ATEQfiVxdX/f9330/O89aZ3qiuVnogoS6E/IklFlLCFe3iG
i0P2/Jzv4vhgxAnf5qeY0dNywWtmWX7HZ/Ee5/ASK3bT/Jofu7M0EHHYZy6J
XtRrvC4NqUrB7MH5R2lLzrmmezo8sd+07/KW2RN+YL434h2XcUGyMi+vZlve
n+DPPI1TkpFJeTEr2s/wnLzpZX2J5737pR/xxOwAG7iPdfy0G+GrfE2Gecds
DNf1Nh/lXdzQf33rLf/BG/zGK2ym/v/DH6RLLoI=
       "]], Line3DBox[CompressedData["
1:eJwl0DsvRFEUhuE1Q0LOSPgBSGQa/gAlnaMZTDtmIiKDENMZ0bokBJVG5VbR
UGglgs6l1VDS01J4ThRf3vc7e+2VndM30ygv5yKiIuv5iA2pt0X0JBGbfJEX
+TbfkSE+KG/8BuutEbe4gLu+DRciltzZ4yO8wQ/4nZlVM9PtEU2sZnR+4WzF
TFPO+Rpe4jNOtEQ84pMM8Kod19nb+BV245Rv/fiql+yr8ffsLv+250tSM784
ij9YwnFJzH5m7+T77nzwMj/jXc46ZVI/1U+koHdIavexfiR5/RBz+IJj+ID3
Mutuqm/ZO6/PSW/y/5//AJspLqA=
       "]], 
      Line3DBox[{658, 659, 2612, 726, 2621, 739, 737, 2622, 1931, 728, 2613, 
       1925, 727, 1926, 729, 2003, 850, 1999, 2892, 849, 2002, 2662, 851, 853,
        2666, 859, 2670, 861, 831, 2655, 829, 826, 1978, 825, 2657, 1979, 824,
        819, 818, 1984, 706, 1920, 690, 688, 696, 702, 2609, 1917, 700, 704, 
       1918, 2883, 658}], Line3DBox[CompressedData["
1:eJwl0L1KgnEYhvFHg4Q8gsbOQPsclCKoJZqqKRoiSHNID0BBAsEIGjuIxujT
QkTsY02oiFoiWm136wcNF9f93M/D/4V3YqeyVk5ExDqqqYjzZMQVLnCJmu6a
28iMRdxxB7do4cC+x4+4xwMm3T3xFDfsX+W8/M05PtJ9yQvyDx+bl9MRn3JT
PsSHvGu/MuJN8zifcopX9aP8bO7j1+2i7kQeyEvykF/MRXnDbYk3+U23L2/J
FS5xEXso4N0+x3nMY9vNHLf0szyNGWRwo8tyh7u+V+ez5P9//AOZcy91
       "]], Line3DBox[CompressedData["
1:eJwl0UsrhGEYxvFb1GjYycTSwkdwaCZr65EiCzUzYqMR0jA0DhMrKzZySJJM
NtbY8gFEDhulfALJivKbLK7+//u+3ufpfXu78jNDxYaIKEgpGTHTGFHDVFNE
f3NEB063RKT5j64b9/S/fIC363uwDTPYiVWs4RZe4Cbu4r1zs3yHl3HVvYe8
xPfxUV/AaxyxW9DnzVfmHN7gGGZ187pRfmuXNy/xZbkzT5o3+LqsSUUm7Pqw
V9Jy6blBu0z9PevfyKs4hQe+7TMRcYRfeIwn8s3P8Uy2nT/FpOcf8Fme5EVa
7ca93yv/kJQ5Z17hw/jungovu2MOF7GIWd1b4v8//AHAYzX1
       "]], Line3DBox[CompressedData["
1:eJwl0E0rhGEUh/HzNDSMBfkCUgorZU+2spMeCxNSpJQZJZKxkJVk6z0pRUKy
keQDUNY+ALKfJOX9J4vTdf3Puc/93D2NI4XeySQihlQxEzGlnrMRaU3EEl/I
RTzJM3xW1VZFDJvV4bH8YXaEq8698w1exi3scaarImIC5+108G7eiQUs6RUx
lftVH5/WG+SX7kv/vsVH1Z28jLd4o1b4A17hI17jnirZWXTHLr/Xn5PX+Jn3
fHtX3uwLz+XE7AQH9D71TnlG7wLbMOy14qZ7Et7Of8xacNxOM77Jr6qJj+m9
8HXnG+Qyr7S3I1fjNmbxAA9VPd/P/f/3XwqNNLo=
       "]], 
      Line3DBox[{2015, 884, 2693, 2026, 910, 2029, 913, 2191, 1202, 2192, 
       2948, 1201, 2190, 2947, 1200, 1108, 2740, 1061, 2731, 1060, 1067, 2734,
        2117, 1074, 1070, 2116, 2925, 1068, 1057, 1053, 1051, 2114, 994, 2067,
        961, 960, 957, 2702, 2053, 954, 2052, 953, 956, 2704, 959, 888, 2681, 
       890, 2695, 885, 883, 2898, 2015}], Line3DBox[CompressedData["
1:eJwl0D1LgnEUhvEjRlauTdGLFbRJRnsNbb1AKFFzH6CgTdyCpFospdWxloLA
QSFwyAp6+QJNBQ5BRX2FfuFwcd33OYc/D8/k9m5+JxERBbynIkrJiMOhiCpv
pSN+zI7kTflDPpbr9hX+0r9R1k/0T4wNRPzyPl/0RZzj1f5Ur6Khv+ktPtPL
3m3KNflA3pD3eF2fkS/dTvM1r/EqVrD8n93McQ7zmEUWV26neNE+wxMYxwgW
zEZ5ibu+c5hvuZ87fId7PCBl1uaK9264iRYGzR/5Cc94Qc1NkQvp3n/8Awtj
LhQ=
       "]], Line3DBox[CompressedData["
1:eJwl0U0rRFEcx/HDTJG7YEGzRnkFHmvWsp6ywMrDZFajFDGMsZhiQVEeI4Yk
Y4udV2BBYTaWyiuQPG18Jotf3+/v3Ps/nXNv69hUKlsTQsjIa10IhVgICw0h
LGNjPIRj3oQnWJI4j0mZJ7CvPoRL/uv9dv6Dk1EIHfybt2Fa/+LdvEeazSWx
Fq+tX0lRL+sruCp7/Mm+s3yLT+Ojvsln+C4u2XeOH/CKZ/u4Iff8Qdb5Ha7h
hNzyEUyZueFDfN4e43qOj+IiFiRnPa3neW/1ntKvd2KXZD0f0JPVM0tRMvqh
u7z7jkdYklP51C/wXIbNfehn/FkiM9vOUuEv0qK/YQJ3rOf5YPT/b/4AGYc5
Kw==
       "]], Line3DBox[CompressedData["
1:eJwl0E0rhFEYxvHbS2YajfIF5PkGxN7ekqzQFDaeyViw8xIimsXYeImSEhsL
SRnJnoWUbK0k+0kSG/wmi6v//zrPOc+5O8nY9ECpISKGZT4XsdIU8ZaJWOSr
vK054oi34wkeSwvfxyzmpNga0ZuNqNk/zjv4O/+QCb1TT+RT/5HUWpfeLXnn
e/DSeiNe4K/7g4/ad66fyYw+KwvWtp05kDl9ST/kO3yd3/BreTFfGW/xTjb4
PaZYkCs+VL+DV/kgH+GPfBNLegWn8MHaGk/5pPTxftwzV82su/iNX3LKC+bI
+/5cfz98wi3/WMbXzP87/wFrqTNA
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwt0Tsvg1EcgPFTt7CQTlKbb0QXVo3FwFuNNkQbiYWBiNHlA0jbaAgdURIm
UbdgEJcSEoOv4PcmhifP8z8n/7w57WAmSk8lQggTqHWHUOBcWwh7ek53tofw
2BPCop7HjLt9d0Xd6y5puct9QvfppB7gTfMG0uZpcwHb5i3k9Su/YEm3+B3L
uoqsnQgVPcllzvEu57nGEb70ur34AcN6CFn962yVx8wr/G3O6DX9o8fjPV1H
qiOEkrmoD9yVeMR8qBf0qK7rRvz7eHvT20/0ESrmKo71Dd/iTDf4FDu6jA87
n7jXLW7yM1/zG9/xJa5868neuX5wfsH9zlK+P/v///wBHNJAeg==
       "]], Line3DBox[CompressedData["
1:eJwl0bsrxWEcx/GvcqvjEvkHDAwMhEEWi0suJUpGRUkSCyUDk5JBkYhjsLmM
iIgjKREDFiW3QeK/8DoZPr3fn+/veZ7feX6ndGC8ZywjIqbkPDOiNicihZfZ
ESf8Ch8SEWtZEaf6Om7IZl5EEr89S+EvHuI7Pll3wF/4Pr7io9kYP+KjeI3b
ZkfOv+V7fNy8T3b0Fb2XL3nPMm/jHbKmb+mTvC03ooTXmY3wGme1YBUWmZeb
t+rFvMvszr0a+A3W4y1mYqM12ZgvZfYUYKE0mz/pCf6IFc6YkWnp1qvMP3HR
umrezic8+0r/ZrNOHNaH5IMvmPXzRj7LK+wZ1N/0Ob1Sb+LzvM/8xx0v9NAz
ZElflmff597aVb6S/qY8ad0xntp3JinZTe93x7qc///2D5YgQkU=
       "]], Line3DBox[CompressedData["
1:eJwl0csrpmEcxvEfM5hiMTV/gcnGgsZiFhPZsJDJsTA1G72Tpul1WFA26C3F
lmSaDRJFsaBpisY5g8ZhlKXDwhT/hOLzZHH1va7rvn93z/3chame5u6siMjQ
7suI93kRO7idG7GWeNyj3/xUQcQ+/yMn4gut5kekcAWbcB4bsYGu+UN758z8
M7uqu9Sd8138Lz6Nf3AYl/RH/E8z03yrbkFelifkMeeMY42+lr7LM3Ifv2Ff
P6ZfRXyjMjMX1l9bf8fX6N7wb6mTr9PV04F7HtIH/V+swDPMxkr7XmAOFVCR
86p1JeZKqU0ewBYcxM+YwU/YjT10y4+Z6eX/J9/Pf8Svcgfd8MXOHtJX8u26
DJ/CKzmNI3IVP4qt8r17bsmP5u7kTf6BX9If46w8yU8k/1heT94u2Zfcl450
C9YW6cRdT6k87/ntnwCIpEoa
       "]], Line3DBox[CompressedData["
1:eJwl0c0r5XEUx/GjLmZyw4Yy4nrakM0sroeaDbaykKXcspENNbOYhSZSNJvZ
WFySh435DzR/wEQslZQshGSh6yqJkOH1axan9/tzvud3vvfbbR6fHp4qiYg5
NV8W8TcVcV4acabuyyNO9c7UI7/EC3Xp7Lki4gqf9J/VFj/U+4078mY6opL/
s29MnpRz+CZ/5Wlne/KifTl5hBedTfAXPLLri5mf+gt6PXyBz/Ne/gv7sF+t
m81iHrtwGTtxze4fvpk1u8FXVbv+jF4HXrlnKHkXDib3JG/lA9inRj9ENOmv
8G+YxwbfZdSSO77rtfB2c/vuqHL+mVfzOt6iuuVPchZb5WZei53yI36U6/kD
T/E3+07UH16w/849x/I139Y7MLeb/Abexhsxg7XYgDV4k8zzApba/WpHUS7K
ZfItHifvtHMXu8v///fvTi9IAQ==
       "]], Line3DBox[CompressedData["
1:eJwl0b8rhQEYxfFHflyFFKmrJLIoiwwMskgGNlYMBrEQSQbJoBRKJiQ/BvkP
bCZEmZVMQgZdwkB+83kznM73nOe5z9t73+r+ka7hrIiYpMOciMZUxBG/zo24
zIt4lW/4Fb0XRLwk2eyW3vB+ITb7xLu6Q76pK8Lf7vTKg/K8nSE8igvMHsy6
5T55zqwHD+AP/ZnnNNuZ083qmvCqbsfegm5R167b1pXwJV7KZ/TT5lv21mla
3uBrNKWvs3Plfge+5p3Ju/BW8yqzcXnZrQq8ohuTK/EEn3KrBtdSQ35EPRXr
0vaqqVEul39xC67CZTiXKuR8OXAaZ+Mfdy5oD2fcf/bcc/mJnyT/vS6Dj/E9
P+WVyffg4TeP+IDf8zvKcTfDv+w+8JT8lDzD+7Wl/r/tH7c1Rmw=
       "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/G3Or9i9QfcYjJRYjBisHzdrXcuyk2c34rNhOGmU0omySJ1
JeUGt5iEGCTdpiQnf4M8LsOr1/P1en369Pl+03NLmVJbRBRorydirDPiORUx
zhu83B5xiR9t1x0Rdbyrq/Kj3oh9/Iu/bOtdEW+6LE5oVR6Rp/E2buAcXqCy
PCkv4gw/kJt8U96gLB50b0X/iUd1AzyRu1tvxP26PvzjnXk5g79xwpt8yl50
fsiW1s3iCV2JD+uW+Yr3r9GJve4bt/AOXcj38pXzp/gWz+uLdCzXWv+DqvZD
+RznbHmquHuGv+jf9XfOfPAH/qo7s9fsN/SU+v/vf6RvOG0=
       "]], Line3DBox[CompressedData["
1:eJwl0U0rhGEUh/HjbZhnxkQWVtQoJeXlE2ChZmVjoZCNoSThK8wSjY0vQFMi
H0SalWGhsJSVvMuw4CeLu+s6//uc+zn15Bc3ptcbIqLonDdHjLVG1HAcL/C9
JSLdFvGGP5mIKp5k9aQiPtTX+Ik1+QPe/83xbj2X+Ci70jPkjaqskw/yM97F
s06/+lSd8D6e5Wme59+YUw/wHJ90FviobILP8V7fnMUevLFzAW9xCu9wxB4l
Pox79tk3VzJfwR08wi08xF08xrL+A70FM3VvLMvnZUv4qp7h2+5feJOeonrN
XdnsKk9km+oVnuY1vRXssOcXtmOj+zrP8GdzCT6l/v/DLyKjNiM=
       "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/H3ibtv3aGUjbCw+TVaEIrVJBR9JYO4P8INd5dY7OoWi4H/
QQYZKJcyYDRdIV0hecjw6vV8vd7vz+f76TuQFhd3MxGxRvXWiKlcxB1/y0YU
kohMIeIdd+OvtogOfqHr5DU5oS1nirosbqFU3pYPnNvEO/jVnWV5Wd6QU6rI
+/IhnnFulo7zEXO8qi/rT+xUeY2XdEfmo+ZjVNKtms3rH92/wJ94H1/xvhGz
HryEJ+2u83FdOx7Cn7yf53UJztGgfCl/4wnci7vwDw3LV3Ldt8/5i7sb3nMr
39CZ7t5eQ9/UP+CPvzl/1p2aX9tr0p6uYjad+//vv9c0M7s=
       "]], Line3DBox[CompressedData["
1:eJwl0c0rxFEUh/GjMFOs7b0sFFkRtsqElDFZqNkxloyXYuwsvUx2UzYWlmqo
mdSUkq0IO5SNkkb8CVI+k8Xteb7nnHu79/frXMhnVpoiYtF6ao4YS0Q8Y7El
osIPsIqH+NgWccH3+a71y3/U6q0RG8mIORxtj9jkGT7M13iPuaw8Lu/J/XKK
F/kA/+QF/TRuY0n9i2/xDxzBPkya7cIE9uKg+rTZDvnbnWexjjONM3FSP6c/
gUs4hUP2LfNuM3lc9Y5Lb1jHE7UrXuBlXjN/K5/zHbVc41vIR3JVr8aPecmZ
Wb1561StpHamX+YVfMMbfMe7xpvwHut4bc+L+Qf51Z1Tif//8AeH9zpB
       "]], 
      Line3DBox[{1263, 1877, 3168, 1264, 3207, 1701, 3206, 1929, 1683, 3191, 
       1305, 1904, 3193, 1685, 3195, 1909, 1313, 2143, 2142, 1605, 3121, 1301,
        1903, 1300, 2084, 3085, 1785, 2078, 3082, 1542, 2083, 1547, 3100, 
       2104, 1792, 3099, 1556, 2091, 1750, 3246, 3247, 1749, 3250, 2025, 1494,
        3257, 1757, 2031, 3256, 1756, 3267, 2056, 1523, 2070, 2071, 3269, 
       1528, 1487, 2019, 2020, 1285, 2957, 1679, 1894, 3182, 1284, 1892, 1675,
        3178, 1889, 1281, 3189, 1263}], Line3DBox[CompressedData["
1:eJwl0Tsvg2EchvGntCphoBqNYpA4TCJRk/NnsGDkA9SKRAiJhcFicBjwAbAZ
zITEYZOI0yeQqLYYEL83hjvXdT+H//Mmb9v0zFg+FkLIy1pNCOV4COPJENb5
Bz/nd/ybf8mkPlUbwgR+6seJEA70G/2I3zt7iAX9TU7tPekvUtTf5ZmXq0Ko
rzaXl3iK//A0Nsg7/zWrgCkzstF5bMYGbME0Xti/lBP+avZDNM+9ojzyVrNi
zibsV2CTXsUreZYneZx3yIB+qw9G36LXybWe0zP8ivfwTnPnvbWgd/EOmdXn
pJ2v4L7zvXyZd+MiLkmGb/i2RtzFUdzBYdzCIdzGEeyPZnlj1b0+vmk9h3vW
zqyV4v//7A8fuTv8
       "]], 
      Line3DBox[{1280, 1888, 1676, 3188, 3187, 1681, 1905, 3194, 1684, 1307, 
       2974, 1304, 1306, 3192, 1682, 1902, 1901, 1297, 1295, 1900, 2958, 1296,
        2079, 1784, 2100, 3096, 1568, 2105, 1793, 3278, 1475, 3242, 2014, 
       3050, 1474, 1476, 3251, 1753, 3258, 1486, 1747, 2017, 2018, 1485, 1748,
        2021, 3245, 2022, 1287, 1680, 1899, 3190, 1280}], 
      Line3DBox[CompressedData["
1:eJwl0UsrhGEYxvEHDcKXkMUQO2vF2DgMCyZFkZEaZuG0sJGEYct2IufkbOGw
sTCURCxkYydLfAm/yeLq/7/uup/neXsrh8a7xgpCCGOyUx5CRySEXezEMxzE
c0ziG65jriSEW9ngd7iFm/JQHMK9vs2f8UmO+Kl82H3VT3hRqb2KEH55Ic/x
b/4jGT2mL2LaecPSpM/rA7yBz/J+3siTuKCPYoveKlN8xeyLT/IJSfAZ7M2f
hX04hz1Yi1VYhzF7zVKTvxfLvDmav4tXYwpHJM7rJWqvTW+Xae+/8Z0jmLV3
wVP8OP8efV9fxW6zhFzqa3qaP/IDnuEvfAkP9azzl/mn2RW+m+2ZXfN45P+f
/QHcejyO
       "]], 
      Line3DBox[{2981, 1934, 1706, 1405, 2134, 3117, 2133, 1596, 1594, 2130, 
       2129, 1595, 3286, 1591, 1817, 3303, 1597, 1598, 3285, 2135, 3118, 1819,
        3130, 1830, 2168, 1626, 3307, 2198, 1832, 2172, 1473, 3240, 2013, 
       1467, 1466, 2011, 2012, 1472, 3241, 1464, 1370, 3218, 1369, 1743, 3048,
        2010, 1407, 3009, 3010, 1716, 1957, 1362, 2981}], 
      Line3DBox[{2986, 1942, 1711, 3237, 1463, 2005, 3042, 1738, 3239, 2009, 
       1437, 1981, 1980, 1423, 3022, 1424, 2007, 1468, 2169, 3132, 1831, 2171,
        3291, 1621, 2165, 1829, 3131, 2167, 1625, 3289, 1624, 2187, 1837, 
       3149, 3150, 1841, 3151, 1816, 2127, 3284, 1590, 2126, 3114, 1815, 3113,
        2125, 1589, 2146, 2147, 3287, 1607, 1818, 2131, 2132, 1402, 3007, 
       1403, 1955, 3008, 1404, 1967, 1410, 3012, 1958, 1406, 3224, 1385, 1946,
        3220, 1375, 2989, 1710, 2986}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2199, 2200, 2577, 2209, 2576, 2790, 2329, 2524, 2654, 3227, 
       2891, 2829, 2830, 3233, 2526, 3032, 2256, 3197, 2254, 2962, 2807, 2806,
        2505, 2606, 2961, 2881, 2252, 2251, 2504, 2867, 2212, 2578, 2791, 
       2579, 2215, 2214, 2259, 2507, 2608, 3198, 3199, 2609, 2243, 2960, 2804,
        2276, 2818, 3025, 2334, 2863, 3229, 2657, 3024, 2656, 2338, 2199}], 
      Line3DBox[{2201, 2202, 2874, 2216, 2580, 2794, 2462, 2438, 2556, 2557, 
       2735, 3110, 2926, 2852, 2555, 3283, 2853, 2439, 3111, 2386, 3259, 2536,
        2387, 3066, 2840, 2906, 3065, 2700, 2537, 2865, 2205, 2573, 2788, 
       2870, 2206, 2211, 2540, 2703, 3068, 3069, 2702, 2395, 2394, 3070, 2841,
        2416, 2433, 3107, 2434, 2925, 3108, 3109, 2553, 2733, 2436, 2201}], 
      Line3DBox[{2203, 2952, 2869, 2204, 2871, 2210, 2330, 2651, 3021, 2331, 
       2890, 2332, 3023, 2653, 2333, 3031, 2343, 2907, 3261, 2389, 3265, 2392,
        3276, 2549, 3272, 2713, 2809, 3196, 2255, 2935, 3120, 2856, 2753, 
       2561, 3119, 2934, 2868, 2793, 2873, 2792, 2872, 3164, 2213, 2260, 2610,
        2963, 2810, 2506, 2257, 2883, 3200, 2508, 2258, 2967, 2266, 2972, 
       2277, 2991, 2300, 2993, 2302, 2337, 3228, 2655, 2335, 2336, 2358, 3047,
        2671, 2531, 2203}], 
      Line3DBox[{2574, 2207, 2575, 2953, 2208, 2398, 2707, 3071, 2843, 2539, 
       2393, 2704, 3266, 2864, 2396, 3093, 2417, 3090, 2415, 3158, 2494, 3159,
        2851, 2437, 3282, 2734, 2554, 2435, 2442, 3112, 2736, 2559, 2218, 
       3165, 2582, 2795, 2581, 2217, 2465, 2757, 3123, 2463, 2938, 2464, 3125,
        2765, 2563, 3124, 2939, 2823, 3004, 2320, 3003, 2321, 3033, 2341, 
       3027, 2340, 2701, 3260, 2388, 2911, 3074, 2846, 2709, 2542, 3073, 2910,
        2866, 2789, 2574}], Line3DBox[CompressedData["
1:eJwl0C9LQwEYhfFXUNh2L9ZhkhWjUTFodML+MIawOgZWDQaNYvATOMQmIgZB
YcK9iBhUcJhMGsSgcUmDX8DfMBye55z3jnFvpbfV3pyIiI6USxGXhYgKbqcR
T8WIWX5nW8BPPMcz2XU7wSW88OwOX+R7eKXX+AD39Z8kYkVflsyWy4G9qf+6
tXDNluG7vcbrMtCvZcS/7G1MsIEf2He7xXn9iL/wUxzis6S8iQm2cBof/N86
n8RVOfTbgv2GV6Wvl/Qpnksmdc8Xbcdu5fF74xxu2N/cX+WbP443txnew3u9
m/5/1z+MIC65
       "]], Line3DBox[CompressedData["
1:eJwl0LtKQ1EUhOElIpgYsIiksgk+RiysBC8gGIidgqWgdmrvpQjptBe8VLEw
UQwK2kTw+goKsfBAIBB8APE7WAz/zOy119mc4urm4sZARJSpl42ojkSU6GI4
YjkXsUJ1vqZr4BMWMhHP+EJD/Jx7TX6Q2lSRx/SP/Az9yuc4hT92jDp759/o
jH/FI7zFQ0x885NfwA+8S8+oLB/Y08WWPIt78hdmzHUw0bfwG69xX983My/3
cIku9QWc1u2mb0/34BXm9Tt8ydkxbuMJntK9tz/QBL9lto+T5tf4G/24vJ77
/49/kowz+g==
       "]], Line3DBox[CompressedData["
1:eJwl0MErg3Ecx/GvEzaOop1wd7b8Bw4zs+Ru4sbFDk5ydtdOai25mVI2c1ux
lHLSIkXhYC1t2h/gJYd378/n8/s9T0/PzPrOyvZQRORRHYk4TEac89ZYxCZS
iYgLfUMuYEo/07tc1Gd5l6e5Yb/GvPzGp3yCvdGIMi9wzvs7SMsHtqpn9/lT
/7ZP/mE7tmVsff0HWXnAOV50fsnv/IGEu69Ylufc+eK682fbkvzCR/qjXHRe
kh9sFW7xHcblLPd9dw95uenuKpc8N+y8jYx+Za/hSV/Tb+UbTOj3yf//+Av4
bzOZ
       "]], Line3DBox[CompressedData["
1:eJwl0K1Lg1EUx/Fjc3PNBUFELGv+B9pmmHHKUKN1Y6KoQcEyLAoOltdnMfmA
bwuCSzMqw7igFoP4Ahr9PBi+/F7OudzLnVnfKNdHImIJk9mIXibig9ZzEVP0
E5WxiDP5gH8238UC9uU9FPlr82P+CFd8SbeIFWd/8Is5uUzfkMe0vW1dnu7Q
ZdpNz9CEDmnD3jn/wr/iUG7KJ3iUN9O5Owt0IN/wXQTadlq44GfNLul4+gZ6
az+LCXlVvuf7WOMfdKd8B1+jEd9I+Cf9gL7bSXRb6f2408/ra3w19/+Pf8Va
Mlg=
       "]], 
      Line3DBox[{2232, 2957, 2231, 2685, 2684, 2370, 2901, 2900, 2371, 2697, 
       3256, 2905, 2375, 2376, 2696, 3061, 3062, 2695, 2368, 3052, 2367, 3102,
        2419, 3091, 2418, 3161, 2495, 3163, 2862, 3153, 2449, 2740, 3115, 
       3116, 2930, 2448, 2445, 2928, 3114, 2738, 2444, 2931, 2741, 2855, 2742,
        2932, 2825, 3007, 2322, 2641, 3006, 3005, 2824, 2648, 2514, 3217, 
       3216, 2513, 2982, 2226, 3169, 2497, 3177, 3176, 2229, 2878, 2233, 3184,
        3183, 2590, 2232}], Line3DBox[CompressedData["
1:eJwl0L8ug2EUx/FjKi8LV6ALIVhJJMQdNHUHNO1AmPyZhI0EK9FNQtrJJVi0
nSs2KmoSaSwSBovPkw7fnN/3POc5z5s3v7Zd3BqIiFXcD0acD0csozkUUUVL
byqLmMb+SESDT8iT2OMP/AOL/Jif4JMv8VP5DH/yu96VvV31Wu2pX+jIryin
N7z3lmZQ4bN8Djd2bPINjDqr8115B792/ODJXMFZzdmYeoRDPPNa2oFH8wt8
Hm35Vq8jv+BOnjG/IpfknLquHiAvj+NbvnSvJTdRSd+pV0aW5vlF1v+P/1HQ
MnY=
       "]], 
      Line3DBox[{2596, 2241, 2880, 2803, 2918, 3085, 2545, 2916, 3083, 2847, 
       3084, 2917, 2546, 3097, 3098, 2551, 3279, 2429, 3138, 2567, 3139, 3140,
        2473, 2771, 3129, 2471, 3288, 2941, 2565, 3132, 2774, 2355, 2894, 
       2354, 2676, 2895, 2351, 2664, 3042, 2893, 2347, 2348, 2665, 3044, 3043,
        2666, 2352, 3049, 2287, 2980, 2285, 2979, 2269, 2969, 2270, 2973, 
       2278, 2976, 2283, 2621, 3211, 3210, 2620, 2281, 2248, 2604, 3193, 2603,
        2240, 2597, 2596}], 
      Line3DBox[{2503, 2959, 2242, 2966, 2265, 2971, 2275, 2990, 2299, 2992, 
       2301, 3046, 2527, 2670, 3045, 2669, 3238, 2353, 2357, 2530, 2529, 2528,
        2356, 2673, 3239, 2672, 2831, 2659, 2658, 2828, 3022, 2652, 2523, 
       3226, 2827, 2908, 3067, 2538, 2909, 3263, 3262, 2390, 3264, 2391, 3277,
        2550, 3088, 3087, 2922, 2548, 3086, 2920, 2848, 3122, 2562, 2754, 
       3121, 2461, 2755, 2936, 2808, 2882, 3195, 2607, 2253, 2261, 2509, 2262,
        2964, 2611, 3201, 2612, 2503}], Line3DBox[CompressedData["
1:eJwl0D1LgnEUhvHzRIiaH6ChBjehOQgihTIQacpvILRk1NAWkVCgW0MuEb0M
NZl+BpsElxqDGh0aWlqEgoZ+0nBzXec+588DT75+sL2fRERNhumIQjZiIrdz
ESvYykWU+Yfdr/mOl/Bc/667NC+bT83PmYgzfMEHLOA9brl5kx/3PSy77+gT
/q3bMHf5Ol7ogx/yWe+rmGAFZ3CMOWm7+XT7qDvhqzylb06/xZdwE/v2r/oS
L0rPvIZ1TOEXZjAtO/zG7YjnvV/EPTzWL/Cu3RGf5w19g1/rdvEJr3CQ/f+P
f7i8LEM=
       "]], Line3DBox[CompressedData["
1:eJwl0DFLQmEYhuE3LDDzHzTZVtAPyKmGlNb8A+WUIAaNtkXR6OSQTm1ZKO5R
uwbRkGQkSk1tTS1C2BUND/f9vOf9vnM4meLhbmUuIgqynoroJyPu8WIx4g4P
sIkNKfFjafHHdMQVLuPKUkTZvIR9/UG+9KKe4POypy/gPm5iB8c4kRN7XT3H
8zJ0b1LWzF/1Z57FAV7bu5V3/iHB8zjz3TuY0I/w09mp2TZv8xwOPLvhM97C
Lfy2M+Jvsur5BF/M6jjEM+89ldHfXWaX8uNczezJfpaf8w3s2amm///jL+oG
MzE=
       "]], 
      Line3DBox[{2518, 2995, 2310, 3234, 2525, 3231, 3230, 2660, 2339, 3026, 
       2832, 2912, 3268, 2541, 2708, 2845, 3269, 2710, 2913, 2842, 2706, 3267,
        2705, 2397, 2399, 2837, 3244, 2899, 3243, 2681, 2369, 3072, 2844, 
       3094, 2414, 3089, 2413, 3162, 2493, 3157, 2432, 3281, 2552, 2731, 3106,
        2732, 3280, 2431, 2441, 2558, 2440, 2737, 3113, 2927, 2443, 2756, 
       2937, 3287, 2857, 2768, 2564, 3126, 2940, 2822, 3002, 2522, 2888, 3223,
        3222, 2518}]}}},
   VertexNormals->CompressedData["
1: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
ow==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{391.7131992936796, 393.8585732742029},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-4, 4}, {-4, 4}, {-4, 4}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.848685147145727, 0.01813201746135884, -3.2755770103841266`},
  ViewVertical->{
   0.5481268615220165, -0.6902252615767716, -0.47238335275420273`}]], "Output",
 CellChangeTimes->{{3.7492138461956077`*^9, 3.749213900228191*^9}, 
   3.7492140111397114`*^9, 3.7492141626287856`*^9, 3.750147237512171*^9, 
   3.750148176198715*^9, 3.7501483181509757`*^9, 3.7533938154669256`*^9, 
   3.75340624589375*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"8ef0dab4-2528-4d96-afbb-fd8c911431ce"]
}, Open  ]],

Cell[TextData[{
 "The given quadratic equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"2", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"4", "x", " ", "z"}]}], "=", "14"}], TraditionalForm]],
  ExpressionUUID->"7f892573-7378-48db-b10a-7a265f1ea66b"],
 " can be represented in matrix form, the way to do this is\nWe look at the \
non-cross terms ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     SuperscriptBox["y", "2"], ",", 
     SuperscriptBox["z", "2"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "eb20bc28-b942-496a-8d40-f6b30e161d58"],
 " and we plug their coefficients in the diagonal entries directly.\nThe next \
step is to look at the cross terms ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"xy", ",", "yz", ",", "xz"}], ")"}], TraditionalForm]],
  ExpressionUUID->"9cda4dc0-d39b-4200-b771-43b1134be880"],
 " and we plug in their coefficients divided by 2 in the non-diagonal \
entries. \nFor example, if we were given  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"2", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"3", "xy"}], "+", 
     RowBox[{"6", "yz"}], "+", 
     RowBox[{"4", "xz"}]}], "=", "14"}], TraditionalForm]],ExpressionUUID->
  "713b4a0a-8856-4216-b324-03a97b9787f8"],
 " instead\n\tour matrix would look like ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"5", "3", "2"},
     {
      RowBox[{"3", "/", "2"}], "3", 
      RowBox[{"3", "/", "2"}]},
     {"2", "3", "2"}
    }], ")"}]],ExpressionUUID->"a7bce95f-cd87-440a-b9e0-7e65b0c27be2"],
 "\nFor the given equation, the matrix looks like:"
}], "Text",
 CellChangeTimes->{{3.7533893011357017`*^9, 3.75338932904813*^9}, {
  3.753389739841209*^9, 3.7533899900013785`*^9}, {3.753390034361541*^9, 
  3.7533900503608007`*^9}},ExpressionUUID->"a48261ff-210b-4876-9c00-\
119541935c9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"(", GridBox[{
     {"5", "0", "2"},
     {"0", "3", "0"},
     {"2", "0", "2"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.75338933178974*^9, 3.753389376399623*^9}, {
   3.7533894299445953`*^9, 3.753389437657257*^9}, {3.753389711833043*^9, 
   3.753389712961029*^9}, 3.75338982266975*^9},
 CellLabel->
  "In[983]:=",ExpressionUUID->"c17cc58f-5941-4489-a859-85310ab752d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7533894394136705`*^9, {3.7533897038754272`*^9, 3.7533897137070646`*^9}, {
   3.753390277625187*^9, 3.7533903038709717`*^9}, 3.753393424885532*^9, 
   3.7533999569467897`*^9, 3.7534062459964776`*^9},
 CellLabel->
  "Out[983]=",ExpressionUUID->"32653d69-9530-4ff1-b42b-db3a1dc3ed1e"]
}, Open  ]],

Cell["\<\
Next step is to find the eigenvectors: 
NOTE: We transpose the result of Eigenvectors[] because we want the columns \
to be the eigenvectors, not the rows. \
\>", "Text",
 CellChangeTimes->{{3.753389656816181*^9, 3.7533896610557995`*^9}, {
  3.753390407384321*^9, 3.753390409600397*^9}, {3.7533999849870453`*^9, 
  3.753400001509322*^9}},ExpressionUUID->"1561a101-4106-49b3-b2f2-\
c8cabd991c68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"U", "=", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", "mat", "]"}], "//", "Transpose"}]}]], "Input",
 CellChangeTimes->{{3.7533904158965635`*^9, 3.7533904188087783`*^9}, {
   3.753390450554903*^9, 3.753390478600954*^9}, {3.7533934084587936`*^9, 
   3.7533934095289574`*^9}, {3.753393475705862*^9, 3.7533934860918407`*^9}, {
   3.7533935212900567`*^9, 3.75339352164112*^9}, 3.7533999356036673`*^9, {
   3.753399976536117*^9, 3.7533999825877304`*^9}},
 CellLabel->
  "In[984]:=",ExpressionUUID->"2f947a9c-cde4-4ec5-a3de-95737e563d29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.753390419629583*^9, {3.753390455056899*^9, 3.753390479176382*^9}, 
   3.7533905244842825`*^9, {3.753393410016734*^9, 3.753393426849022*^9}, {
   3.7533934768500853`*^9, 3.7533934865745935`*^9}, 3.753393522116782*^9, {
   3.753399954737893*^9, 3.7533999828859334`*^9}, 3.753406246034343*^9},
 CellLabel->
  "Out[984]=",ExpressionUUID->"fac2c28f-0362-4a44-9c26-072c58a09622"]
}, Open  ]],

Cell["We have to make sure they\[CloseCurlyQuote]re normalized: ", "Text",
 CellChangeTimes->{{3.7533904651917696`*^9, 
  3.75339046981645*^9}},ExpressionUUID->"f6188a73-369c-4917-b86f-\
fb938fe762af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Normalize", ",", "U"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "U", "]"}]}], "Input",
 CellChangeTimes->{{3.753390480975602*^9, 3.7533905296404653`*^9}, {
  3.7533998674603057`*^9, 3.753399872291053*^9}, {3.7533999323403473`*^9, 
  3.753399941434928*^9}, {3.7533999749719753`*^9, 3.7533999753075457`*^9}},
 CellLabel->
  "In[985]:=",ExpressionUUID->"53fa83f7-874d-478e-98fc-fbde69886711"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["2", 
       SqrtBox["5"]], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["5"]]}]},
     {"0", "1", "0"},
     {
      FractionBox["1", 
       SqrtBox["5"]], "0", 
      FractionBox["2", 
       SqrtBox["5"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.753390489208593*^9, {3.753390520550799*^9, 3.7533905300782948`*^9}, {
   3.7533934117044415`*^9, 3.753393429973702*^9}, {3.7533934785352783`*^9, 
   3.753393488480337*^9}, 3.753393523271514*^9, {3.7533998690454464`*^9, 
   3.7533998727358294`*^9}, {3.753399952784377*^9, 3.7533999597808013`*^9}, {
   3.7534062407415066`*^9, 3.7534062460672946`*^9}},
 CellLabel->
  "Out[986]//MatrixForm=",ExpressionUUID->"51dc0fc3-f091-414b-bc37-\
5db172eebd5d"]
}, Open  ]],

Cell["\<\
The reason why we want the eigenvectors is that we\[CloseCurlyQuote]re trying \
to diagonalize the given matrix: \
\>", "Text",
 CellChangeTimes->{{3.7533938806490965`*^9, 
  3.753393904656953*^9}},ExpressionUUID->"922d9903-9889-4253-9117-\
bdec3240024f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ut", "=", 
   RowBox[{"Transpose", "[", "U", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Ut", "]"}]}], "Input",
 CellChangeTimes->{{3.7533905406061463`*^9, 3.753390554792221*^9}, {
  3.7533998752761097`*^9, 3.753399898619149*^9}, {3.753399942555786*^9, 
  3.753399950771246*^9}},
 CellLabel->
  "In[987]:=",ExpressionUUID->"ee744c4c-4922-4928-8a30-83effc1372b0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["2", 
       SqrtBox["5"]], "0", 
      FractionBox["1", 
       SqrtBox["5"]]},
     {"0", "1", "0"},
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["5"]]}], "0", 
      FractionBox["2", 
       SqrtBox["5"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7533905478717217`*^9, 3.753390555321838*^9}, {
   3.7533934132487907`*^9, 3.753393432049468*^9}, 3.7533935293364925`*^9, {
   3.753399876052036*^9, 3.753399913165758*^9}, 3.753399960966482*^9, 
   3.753406246119116*^9},
 CellLabel->
  "Out[988]//MatrixForm=",ExpressionUUID->"d4cee6a9-761d-4aa6-a8ad-\
f7e8b861ecfa"]
}, Open  ]],

Cell["Diagonalizing the given matrix, we get: ", "Text",
 CellChangeTimes->{{3.753393911864237*^9, 
  3.7533939174336824`*^9}},ExpressionUUID->"ff7e73bd-252f-4c4d-8946-\
979b3c573342"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diag", "=", 
   RowBox[{
    RowBox[{"Ut", ".", "mat", ".", "U"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "diag", "]"}]}], "Input",
 CellChangeTimes->{{3.7533905584394884`*^9, 3.7533905639716787`*^9}, {
  3.7533933654740934`*^9, 3.753393388536851*^9}, {3.753393435146631*^9, 
  3.7533934399053373`*^9}, {3.7533935305532756`*^9, 3.7533935426250944`*^9}, {
  3.753393682914096*^9, 3.753393688249414*^9}, {3.753399901365096*^9, 
  3.7533999070467577`*^9}, {3.7534063001756268`*^9, 3.7534063132885375`*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"3dc229ee-237b-4e8c-b380-b4d3f38e22a8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6", "0", "0"},
     {"0", "3", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7533905647914867`*^9, {3.753393369577505*^9, 3.753393440264866*^9}, {
   3.753393532572215*^9, 3.7533935751261144`*^9}, 3.7533936251124554`*^9, 
   3.753393688607437*^9, {3.753399907516473*^9, 3.7533999216973104`*^9}, 
   3.7533999618849945`*^9, 3.7534062461580124`*^9, {3.7534063062862563`*^9, 
   3.753406315216413*^9}},
 CellLabel->
  "Out[1000]//MatrixForm=",ExpressionUUID->"3a0c6af2-a1ff-4a07-94b2-\
35631b39be30"]
}, Open  ]],

Cell[TextData[{
 "Multiplying by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}], TraditionalForm]],
  ExpressionUUID->"82b16ef5-37a0-4b21-ae9b-1923ccc05d3a"],
 " on both sides, we get the quadratic form without any cross-terms: "
}], "Text",
 CellChangeTimes->{{3.7533939225134277`*^9, 
  3.7533939385530663`*^9}},ExpressionUUID->"9224f6b4-918b-48f6-925b-\
b8d1d6074f6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}], ".", "diag", ".", 
   RowBox[{"{", 
    RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7533935563304524`*^9, 3.7533935653544903`*^9}, {
  3.753393633643561*^9, 3.753393634636589*^9}},
 CellLabel->
  "In[991]:=",ExpressionUUID->"1f93ade4-b870-4ccd-82c6-28d77bbf5661"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}], ".", "Umat", ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0", ",", "2"}], "}"}]}], "}"}], ".", "tUmat", ".", 
  RowBox[{"{", 
   RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.7533935659269276`*^9, 3.7533935717571907`*^9}, {
   3.75339362587342*^9, 3.7533936352050667`*^9}, 3.7533936919272175`*^9, 
   3.753399963677385*^9, 3.7534062461909533`*^9},
 CellLabel->
  "Out[991]=",ExpressionUUID->"31c33301-4711-47c7-b399-2cf1c3b252f3"]
}, Open  ]],

Cell["Plotting our new basis: ", "Text",
 CellChangeTimes->{{3.753393944474366*^9, 
  3.753393947449543*^9}},ExpressionUUID->"ae4b9547-d806-49ac-9346-\
bb56f05c70c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evec", "=", 
  RowBox[{"Eigenvectors", "[", "mat", "]"}]}]], "Input",
 CellChangeTimes->{{3.7534062753370028`*^9, 3.753406282416115*^9}},
 CellLabel->
  "In[994]:=",ExpressionUUID->"ef131056-59e3-4837-97cb-52000e851cdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.753406282995551*^9},
 CellLabel->
  "Out[994]=",ExpressionUUID->"91511622-9f6a-4da3-a9a0-0e91949d2df6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"newbasis", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"4", 
            RowBox[{"evec", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"4", 
            RowBox[{"evec", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"4", 
            RowBox[{"evec", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753393718707116*^9, 3.7533938521129847`*^9}, {
  3.753406259480446*^9, 3.7534062865709667`*^9}},
 CellLabel->
  "In[995]:=",ExpressionUUID->"f4a10070-3335-4263-8d76-daaf95ba3994"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"surface", ",", "newbasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.7533938081275473`*^9, 3.7533938106099157`*^9}},
 CellLabel->
  "In[996]:=",ExpressionUUID->"fca22b89-373e-4228-b2c8-c4b60b719718"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+OuCzLtgXZB5WufJYxbxQn1Ib2A/Rfz9GlI/D5ZEBma87mL0FdssdhRfeBGL
7AH4yPillN1o7mDg9oZmCfMV8LuWMF696rsK5Ytx3wPGZb5josRDJ/yeI+Am
HwJmT1R9iPiAH37Fz4vIeMrh50Wkv01erRioxO6nyTgCeQ4ZZ1fOTtmzdTl+
RxLoO/cUK2xdyaJJv/3r4MnUd3a4T4L2+/h5HdkXVeTngWRf9Ey1wQaLHvy+
Hupjm7il/fbD8sA6zQ7dUpql2EeTcbCrZeGAsgCLobfh/uE3I6YVjL4N1C8g
J+Q5IpJav07rXqLJ/ZFTMrGU4LQymtxPMeBYdPn44Xd/0P0n379UN0zCdSW6
BzXT0WVZfwJN7td80h5R3Vw/zJBH7IshZXoTzzvYycD08Q3yW1IY9uOq+Thm
zPJqBv2c1Z26j3P/0KQ/r/dqCAyUw+/loXvLN36aXb/3Mk3uS8qc+BKZeoNF
k36Y4tcRpB9eyK87yP0+Mb4eyP1H0Bu5X7mgT3VWVVwtTcZ3qJvI/VCjW/Nr
t5sNMOrNYn5fjvS3Vrb3aY8zw4x69tmYcXXny6sYfYbJP17va+rGdQfYm/ON
Q2rKQ+00uY+zTKNat+l0J6Ouv8KfL7Kf0Jgx78CL+UU02d8+we/nkPuDujMj
41X7WmkyTukl+nRWKJfRpD+8amo0vXNXJ83o88901Nx6tY0m+/zQbyT3EaA/
Se4jLJJ/FRx4BesTxmvs0uOS3oDf64H1rvbOLDnOBPdzAN/F70uT+1nQxyb3
sxTyW89+TeXR5D6U5MemvMx2bA+AW6vtaBNTYdHkfjH01ck4XsHvw5P7jwMy
zoH2drhfBHweO2uWL9Utosm84v8ASTP6tw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
f8ZoUdq+Rxja75qStT96MON7yQTyFPK9Ge8Tylcfg/6j/Tbyd3TnpHUe+n6k
Zyy6WwEfZhxHo3MEfA5tTsz5vkl3V0vReQ86Lek7et2/DIv5/nFa6FxI3+ge
aqDyJuiOD33fpbuoOjnPI9kPsfEE/z0mHzvptfGDzkHKMqF9vAT1l9PPfTx/
qnwk+BPFLugVx+bcpGOW3fCj8jGhXRHWPUsH8Iac5/lxxeTgD5R7jjueOo3n
WZrL8t2w85JiMuU1tYeH9gO78FyBfpwqvwI7B6jbifKiyD9Wf5FPQ/4f8j+Q
7wgdMym2ku+qvNjp8LI536vLNwvl10V+4BVp+3Py8YZSvzL8vLy/OTkFvXJ5
3z/qTlHfUZync4txq5B03uVF6lZAbyH6ryV8xzEv6X1+ftJxrM6vZfCrkVWA
zlduMetzck7e5+SEwN9haGy0Z1aP+Qxdhc4L6DTguVJgn6Zh3Hd5utNrB74I
ex3gdeF1oNoFjsPqRvgvdIvBT+quCHshuj3oT+WM9avAK2XsNykvfYVygdAx
9FvLvw8ct+seQ3FfA70DqKb6ozuouM+RZuCRoe8HV9PO14r/484D69zS+aV7
Ps2fioHvWpczXr14DnPO2+vMeUN3ENrHwPGc92Hd1emOoxZ2L4v5rjyvPDv8
J3gd5PVjvrdV7k154+460yh7PeEcuM7EMgXOn7+Z8ln4hPY25QWxfyV8NvLC
yBcr9x33Wd1Y453w+ajY6z9sXZv0Nyr1o/vCvbpPhHYFzvPrflH3jMoxDkv5
eyB9l/IH8sOB72UaR/ZvhhfJ+NxWnl85vda6r8g4LzhN50bS3+eMidknb5W2
X16K8nHQzzH7ANWiHNpy7ExVrI98YejYpIT8U+qWSvrOUfuL7l+ao78U/Q+i
3HdB1rHh0bhjK+WClBuSz1Y/imf0rUXjyI/UdyzjM/6eZlzGcUc+4VhPe44+
5noN3T45+55VaHN8yj6Nvst6UPGG/NGU4yl9N/O49jSeT6LzpnxD7bO0f2rO
90VtE86Z67sTxWu6S1IMMg/99ZQXQ3cyuGfK+4Pi19V5+6LDCnxf0w/ZVMVC
umNLOy95Ori/Yhxwq9B+7+4C3ycqXzsZeVPlEaEVBf5mZZLyK/qPijnQuSTh
OO5KqELMeekXoruqRcJp+5/yFQ9Be+QPK3bSPVDM99rJaO/dn/S3bfoOTPfL
ui/6F3xn0rG87gYOZXxvOUB5i9D3ukvow8Upx/67kf+W8b3TreqDxibq8+1J
x/X/ID+MTuG0cy7yu5R7XqrcqPbNnHMVyi3sSfsbkU+jvLq+r6pB3/8NfUeh
fIT2asX9n0V3zm9gpzp692mu0O7E0N+86Ru+tcqDY3t03DmUX5F/A++DjWza
OZrfQ9+JaT7o2z/dLb8T8135CK017FdOeZ/Xfq92pygfg8780PfPs9BpF/ob
s2+Rf4fsKXT+Bi8Infv6OcrzaN/Q/ZPunRvxfEeUzx8Z5ZmVb344mgOaC/Ny
tnU19b7I+e7zDnAF+Uuh4+Lfs8H/nGB9x1JGuSnlVsH1debRh7fSvuPTvWNT
dJNZ32XpLn5NzvesylUqT6JvI7rRh+upUw9cVHlL5c3pzwjk21LOGckfq4d8
iHK1ijup/5h8pYzzY/PAt2V8z9sp2m91h6h7XMVTndKOUa+Tvwx+FVwl5W8D
ToMfo+596NdUbkJzIYqXlAtdpryUYmj55NE76hb6u6lE0t/G6B61TsL5h4sy
Pid1Jmpv192a7jX0v/R9Vou8fSR9Y6JvbHRGaI/QNxtDsPMS8vboNQO3SThu
3RnlSOWXLJAfXOD7ysGRvuLoJ8DzwVVTvmdWPH9jNG76bqh73vc72mf1nUnV
jM/IavAx6C9AvxplX2T83ZTumDqknQsom7IfpfzjHmyOyvjbQX1TMTft73b0
LYe+C9L5MzbveyXNXX3HonuTSorrQ98tT9Q4p/wNhfCtodfK6cpFaa9APj3y
SR5XvhheCDvlk/7WpJxy1dFaqJjy/bDeqc7KtfRtduD7Mt1TjVPuKeXvEd5X
zhyd9tgsRNlHeccV8sv13cX/AcbsjYo=
            "]], Polygon3DBox[CompressedData["
1:eJw1nXngVdMXxe97777hvndLKkOKNJCUopSZlBAyZciUMpVQZEiKJBoUSeYh
GpTIVESURpSpQkiGUqJkTKbEb31a5/fH6Xv2Peeee+59Z9h77bVP9S7ofWqv
bBRF2xWjKNbf70pRtEJ/n1FaqPzaXBTdmomiNpJXKL81H0VHKT9f+ZoqPzOJ
opeUzyo/N42iRytR1Ep1JqnOOl17WHIbyYu4X/IjQV4u+RvJmwtRtJPy+6sT
20tuqPZa63lT1OYdZeWVPlfZB6rzVcnPH6ryL1VeXfIktXeX+n6N6kyTfJDq
f6H8S6q/WPIPau8s1R+k+veo7CHVP0xtLFH51yrvovK2yvdT+RiVj1fZaMl9
JW+n8gNCH3j2KqWPdf1wlR+o9Inym/L+PnynHVX+tv4eqrIjld5Rfjc9b4jK
lyt/r9p5Qn8PUllNpcnKH6Nr/6i/JdX5T/evVnvbR/4mq5SfqPtP0d9vJP+g
8stV/3fV36x0mfJr9aOdp7KLJJ+o7zCZ30TyBZJrqLyV3m+27p+ptJ/yP+ra
zSofyG8oeZ3af11lbfX8ryT/qfZuUNl1uv8stfeVyl9S+Zu8r9o+T9fP53nh
mc/rWi/lN+u+ERX/Rb5cZWfq/qZq83C1fYRSE+Uv1vWLVd5Dqbvya3XPuxoD
7yitUf573d9AZYeo7BTdP0vXrtHzq+n+arr/Nck9JG8neXvJbyjdq/rDVL+u
3u1NlV+u8suU3lA+q7+3q3ykUoFxp2uH6u8hSh8pP09poPI19FucpvsXSp6k
5+7A+Fbb3+taT/qr9ndQfq7ed6zk0ZL3kJyq/ijdP0v3XCB5q/p/q8rvUqqi
6/PDM2j7dKVFunaK+n6y0mLlp+u9qysf63lj1caJeuYVkj9X2SbdF0v+Q21d
pvKrdf++iX8rfrP1Kj+B91D5e0ozlN9f5Qer/CzVv0r1c5JTyT0l95H8uO6p
zrhS/e/1LuMld5S8TPJqyRMknyh5qeQvJLfQ/Xvr/ra6/xrd/7Ku3amywZJv
lHyIyo9VeS/J10t+T/eeL3mg5K/1PkXJo1T/KsnrJB+j+t1VfonSscp3CPIX
+g4ztX58ouffrXua6VojlX0q+T3d95y+91LmI/eobKjau1nPayP5TMk3SB4q
+UPVfyLvNYS1ZJ3SnSr7QW28nPp5l6qsh9Jxyp+q9KDKf1b5ayrfTvc/qvtX
SL5S7bVTeRfVvU91hkteofLn+M66tofKPpc8TfILSiuVX594fjPPR6p+Z8kz
lM+p7/PU/vuS31X5Qap/i+Sv9Pc6tXUV30D5L3g/1X9fzx+v8vt0rbHKGuva
u0WPecY+faAvDVSnqb7d66xxKpuq6/Mify++2x4qr6K/qVJD5cepfG+Vn6T2
3ma9CHJjpSeV/0t9rs8z1d8Hlb9J+e8jzwfmxUWSP5e8Uulm5RupzeNK/oZ8
y1uVGujZe6n8QV3/XfOht/LHq/xN3X+87vmKsabUQfk9mcPKf8a6oOfVVXsN
9T6n6n1q6v1m6do5auNspdeUr6r6VTKes8yr2bp2icom8puqbKbkCyQvl3yP
5G567n7Kd9AzLlR+L35z/V2ivkxI/RvyWzJmGDt76VpRZQ3UxvNqq57kHdWf
HZR2V36s6i1QW/PU3zmqV1/XSvq7p+pPLbu8isqP0TPmFf2950g+SvL8ot/3
OOXfUP7x1N/gWKXj8v42zEHmM/Oauckc/Uzy0XnP3c8kT5HcVPL9Fe+piyUf
nvdeO7/kvZc9+D7JD6nfDyo9qjRW6dOSv3dLld9b8RxgLjIHmRs76drFyi9T
+Y8V75Efqv4Ree+dw9TvoUWvn6yjQ5T/RN9iIXu45Fb6Bp9KnqhnPaD6B+Zd
Rp3bVPfLkvde9uAHK+7T6yp7Jeu+3qw687P+vgOVH6S0QPmqSs10Twu1/5by
j6vuGN1/iOSvs9ZZ0F1Ys1jLWNNYy45Q+SqVt5f8mOSD814rPwrvNJI9TuV9
JA9Xm+1U/zfJzyr/lOpfzf6rNk9Veklly/WN/lHdc3Xv0yobrfu/U/1VkX/H
wZKXSK6mNK5gHehjlbXNWzc6UG3cq7KdJY+V/I/k51T+tNK3Je/xa5Q/Oez9
dxf9DNpmrByn+j9nvSewN9yl9J5+r0VKdyjfmPUn4z2bvfs5pa7Kx7r2j9p+
NsjoX2skT5X8jPr5g9o8Sm2/z1hn/9UY/bTod+Rdf9e1/1T+TMXfhm90tORv
WZ8ln6v6vSU31N92fAul+srPKXg+7Kf8K2rvXrXVVH2prvvHsG+qXN2IVBS9
qvydYb3bTfWn6eJbav9J/e2j+i+oYnfms+q2YE9Wfryeub3m3gu6p6/efaGu
tWe+KL2h/JO6/0y1eYbSZOVPV51ndP0ftTlb8+9FXXtY+Tzvq7Lpkh+UnJX8
MWux2v836z2UvfQMpWkq+091Xtf9J6p8i8rLKq+o7GX2D5WVVGeF5HOUblbZ
bMl3qu4LKr9AfSno2r96n1qSByv/q679q/yxqvOL2vtL/c+gW+vaFdTX/Seo
bBd+P9Y2yXdLfj60x++7Re09rmuxvscxkg/S/fUSP+th1XlE/X1M5dVi79ns
3dV1bRd996cl92ZtVL0Nevb2av8Jvcet7E+Rvz+/w/aqX5u5ofpXqH59JVWJ
DlD9rmp7J8m1lJ+iug+q7m6Sm6vuI+gYFe+vLSS3U50LVX+Jyleo7Q9Vf6Lq
N0usK6Iz7qN8DV2ro+c9K7lP4muUnab7u+v+oexBkveU/LrauEVyPcm1JT+H
3lBy/3mPd/XsamqvltrbWWk75R9SGyV9jwm659LEifw0pf7KT1b5JKWJ6O4h
X1T9Quxr+7O3q/0Ka64y48r+Dfj2BysN03P3UFsNlG5Xvnni9++suj1oSzfW
yljHRddlzDH2HlPf71P/flb/16NL6lon1X9EKa9nj9E9l6nuDqqzq95lCjqE
5B2DfIvkOmov1bUk4zHKWEWHRpdGh0aXXqT0tJ61M/YLv3/Wc4c5dIryVVR+
T956SFXlZ5as396gssPZnyWPkTw06N/oxOjGdyk1VP5VlQ9V+Y2Sdy87kR+p
Pl6jvn4b2x7ALjhJ/bieNUf513VtDz2zr+QpkmdF1kvQvx9T/n5da1K2vjJb
cgOVDUi9/z0huQZ6p/rXT/c/q7pdda0hthXzQPk7de0KlfVXekH5C3Vtb5Wt
i52/MNhT2CHYI/WVDlZ+gcqrsp4p31rlb0jeMdivBxQ9Rhmr/fV+Z6k/r0su
q2yA5DNZbyRnJN8subPkd3T/Lrq/ta4drPubZW2H78x4Uv5IpabK74bNqfwi
FdYK+QNV/23JDSW3kXyo5AP0t3bkOrTZLuu1kjWzLb8Za5Xy2Pz7ZD2HmcuD
1J+z1Z839f1eRHdDh1PFPcN+dZ9SI+WbKj2q/L2q30/1s/p7u+5fr/FTq2Qb
/JpgO3ZT+b/q341q71pd61J0G7Q1Rvf1TW1DYr+eE9m27Jq4PdrNp7bhseXv
kXwD/VOdC9gflRYq/7vam6C/45UW696PVL9TZB0BXQEbF1v3L8aZ7p+u8r4q
OwddVvIm1XlY5XfoWhts3ZLH9nkq76HyzSp/VuUPhe9xta4/ofwMXbtPferC
eyl/YmSb+4ys81w7X/lbU+tL6E23KX8Y8wTbV+mSrO3TEcoP5L1U59Ksy6hz
kPLr1e9LI9vKJ6v8Z/VhmOT+/N4VX6f8kjCH2CP7BNt7JHtnye3R7sGSp2Kv
K99J5V3Unzn6PqUwHs+RPDv22Giif1qqzjzJuhztK7lV0fjKlcr/rOtD+f1Y
cyUPUZ0RaiOn9xmu/JVKv6rOM4wHylSnXtmJ/GjVvVr3Hxr0t8mMo/B7U59n
8Czwhb6St6it7ir/QP3dJPl0PWe05HmJsYrz+Xap/yKDYfyne/4sWV9DX0G3
4zflt+0S6ndSO/0jj1lwpPUB/6JP9O0vyb9F1pHQlXLB/tiatW5QTrzXs+ff
m3rPBssB02Evj4P9jQ6B7gbGUw7rMdhPZz1/M31lDijfXtc2Bf0TXesX1f9O
ZWU94ySV1VK6Pmtd9QJsjwRFQd9J8isV6yDl0L+TVTfRtbqsR9ghyvfWPd0Z
29i3yi9T/fXh3cHS0DGxzTZkrXtu0vN/kTy1YP3pc33T4/n+9B/dV884VfKZ
rEcqP1t/T8F+CXVWx8aLmNvHsSYoDVD+NrqtZ3XOei4zp7sx3sFJlD+L31/t
LYuNtR3D2qV7m2e91+bCGF0Ze31jnTta5XMkJ2Ft27/oOcJcYWz21Pu2V74G
67XSUVnjZ92U76r8Car/dey16BzJx0s+LWtdFp32JOVXxN4f2SePKnqPrBZ5
T+Dap7Hx0ZMZb0XrVOhWA/X8M/T8GSW/P9+B/nys+s1D223Bf7Je+9kDmtKn
rLFEMMUO9CXrvvMOLZUfq/ZahndprXd9RHIryZ3YjyQvV0OHST6O9a3ov8gH
hG96EN8o6z2EvaSke67X7zJV1zuXvcew17D/LFb5IZKPyHpNYG3AZsN2e16p
se7rWPTvyO/5Tez9kr62D98LTBlsuVbe6z/7Z7Wga/C9SHw79lTKvikbez5e
16qW/U68G/b8+JLHIOOM8faF6j+ma0co31HXtiv7mfwu/D705bPYvye/a/ui
vwHj6/DwjWiL8X1a5LHcU/3sF9k+wE5YF+zr6sEex4bEPgbTwbbcGOy3jsF+
Z31i7+sc9kPsebC3j/kdwBMT256sp11T6xzoHoxJxib24DeRMTns2dXBvj0s
2ONLE9uv2LGjUq/7rP/ovGCxK8GklZ+EbZXajlwl+cvImAN7CnsIeOyG2PY5
eEKr/9urFc/tW7HxdP+Xsec336ZD0fNk296tdG7WYwL9Aj3jkDB20EXQSdBl
3gevV9t76XueW7ZOjm5eX3Nkh8RjkLoHhLGJvsNeyL6JfsSahi6MTsxatwD7
ij1QZVeBr8XWl3gW+tD5qn+E6u+r9usmnt/szV3CenS8nj+jaB0XXXeS3v+s
yBg6WPoO4C85Y/hb8l5z2B95R9aib8ve79n3qys/ruT5yzzeHt2EMRp5jjJX
WdNY21gzWTuZ98z/fcOYxKeyJmcfB76OtWXPd+Z9lbL7fF745rwL+zVrRbOw
3h0ffpOzdW1N7Pbw1cxTqlGy3spcYM61UH5u7PW0edjfTysauwfD/zE23oTv
Bp8Nvht0CHSJXXXtoZLvQTfAxqetJbr2FOOvaH0cHZlnbqfyhbF1JnSnV5R2
VZtvBH3+bl2/Hn1Ycke+J3OqZMwXLPMGtXNj6nfcJ/wGvPuMrH0R7DEvKr9A
9SdHxpT20/dqkvfv+bLkAUXr47PxRYT1GLwIrPvwgEftpb/zJb8W2aZopWtH
Z72msrbupmsv81vqWp+i8Te+T+uAt+EjwVeyf8DXPgj2SOuA14H/goWBmw3W
8z9X+cqsdUR0xcPDmsT6/IHeb5+ANy7TtVuK1qvRVdBZ8NW8q/bmSr5J129O
beN0jYxBgUWxJxwV9gzGEnMCW6FJ5LlC+9g72EDgbTervVkZ2yunq71ZbKaM
h2CvoC8mWdsL2DdstsWg76DPgEGARYAxgTX9E2QwCrAP9J9S0IfQn7aWjE9Q
DpaB/gT2AcaFvoRNiF6Lfvud+vuT6n8b2Sc2Max/n7CesT6UbS+DX6AzoTs9
hc9M+Y34ydTfp0se34zz8yUvCvsROh+6H/pUTnPlIdaE1HYy9jI2ObgQezRz
Fn3gk9g6MmsC+sjrTET1aSvro+67OzXGtjzMH/DZ2cEeHBjsLezn+yL7OPEz
osehz/0p+f6idXJ0c2zGZhXrvei/GyXfo/K/df+/kXVGdMf/7/HsZx+pPxl8
YGqvi+4bk1qPQ59D5xvDfNf1WyKPJ3Rh1tjWYc1m7QUT/EvyC0H/RR/ALqkb
yrE32B/ZJ8HqWkmuoevTwTx0z+O6vgN9C3h4a5X/ybdUeT2Vt5D8X85zjrmH
P/lGfH0qe0/9vSBnDB/s/iIwJqXzwzXKVoFZZ+3zwveFT/QMXT8zZ18p/jv2
tVP17B3LnqPMReYkWEEv/As5+x+/qdgHin+Na5TtkljXaCT5nDBeGX/43/Cd
4v/DP8aext4Gpgm2ubfqv8QaKPln1d8x4FHoVrup/i4561gzC67bVOm1ghP5
ZkqzQ572mmR8La/+VFV+hsoWgx2GvRP8BhyHPRSZ6/g/twP3l1xF32A//Gcl
/wZ8+/oF42d7ghXp/uexUSXXlFwMGB6YEG2D/fH74s8aqPKddO+7qe1LMBzm
ac2y90P0MPRA/M/4DPEdgvedFHxn+K8ywcfFfokOzLyqVjZuDX6NjwZM8P8+
ZfQZsLyJJdsg6H3Vg32WUf3puu+zive4r3PeQ9n72LNvU/k3Oe/lR6jfX4Cd
qY3Okh8obZtu2zDM+7G1wCDV9nMqX6X2h6jNl5Xvq/s2gGeCYej36K1rZ5WM
QYJFLlb5atX9Ut/n5Jx9b/gun1bDB2R87R1dW1w0vjU1a//bHJXvzPoW8PbW
iXUVMHWwdeznn/Ss01W2U9m+SfxZzAF8lFNKxgjQ4/BP98R+Utmi4E+fAibL
OqDy91P7jw/LuA518f/tqOd35B7VeSpv7I0+Lg4YwplBJ2Dt/E1tXR8Z48WH
hd8M/xk+y4VFY+j54Ov7uOIxzLg9gWsF6wzoDrtH9g8yr5hfvNOROfvSGY9t
cvap/6J76urZH0ouq/7ZSlfG3oPbFIzDg8f30z3rCvYR4is8RPmP9b4b1J8X
VL5V9bZUbEe00b276e8yxiC/Ff5ApaV8A6W3wjXKGuh5f6P7g++rzb/Vv+uV
f1rXqqnsErW5KWcMCSzpH5Xvrra/yJnPcqTSXrH1ucboHJK7so+p/o15j090
y5WqXxVdX/29UPJtkgeqvWsr9mcernuX631ukDyQsak6jyf2q+Nfv1/pypx5
K/BX7lC6TvnTVH+A/t6odDptsV7r/jd0fyswNT3jppz99f2VPxe8XOV7YXeq
/ATWVNX9hHWs4j7Rt+Uqey51f4dJ/q5of+FwdHv807r2L1iMrvWKbdPvr3xH
1R+lsu/5bSv213ZDj9E9Y1TWSM//Q+XjVb9Kwb8BvxUcG34bMG2w7Z/YJ/X8
A9G3df9LTGJ0RPwP/P66vkTlP0lep/v2kfyO5Cb6m6q8p+p/zPoqeSO+Gcl/
SJ6rVEPP2zdnf9VhKt+KPqDy/wq2IWpiu+VsWxxU8vzCX7B7wX4O/B0tVD63
aB8xvkx8mshHqH792OM/LtpnjO84UX4p2D3zXfdemTEH5FqVXy75CqXr0G/y
tidel1xU3TpKPyh/t+rn9fzNidd71v1F2Jv6W1vPnqk6cck+KHxRP+r6Vn3L
HhV/c7717sq3UX5v9WcP9mNd+z7vucUcg+PFnGRuMldnF803YH3DpwbHoZ7S
7swZ3buFZ5eMDYPp/i55F8nfM2bxp0keHfwjzNFMyRjyd8qPDBhwXfAn9AVs
FnR5fGoqm6Nrd5XNz8AfNiCM9Z6JuQBwAuayXpaMIaFXYz9VLVjXQOfYi7VE
6QyV74z/RO3XAA9hvirVVz6j+ndk/Jvw2/xZsO+FPtE3fBL4JjDC4Ez04huH
+Xl02GNfVL5m7L33SfWht+5dkPd6/GtifYg9uZbkG/V3nOr+pnvO072D9E5j
0cMkV1e+pu4bp8dt1j0NS+acwT1jf9tJ+cGq8zyYkvq+Su31l3xYbB8Tvqae
qnMpdiC6V8E+0+dVVjW2LxWfFb5BfITjgs8L/2r12L6wfuiryrdTnVl58+Lg
5uETwzfWR/I9yn/Lnlewj/EExmNs3yN6A/oDnMGWqntx4vHLOC6pvwX18Uq1
21vyAOUvSjxeGDfF1L7Ncax9jJ/YvrDxGY8PfpMLEo8fxlFB9fP6DvXABGJz
YBL14V9+a/ZrlVfVtWZgiLE5kMN031DGBP4a/GjYk+DI+AdZL9X+fWABesZT
auuPxL/toWG92aNg3bdGWIMGYf8pvwkdHHxcz9g1dp/o22DGhPJ/q7wnflh8
aLE5JXBL6MsUyd9n3CfmZv2A14HbNSpY5jpzlz2GvQb9p53kTYnXL9Yx+Cs8
v57q78Kc0LVs0bZgnSC3VaodW+b+Mhi26l+jdteiP+jvnIznyLEqX6Nro/X3
7pLLm6u8IdgNOGnJfCDWOta8Z9RWB9YWlV8WmVPHfOX343fEt3m0/rZHv6N9
pVs1Bl7Q395q92u131b5I+kbcyI29+gI3l3peH67xDLX4SZdm/fYZw50KPke
9j76QFv7xeYqwVnaNzZ+CGaKHQXeiH8YXy/j+2H2SvXnfuU3oAMk5hh9nPEe
xl5WIzHe3kXyK5L7x35Xnsm+e7HSj5H3f/SABxJzldjj2evhmqC/wHmCc3KD
+r+rys+UfJrkGWrzvNjtXwPeru/yq8ofRi9T+Uf0Wfk91f+D9f5Pqf1fmB+6
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
+aaCz7bpUjFn4NLYPkl8k9gYYKxgq9gefwR7EBupc8U+DXwbYIRghVt1/6d6
hXZ58/HBXLqDY2WMxYBB4Etl/qE/w6lkb2SPZH1iz4J7emneexmc2QvzxuTA
5sDgTgn4B98bnQndCYwOrI6YofPz3v/ggx6V2s7F3p2SOKad2CL4om3LPoMH
fmrXgPcRI0+sPDHpxKYTP79WdacUHD9ADBC4H/gfsUHEDI0qes9j7wPDRq9H
vyd2i/hreKrwVT9MPD97gA2gEyReR7BV2oNx5B1TwVkHxMwTa0HMA7EUayLH
QsD5JTZ+XcB/iLHAbsJ+IvaCMzU4W4MzCDiLgPh1eLTwaYndJ6aBWPwlQV+F
044vZUrQZx8O+iw6KbopMRbEeHBewOqg7xJ7QQwG3HEwevQG9Ae4sJx5wNkH
b0eOvcA/ylkL6HDocpxZwNkFE1gPyuajtgr6M1zyuyve++HHv1/yGQGcFUAM
IrGI+MhuKtmnhW+rbcU+E3wl2KusP4ODzQAXipjG3kXzRuCngdENKZlzwPqE
j7Iv3yG27xKfBb6LSZH5sczX2rr/wti+Zfy7owo+A4azYIivAlMHSyc2kZhg
fCz4VmYGnxu8B3x89BcdFV0VTBdsFx86Pmx81/jWP1X9TgXzRyYn5hCC44Pp
gu2ic3IOCuehoIsSj8A5QXBQ8T8Rr3Js0ToHugc6GboZOge6B5gY2Fhbtfd4
yfsT2BoYG0ommB/Y3zbOf8WYG7gi+CJYHDoMugzYJLFq4Ld/FcwBhAuIPcDZ
GDdHPmvpA8kTAobRIDFef6rufZvxnhgDBAvsFPY/YuS7hflO7Dw+THyZB4K3
4M8JeD8+VXyrrKmsrWCy9ybmYLC+XF0wN+NEtdclZ58pvlP2TO6hLlgvZ55M
DBgGtsQK9KmCOQT83nBkwEnBS5OwZrJ2EleO7/kLlV+o+heAPaTmKOGTxRcL
dwl+w/2J9xT2lq9U5xLVvVjpy9RnFJ0V8IHJqfG1k8O+zN69FLxJz16K/Vj2
nsHeAecBbgP6SLuABzYP+xf7CZwKng0HCl8IPhFir+EUwfmC6wXXCE4Uvgt8
2XCl8Nf3jO1jZz/Cvwm3mdiDDWG/wvcO5wPuR4eAKYMJ0vdFQd8Bs07DHspe
yp7D3gNn8zjev2QuJxj1SHT4gF1TZ1jYD7n33bCf4eOHK9A/dew1ezB78Z9B
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
ho9x
            "]], Polygon3DBox[CompressedData["
1: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
3zcopy0GXhRZELd7W5M+/g9tFco0
            "]], Polygon3DBox[CompressedData["
1:eJwt1Xtol2UUB/B3rl3chorLGjFlYqlpG2ollYJCTQuJTFFDJZe5mblmpaal
aZl3dF7y3qTMFPGeKOatTM0oFS8bGkVs3da8bOaizFna5+HdH1/e83zP93zP
eX/v8zy/tiPHDShpEkXRMEiGTU2jqDohimpg7R1RNCU1in7IiKLZ6VG0XPwm
UbKCiZ4D8f3we1KiaJ9158Qo2iv+AJ+Gz+GRDS3w6/GHcTNgK9+b+BtQpK6S
vlTfE9bfwgD5Z/SqwJfQPynOVN8D31fcHp+K/8m8lZDOf538IVw6zE2KovnQ
Gr8Tv4Z+N/8SvcbBp3xK+VThp9KPE7ejK8WXiLuHvlCEm+ldF+gxH66lRdF0
+jK6OnP+AcP5fU/7K/+R1iOgAveb2mn0w/G1ZrmEuwhXoAuP/vAjzQG5fDX/
8K+g3carGv+a2fvhZybGPpfpK/ETrM/w+Erdnbhv6DOt19IuhVr5tfTH8M3C
t7NuoG0hLqA/5/mAdZmag97tMJzUd47cCrmOenzk/Q5CBp8+cqP4joHz6i7K
v4e/X5yhdg9Mxa3mtwam8ZkcvlH43XlMEvcwSyLcUjOIz0CoNtdI2tu8nsMP
g+u8Vqrbgu9GX6B2Eo8n+DaDHPxg+lZqL/u9aqFQ3VF8IowSvxN+F/lPUmL+
uPnX0JVBc7lifC/8ed5drLvCKX1PwCnaRfouoJlsfSPsN/n/9BwNFfjnrZuY
vzfk0r9Cf41uIv9ZMFVdNu1eGKRHT3OfDXsifB/6V+lf4jObbjH9TNhHV4Rv
CPtK3RG6SfL3iN/AR3rO8VgK8/Dt8Pt4dPeemeEb6nEEjkIafRt+9XLL9Fwe
zhi/DnId+FfhK6GjOI1Hb16lnpvlr/Kvg3r113Gb6H7B/y1eJ64SXwhnQL4T
rpb3FdjGvxcuh2db8yTKJUEy1Jk9G3dcfQpNLY86+I7PQuvi5PgcXYVU3NNQ
pq4oKf6+V+AC/2fxH+PH47NoW0NL/Czopm8e5PLKg3a+7xD6VD3T5JOsi9Ud
93wKNvDZTddSfqP4WOM56mSedD63Qg7ahjr1G/XakBDzeTRj8J95LjTbEkjl
PZpPm7A35U6GvQyn+Z+CEU3j/TCCdzmfAs/B6nP1nEX/vrib+tMJ8R24iP4a
/KX2eji/Ye/TjEqP/YfTDIUp4Zuo28rnZ/pC6z5+69P8D+n/MK51RvwuYf49
kCVXzOOm3EPiPqG3fFcop+0sN0x8L9+l8m+lxvfb554rvesiWCw/NiXeh1ly
Oda7eK+HNDVjeSzm/7X1fmhK21/96433Xr0ZG/j0kfvSnJt4zKPvqzYfWtG3
5zk9fFv5s/TlcA4qYJ1cDb+tPHZAfrjvw/9DWjx/uJPDvtrCax5dfkZ8Tgtp
3g37k75erpb+cfpp+A/pv5DbD2fVzA93TbiHrecmx2c86BvM1EX8IDSXz6fd
jq+jr7GeIb4qrtDj7vT4fFXzqDHnJRiA34D/k09ZQnxvZ/C/j88q2iVyE/hs
VLMKP16ch98uPz6K75kwz1B8Fn6n9zrDs5BPuefv+CGN92G4G8M5uh288Ltw
bwd/XjU8dtgvK7xHEp+X+bwQ/rPC/51cgbhnevy/cIAmBV8f9p3c5Yx4Xz3G
59/EeP7MxvOSG+7/8H3kq/guo7kozoZHxHfxSuD9qHizfNtwP5txNayCF+GW
3P+prSaY
            "]]},
          Annotation[#, "Charting`Private`Tag$220870#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0D0vQ3EYhvFHDYRJDF42k6GSSqSJSCxe2qZJO4jkkCIctVW9LMw2ibks
nTXxKYwikopY+RKC0e/EcOe6nufc539eZtKTjfZARDRkYShiLhdRl7GRiJJ5
la/IMi+O2vGjwYimpLIvZ7rbWHP9XS/hLbtv3U52Bv/iJfzFW7sfLOt3+bB+
4to9n+APOIk9PNdLsIWbeIw7OK1/wRt8il/yG/6JS+YPXHP+tV2Hz9rd4Wn2
jbzLC9jDJ3mWl+xZsui+it4WP5AaH9dN+Z5UzbvYzP4VP8S+XPFXfJN17/9o
LuO8ucgLmM/9/+c/TTMp3g==
        "]], Line3DBox[CompressedData["
1:eJwl0MEqhGEUh/FjhoSNbNja2IgVIUVNzKQhZZgY6jNs1NTMWLgC1yBCtspl
WKBJlGwsXIVsbPi9Wfx7nve857yd7xs9aG00uyIik6neiMlcxLQM9kcUnNf5
pizzmYGICj/MR9Qlkw/1tt5tfoRVbOC3vgJ+pVn8waL5S/15PWtq1/xX/QLL
zqF+x/vwBrvxCnvwIfXgIzbMVLCJ896s8mNewxHvtPgWH+ZtPoefOItnOIbn
OJ52SHt640T/LX+SjjzLi+ykefcr7mvpXSnxofStPJOy8y7uySrfx1c55e/4
Jkt2v3cu4mLamy/gRO7/v/8BKssqqw==
        "]], Line3DBox[CompressedData["
1:eJwl0EsrhFEcgPG/S81kUIqNbKzUkHLJREOTxCC5fQEpt435CGZKNE02kp2N
WIkF+Q5WYkW5xNrlM/hNFk/P857zP++8czpXC0vbNRGxgr7aiH5kEhGD3JKM
eKuL+MQHuuojctbSnLU/bC7DQxjRo7yO1oaIec9regMLus3app52dhJ5jGMC
c95ZSDmjr80t8g0v8zvf8iu/4FJXzF/xs+cDfaHLfMpP1nb0mS7yOZf4y/e3
8zf38C938A+fOJPWKbO9vOVbGnW33rdftF/Cnt6t/iZX+JjLfMSHnDR/p+/x
gEfM+s/N9nLuYEZPYUw3Wcvrger9Jf7v/g9Mqi2y
        "]], Line3DBox[CompressedData["
1:eJwl0D0vg1EYh/FbKyEMEoMQk43BKvWS8KQVkVDtszF2Y/DyAZBUJFJdBB9A
rBKRiK9gErtQnbSdfAW/J4Z/ruu+z31OzjlTtYN0vy8idqQwEDGfi9iVheGI
qnoxc0n52FDEHl/tj1iTRIrypF/GQ3vKgxEVfsS3eMq/rD/jB77gjX6bP/Im
f8C6+Qa/5yd4h8fYzUdMYA8nsYPjWDP/w2f5Jdad13XHC37Kz/EMe3pN3uC3
+KvetveaX+m94pu8y6a3jeglZjb4uizzOfOl7N1SUqdYlSKv4Ke9o+7Rwm+Z
zv5GPYMr1pfMJVjI/f/xH6qxLKc=
        "]], Line3DBox[CompressedData["
1:eJwl0U0rhGEUh/HjpYgoGwvKUCjSfAJJdoYkNkOZNCnynpkpkZQNK29bRdGs
mJRiJZKVz+ADkA1fgPxk8e+6zrnPee6n52nLrowtl0XEnKSrIgrlERmckg3e
Vxsxz7d5FptrInb4DN/EXufTfIu3OtvFBO7hA85WRjziHJ7odfF9XLLTzg/5
M2aqIxbMpHEJ8/KkP6le5WfmTmXN3gWeS9J5Tl3kBTMlXFdf4guOVEQMS1J6
pFtu9Ye88x0m1C1yw1N6HbxTHtT9eI9ZdwzwPL6qF3mBf7rjS1L8BwfxG0ex
zsw4NmDRzqBnN/Lrv++HE85KvIlfYVr9YfeYH8k7P8A3rDeTK///N7+3OjN0

        "]], Line3DBox[CompressedData["
1:eJwl0c0qhGEYxvHbUMTOx87CDCKaHIHFZK0pocbIxGTha6b56M2UxNoCsWFF
TbPSlCys7OUQ5ATEQfiVxdX/f9330/O89aZ3qiuVnogoS6E/IklFlLCFe3iG
i0P2/Jzv4vhgxAnf5qeY0dNywWtmWX7HZ/Ee5/ASK3bT/Jofu7M0EHHYZy6J
XtRrvC4NqUrB7MH5R2lLzrmmezo8sd+07/KW2RN+YL434h2XcUGyMi+vZlve
n+DPPI1TkpFJeTEr2s/wnLzpZX2J5737pR/xxOwAG7iPdfy0G+GrfE2Gecds
DNf1Nh/lXdzQf33rLf/BG/zGK2ym/v/DH6RLLoI=
        "]], Line3DBox[CompressedData["
1:eJwl0DsvRFEUhuE1Q0LOSPgBSGQa/gAlnaMZTDtmIiKDENMZ0bokBJVG5VbR
UGglgs6l1VDS01J4ThRf3vc7e+2VndM30ygv5yKiIuv5iA2pt0X0JBGbfJEX
+TbfkSE+KG/8BuutEbe4gLu+DRciltzZ4yO8wQ/4nZlVM9PtEU2sZnR+4WzF
TFPO+Rpe4jNOtEQ84pMM8Kod19nb+BV245Rv/fiql+yr8ffsLv+250tSM784
ij9YwnFJzH5m7+T77nzwMj/jXc46ZVI/1U+koHdIavexfiR5/RBz+IJj+ID3
Mutuqm/ZO6/PSW/y/5//AJspLqA=
        "]], 
       Line3DBox[{658, 659, 2612, 726, 2621, 739, 737, 2622, 1931, 728, 2613, 
        1925, 727, 1926, 729, 2003, 850, 1999, 2892, 849, 2002, 2662, 851, 
        853, 2666, 859, 2670, 861, 831, 2655, 829, 826, 1978, 825, 2657, 1979,
         824, 819, 818, 1984, 706, 1920, 690, 688, 696, 702, 2609, 1917, 700, 
        704, 1918, 2883, 658}], Line3DBox[CompressedData["
1:eJwl0L1KgnEYhvFHg4Q8gsbOQPsclCKoJZqqKRoiSHNID0BBAsEIGjuIxujT
QkTsY02oiFoiWm136wcNF9f93M/D/4V3YqeyVk5ExDqqqYjzZMQVLnCJmu6a
28iMRdxxB7do4cC+x4+4xwMm3T3xFDfsX+W8/M05PtJ9yQvyDx+bl9MRn3JT
PsSHvGu/MuJN8zifcopX9aP8bO7j1+2i7kQeyEvykF/MRXnDbYk3+U23L2/J
FS5xEXso4N0+x3nMY9vNHLf0szyNGWRwo8tyh7u+V+ez5P9//AOZcy91
        "]], Line3DBox[CompressedData["
1:eJwl0UsrhGEYxvFb1GjYycTSwkdwaCZr65EiCzUzYqMR0jA0DhMrKzZySJJM
NtbY8gFEDhulfALJivKbLK7+//u+3ufpfXu78jNDxYaIKEgpGTHTGFHDVFNE
f3NEB063RKT5j64b9/S/fIC363uwDTPYiVWs4RZe4Cbu4r1zs3yHl3HVvYe8
xPfxUV/AaxyxW9DnzVfmHN7gGGZ187pRfmuXNy/xZbkzT5o3+LqsSUUm7Pqw
V9Jy6blBu0z9PevfyKs4hQe+7TMRcYRfeIwn8s3P8Uy2nT/FpOcf8Fme5EVa
7ca93yv/kJQ5Z17hw/jungovu2MOF7GIWd1b4v8//AHAYzX1
        "]], Line3DBox[CompressedData["
1:eJwl0E0rhGEUh/HzNDSMBfkCUgorZU+2spMeCxNSpJQZJZKxkJVk6z0pRUKy
keQDUNY+ALKfJOX9J4vTdf3Puc/93D2NI4XeySQihlQxEzGlnrMRaU3EEl/I
RTzJM3xW1VZFDJvV4bH8YXaEq8698w1exi3scaarImIC5+108G7eiQUs6RUx
lftVH5/WG+SX7kv/vsVH1Z28jLd4o1b4A17hI17jnirZWXTHLr/Xn5PX+Jn3
fHtX3uwLz+XE7AQH9D71TnlG7wLbMOy14qZ7Et7Of8xacNxOM77Jr6qJj+m9
8HXnG+Qyr7S3I1fjNmbxAA9VPd/P/f/3XwqNNLo=
        "]], 
       Line3DBox[{2015, 884, 2693, 2026, 910, 2029, 913, 2191, 1202, 2192, 
        2948, 1201, 2190, 2947, 1200, 1108, 2740, 1061, 2731, 1060, 1067, 
        2734, 2117, 1074, 1070, 2116, 2925, 1068, 1057, 1053, 1051, 2114, 994,
         2067, 961, 960, 957, 2702, 2053, 954, 2052, 953, 956, 2704, 959, 888,
         2681, 890, 2695, 885, 883, 2898, 2015}], Line3DBox[CompressedData["
1:eJwl0D1LgnEUhvEjRlauTdGLFbRJRnsNbb1AKFFzH6CgTdyCpFospdWxloLA
QSFwyAp6+QJNBQ5BRX2FfuFwcd33OYc/D8/k9m5+JxERBbynIkrJiMOhiCpv
pSN+zI7kTflDPpbr9hX+0r9R1k/0T4wNRPzyPl/0RZzj1f5Ur6Khv+ktPtPL
3m3KNflA3pD3eF2fkS/dTvM1r/EqVrD8n93McQ7zmEUWV26neNE+wxMYxwgW
zEZ5ibu+c5hvuZ87fId7PCBl1uaK9264iRYGzR/5Cc94Qc1NkQvp3n/8Awtj
LhQ=
        "]], Line3DBox[CompressedData["
1:eJwl0U0rRFEcx/HDTJG7YEGzRnkFHmvWsp6ywMrDZFajFDGMsZhiQVEeI4Yk
Y4udV2BBYTaWyiuQPG18Jotf3+/v3Ps/nXNv69hUKlsTQsjIa10IhVgICw0h
LGNjPIRj3oQnWJI4j0mZJ7CvPoRL/uv9dv6Dk1EIHfybt2Fa/+LdvEeazSWx
Fq+tX0lRL+sruCp7/Mm+s3yLT+Ojvsln+C4u2XeOH/CKZ/u4Iff8Qdb5Ha7h
hNzyEUyZueFDfN4e43qOj+IiFiRnPa3neW/1ntKvd2KXZD0f0JPVM0tRMvqh
u7z7jkdYklP51C/wXIbNfehn/FkiM9vOUuEv0qK/YQJ3rOf5YPT/b/4AGYc5
Kw==
        "]], Line3DBox[CompressedData["
1:eJwl0E0rhFEYxvHbS2YajfIF5PkGxN7ekqzQFDaeyViw8xIimsXYeImSEhsL
SRnJnoWUbK0k+0kSG/wmi6v//zrPOc+5O8nY9ECpISKGZT4XsdIU8ZaJWOSr
vK054oi34wkeSwvfxyzmpNga0ZuNqNk/zjv4O/+QCb1TT+RT/5HUWpfeLXnn
e/DSeiNe4K/7g4/ad66fyYw+KwvWtp05kDl9ST/kO3yd3/BreTFfGW/xTjb4
PaZYkCs+VL+DV/kgH+GPfBNLegWn8MHaGk/5pPTxftwzV82su/iNX3LKC+bI
+/5cfz98wi3/WMbXzP87/wFrqTNA
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwt0Tsvg1EcgPFTt7CQTlKbb0QXVo3FwFuNNkQbiYWBiNHlA0jbaAgdURIm
UbdgEJcSEoOv4PcmhifP8z8n/7w57WAmSk8lQggTqHWHUOBcWwh7ek53tofw
2BPCop7HjLt9d0Xd6y5puct9QvfppB7gTfMG0uZpcwHb5i3k9Su/YEm3+B3L
uoqsnQgVPcllzvEu57nGEb70ur34AcN6CFn962yVx8wr/G3O6DX9o8fjPV1H
qiOEkrmoD9yVeMR8qBf0qK7rRvz7eHvT20/0ESrmKo71Dd/iTDf4FDu6jA87
n7jXLW7yM1/zG9/xJa5868neuX5wfsH9zlK+P/v///wBHNJAeg==
        "]], Line3DBox[CompressedData["
1:eJwl0bsrxWEcx/GvcqvjEvkHDAwMhEEWi0suJUpGRUkSCyUDk5JBkYhjsLmM
iIgjKREDFiW3QeK/8DoZPr3fn+/veZ7feX6ndGC8ZywjIqbkPDOiNicihZfZ
ESf8Ch8SEWtZEaf6Om7IZl5EEr89S+EvHuI7Pll3wF/4Pr7io9kYP+KjeI3b
ZkfOv+V7fNy8T3b0Fb2XL3nPMm/jHbKmb+mTvC03ooTXmY3wGme1YBUWmZeb
t+rFvMvszr0a+A3W4y1mYqM12ZgvZfYUYKE0mz/pCf6IFc6YkWnp1qvMP3HR
umrezic8+0r/ZrNOHNaH5IMvmPXzRj7LK+wZ1N/0Ob1Sb+LzvM/8xx0v9NAz
ZElflmff597aVb6S/qY8ad0xntp3JinZTe93x7qc///2D5YgQkU=
        "]], Line3DBox[CompressedData["
1:eJwl0csrpmEcxvEfM5hiMTV/gcnGgsZiFhPZsJDJsTA1G72Tpul1WFA26C3F
lmSaDRJFsaBpisY5g8ZhlKXDwhT/hOLzZHH1va7rvn93z/3chame5u6siMjQ
7suI93kRO7idG7GWeNyj3/xUQcQ+/yMn4gut5kekcAWbcB4bsYGu+UN758z8
M7uqu9Sd8138Lz6Nf3AYl/RH/E8z03yrbkFelifkMeeMY42+lr7LM3Ifv2Ff
P6ZfRXyjMjMX1l9bf8fX6N7wb6mTr9PV04F7HtIH/V+swDPMxkr7XmAOFVCR
86p1JeZKqU0ewBYcxM+YwU/YjT10y4+Z6eX/J9/Pf8Svcgfd8MXOHtJX8u26
DJ/CKzmNI3IVP4qt8r17bsmP5u7kTf6BX9If46w8yU8k/1heT94u2Zfcl450
C9YW6cRdT6k87/ntnwCIpEoa
        "]], Line3DBox[CompressedData["
1:eJwl0c0r5XEUx/GjLmZyw4Yy4nrakM0sroeaDbaykKXcspENNbOYhSZSNJvZ
WFySh435DzR/wEQslZQshGSh6yqJkOH1axan9/tzvud3vvfbbR6fHp4qiYg5
NV8W8TcVcV4acabuyyNO9c7UI7/EC3Xp7Lki4gqf9J/VFj/U+4078mY6opL/
s29MnpRz+CZ/5Wlne/KifTl5hBedTfAXPLLri5mf+gt6PXyBz/Ne/gv7sF+t
m81iHrtwGTtxze4fvpk1u8FXVbv+jF4HXrlnKHkXDib3JG/lA9inRj9ENOmv
8G+YxwbfZdSSO77rtfB2c/vuqHL+mVfzOt6iuuVPchZb5WZei53yI36U6/kD
T/E3+07UH16w/849x/I139Y7MLeb/Abexhsxg7XYgDV4k8zzApba/WpHUS7K
ZfItHifvtHMXu8v///fvTi9IAQ==
        "]], Line3DBox[CompressedData["
1:eJwl0b8rhQEYxfFHflyFFKmrJLIoiwwMskgGNlYMBrEQSQbJoBRKJiQ/BvkP
bCZEmZVMQgZdwkB+83kznM73nOe5z9t73+r+ka7hrIiYpMOciMZUxBG/zo24
zIt4lW/4Fb0XRLwk2eyW3vB+ITb7xLu6Q76pK8Lf7vTKg/K8nSE8igvMHsy6
5T55zqwHD+AP/ZnnNNuZ083qmvCqbsfegm5R167b1pXwJV7KZ/TT5lv21mla
3uBrNKWvs3Plfge+5p3Ju/BW8yqzcXnZrQq8ohuTK/EEn3KrBtdSQ35EPRXr
0vaqqVEul39xC67CZTiXKuR8OXAaZ+Mfdy5oD2fcf/bcc/mJnyT/vS6Dj/E9
P+WVyffg4TeP+IDf8zvKcTfDv+w+8JT8lDzD+7Wl/r/tH7c1Rmw=
        "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/G3Or9i9QfcYjJRYjBisHzdrXcuyk2c34rNhOGmU0omySJ1
JeUGt5iEGCTdpiQnf4M8LsOr1/P1en369Pl+03NLmVJbRBRorydirDPiORUx
zhu83B5xiR9t1x0Rdbyrq/Kj3oh9/Iu/bOtdEW+6LE5oVR6Rp/E2buAcXqCy
PCkv4gw/kJt8U96gLB50b0X/iUd1AzyRu1tvxP26PvzjnXk5g79xwpt8yl50
fsiW1s3iCV2JD+uW+Yr3r9GJve4bt/AOXcj38pXzp/gWz+uLdCzXWv+DqvZD
+RznbHmquHuGv+jf9XfOfPAH/qo7s9fsN/SU+v/vf6RvOG0=
        "]], Line3DBox[CompressedData["
1:eJwl0U0rhGEUh/HjbZhnxkQWVtQoJeXlE2ChZmVjoZCNoSThK8wSjY0vQFMi
H0SalWGhsJSVvMuw4CeLu+s6//uc+zn15Bc3ptcbIqLonDdHjLVG1HAcL/C9
JSLdFvGGP5mIKp5k9aQiPtTX+Ik1+QPe/83xbj2X+Ci70jPkjaqskw/yM97F
s06/+lSd8D6e5Wme59+YUw/wHJ90FviobILP8V7fnMUevLFzAW9xCu9wxB4l
Pox79tk3VzJfwR08wi08xF08xrL+A70FM3VvLMvnZUv4qp7h2+5feJOeonrN
XdnsKk9km+oVnuY1vRXssOcXtmOj+zrP8GdzCT6l/v/DLyKjNiM=
        "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/H3ibtv3aGUjbCw+TVaEIrVJBR9JYO4P8INd5dY7OoWi4H/
QQYZKJcyYDRdIV0hecjw6vV8vd7vz+f76TuQFhd3MxGxRvXWiKlcxB1/y0YU
kohMIeIdd+OvtogOfqHr5DU5oS1nirosbqFU3pYPnNvEO/jVnWV5Wd6QU6rI
+/IhnnFulo7zEXO8qi/rT+xUeY2XdEfmo+ZjVNKtms3rH92/wJ94H1/xvhGz
HryEJ+2u83FdOx7Cn7yf53UJztGgfCl/4wnci7vwDw3LV3Ldt8/5i7sb3nMr
39CZ7t5eQ9/UP+CPvzl/1p2aX9tr0p6uYjad+//vv9c0M7s=
        "]], Line3DBox[CompressedData["
1:eJwl0c0rxFEUh/GjMFOs7b0sFFkRtsqElDFZqNkxloyXYuwsvUx2UzYWlmqo
mdSUkq0IO5SNkkb8CVI+k8Xteb7nnHu79/frXMhnVpoiYtF6ao4YS0Q8Y7El
osIPsIqH+NgWccH3+a71y3/U6q0RG8mIORxtj9jkGT7M13iPuaw8Lu/J/XKK
F/kA/+QF/TRuY0n9i2/xDxzBPkya7cIE9uKg+rTZDvnbnWexjjONM3FSP6c/
gUs4hUP2LfNuM3lc9Y5Lb1jHE7UrXuBlXjN/K5/zHbVc41vIR3JVr8aPecmZ
Wb1561StpHamX+YVfMMbfMe7xpvwHut4bc+L+Qf51Z1Tif//8AeH9zpB
        "]], 
       Line3DBox[{1263, 1877, 3168, 1264, 3207, 1701, 3206, 1929, 1683, 3191, 
        1305, 1904, 3193, 1685, 3195, 1909, 1313, 2143, 2142, 1605, 3121, 
        1301, 1903, 1300, 2084, 3085, 1785, 2078, 3082, 1542, 2083, 1547, 
        3100, 2104, 1792, 3099, 1556, 2091, 1750, 3246, 3247, 1749, 3250, 
        2025, 1494, 3257, 1757, 2031, 3256, 1756, 3267, 2056, 1523, 2070, 
        2071, 3269, 1528, 1487, 2019, 2020, 1285, 2957, 1679, 1894, 3182, 
        1284, 1892, 1675, 3178, 1889, 1281, 3189, 1263}], 
       Line3DBox[CompressedData["
1:eJwl0Tsvg2EchvGntCphoBqNYpA4TCJRk/NnsGDkA9SKRAiJhcFicBjwAbAZ
zITEYZOI0yeQqLYYEL83hjvXdT+H//Mmb9v0zFg+FkLIy1pNCOV4COPJENb5
Bz/nd/ybf8mkPlUbwgR+6seJEA70G/2I3zt7iAX9TU7tPekvUtTf5ZmXq0Ko
rzaXl3iK//A0Nsg7/zWrgCkzstF5bMYGbME0Xti/lBP+avZDNM+9ojzyVrNi
zibsV2CTXsUreZYneZx3yIB+qw9G36LXybWe0zP8ivfwTnPnvbWgd/EOmdXn
pJ2v4L7zvXyZd+MiLkmGb/i2RtzFUdzBYdzCIdzGEeyPZnlj1b0+vmk9h3vW
zqyV4v//7A8fuTv8
        "]], 
       Line3DBox[{1280, 1888, 1676, 3188, 3187, 1681, 1905, 3194, 1684, 1307, 
        2974, 1304, 1306, 3192, 1682, 1902, 1901, 1297, 1295, 1900, 2958, 
        1296, 2079, 1784, 2100, 3096, 1568, 2105, 1793, 3278, 1475, 3242, 
        2014, 3050, 1474, 1476, 3251, 1753, 3258, 1486, 1747, 2017, 2018, 
        1485, 1748, 2021, 3245, 2022, 1287, 1680, 1899, 3190, 1280}], 
       Line3DBox[CompressedData["
1:eJwl0UsrhGEYxvEHDcKXkMUQO2vF2DgMCyZFkZEaZuG0sJGEYct2IufkbOGw
sTCURCxkYydLfAm/yeLq/7/uup/neXsrh8a7xgpCCGOyUx5CRySEXezEMxzE
c0ziG65jriSEW9ngd7iFm/JQHMK9vs2f8UmO+Kl82H3VT3hRqb2KEH55Ic/x
b/4jGT2mL2LaecPSpM/rA7yBz/J+3siTuKCPYoveKlN8xeyLT/IJSfAZ7M2f
hX04hz1Yi1VYhzF7zVKTvxfLvDmav4tXYwpHJM7rJWqvTW+Xae+/8Z0jmLV3
wVP8OP8efV9fxW6zhFzqa3qaP/IDnuEvfAkP9azzl/mn2RW+m+2ZXfN45P+f
/QHcejyO
        "]], 
       Line3DBox[{2981, 1934, 1706, 1405, 2134, 3117, 2133, 1596, 1594, 2130, 
        2129, 1595, 3286, 1591, 1817, 3303, 1597, 1598, 3285, 2135, 3118, 
        1819, 3130, 1830, 2168, 1626, 3307, 2198, 1832, 2172, 1473, 3240, 
        2013, 1467, 1466, 2011, 2012, 1472, 3241, 1464, 1370, 3218, 1369, 
        1743, 3048, 2010, 1407, 3009, 3010, 1716, 1957, 1362, 2981}], 
       Line3DBox[{2986, 1942, 1711, 3237, 1463, 2005, 3042, 1738, 3239, 2009, 
        1437, 1981, 1980, 1423, 3022, 1424, 2007, 1468, 2169, 3132, 1831, 
        2171, 3291, 1621, 2165, 1829, 3131, 2167, 1625, 3289, 1624, 2187, 
        1837, 3149, 3150, 1841, 3151, 1816, 2127, 3284, 1590, 2126, 3114, 
        1815, 3113, 2125, 1589, 2146, 2147, 3287, 1607, 1818, 2131, 2132, 
        1402, 3007, 1403, 1955, 3008, 1404, 1967, 1410, 3012, 1958, 1406, 
        3224, 1385, 1946, 3220, 1375, 2989, 1710, 2986}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2199, 2200, 2577, 2209, 2576, 2790, 2329, 2524, 2654, 3227, 
        2891, 2829, 2830, 3233, 2526, 3032, 2256, 3197, 2254, 2962, 2807, 
        2806, 2505, 2606, 2961, 2881, 2252, 2251, 2504, 2867, 2212, 2578, 
        2791, 2579, 2215, 2214, 2259, 2507, 2608, 3198, 3199, 2609, 2243, 
        2960, 2804, 2276, 2818, 3025, 2334, 2863, 3229, 2657, 3024, 2656, 
        2338, 2199}], 
       Line3DBox[{2201, 2202, 2874, 2216, 2580, 2794, 2462, 2438, 2556, 2557, 
        2735, 3110, 2926, 2852, 2555, 3283, 2853, 2439, 3111, 2386, 3259, 
        2536, 2387, 3066, 2840, 2906, 3065, 2700, 2537, 2865, 2205, 2573, 
        2788, 2870, 2206, 2211, 2540, 2703, 3068, 3069, 2702, 2395, 2394, 
        3070, 2841, 2416, 2433, 3107, 2434, 2925, 3108, 3109, 2553, 2733, 
        2436, 2201}], 
       Line3DBox[{2203, 2952, 2869, 2204, 2871, 2210, 2330, 2651, 3021, 2331, 
        2890, 2332, 3023, 2653, 2333, 3031, 2343, 2907, 3261, 2389, 3265, 
        2392, 3276, 2549, 3272, 2713, 2809, 3196, 2255, 2935, 3120, 2856, 
        2753, 2561, 3119, 2934, 2868, 2793, 2873, 2792, 2872, 3164, 2213, 
        2260, 2610, 2963, 2810, 2506, 2257, 2883, 3200, 2508, 2258, 2967, 
        2266, 2972, 2277, 2991, 2300, 2993, 2302, 2337, 3228, 2655, 2335, 
        2336, 2358, 3047, 2671, 2531, 2203}], 
       Line3DBox[{2574, 2207, 2575, 2953, 2208, 2398, 2707, 3071, 2843, 2539, 
        2393, 2704, 3266, 2864, 2396, 3093, 2417, 3090, 2415, 3158, 2494, 
        3159, 2851, 2437, 3282, 2734, 2554, 2435, 2442, 3112, 2736, 2559, 
        2218, 3165, 2582, 2795, 2581, 2217, 2465, 2757, 3123, 2463, 2938, 
        2464, 3125, 2765, 2563, 3124, 2939, 2823, 3004, 2320, 3003, 2321, 
        3033, 2341, 3027, 2340, 2701, 3260, 2388, 2911, 3074, 2846, 2709, 
        2542, 3073, 2910, 2866, 2789, 2574}], Line3DBox[CompressedData["
1:eJwl0C9LQwEYhfFXUNh2L9ZhkhWjUTFodML+MIawOgZWDQaNYvATOMQmIgZB
YcK9iBhUcJhMGsSgcUmDX8DfMBye55z3jnFvpbfV3pyIiI6USxGXhYgKbqcR
T8WIWX5nW8BPPMcz2XU7wSW88OwOX+R7eKXX+AD39Z8kYkVflsyWy4G9qf+6
tXDNluG7vcbrMtCvZcS/7G1MsIEf2He7xXn9iL/wUxzis6S8iQm2cBof/N86
n8RVOfTbgv2GV6Wvl/Qpnksmdc8Xbcdu5fF74xxu2N/cX+WbP443txnew3u9
m/5/1z+MIC65
        "]], Line3DBox[CompressedData["
1:eJwl0LtKQ1EUhOElIpgYsIiksgk+RiysBC8gGIidgqWgdmrvpQjptBe8VLEw
UQwK2kTw+goKsfBAIBB8APE7WAz/zOy119mc4urm4sZARJSpl42ojkSU6GI4
YjkXsUJ1vqZr4BMWMhHP+EJD/Jx7TX6Q2lSRx/SP/Az9yuc4hT92jDp759/o
jH/FI7zFQ0x885NfwA+8S8+oLB/Y08WWPIt78hdmzHUw0bfwG69xX983My/3
cIku9QWc1u2mb0/34BXm9Tt8ydkxbuMJntK9tz/QBL9lto+T5tf4G/24vJ77
/49/kowz+g==
        "]], Line3DBox[CompressedData["
1:eJwl0MErg3Ecx/GvEzaOop1wd7b8Bw4zs+Ru4sbFDk5ydtdOai25mVI2c1ux
lHLSIkXhYC1t2h/gJYd378/n8/s9T0/PzPrOyvZQRORRHYk4TEac89ZYxCZS
iYgLfUMuYEo/07tc1Gd5l6e5Yb/GvPzGp3yCvdGIMi9wzvs7SMsHtqpn9/lT
/7ZP/mE7tmVsff0HWXnAOV50fsnv/IGEu69Ylufc+eK682fbkvzCR/qjXHRe
kh9sFW7xHcblLPd9dw95uenuKpc8N+y8jYx+Za/hSV/Tb+UbTOj3yf//+Av4
bzOZ
        "]], Line3DBox[CompressedData["
1:eJwl0K1Lg1EUx/Fjc3PNBUFELGv+B9pmmHHKUKN1Y6KoQcEyLAoOltdnMfmA
bwuCSzMqw7igFoP4Ahr9PBi+/F7OudzLnVnfKNdHImIJk9mIXibig9ZzEVP0
E5WxiDP5gH8238UC9uU9FPlr82P+CFd8SbeIFWd/8Is5uUzfkMe0vW1dnu7Q
ZdpNz9CEDmnD3jn/wr/iUG7KJ3iUN9O5Owt0IN/wXQTadlq44GfNLul4+gZ6
az+LCXlVvuf7WOMfdKd8B1+jEd9I+Cf9gL7bSXRb6f2408/ra3w19/+Pf8Va
Mlg=
        "]], 
       Line3DBox[{2232, 2957, 2231, 2685, 2684, 2370, 2901, 2900, 2371, 2697, 
        3256, 2905, 2375, 2376, 2696, 3061, 3062, 2695, 2368, 3052, 2367, 
        3102, 2419, 3091, 2418, 3161, 2495, 3163, 2862, 3153, 2449, 2740, 
        3115, 3116, 2930, 2448, 2445, 2928, 3114, 2738, 2444, 2931, 2741, 
        2855, 2742, 2932, 2825, 3007, 2322, 2641, 3006, 3005, 2824, 2648, 
        2514, 3217, 3216, 2513, 2982, 2226, 3169, 2497, 3177, 3176, 2229, 
        2878, 2233, 3184, 3183, 2590, 2232}], Line3DBox[CompressedData["
1:eJwl0L8ug2EUx/FjKi8LV6ALIVhJJMQdNHUHNO1AmPyZhI0EK9FNQtrJJVi0
nSs2KmoSaSwSBovPkw7fnN/3POc5z5s3v7Zd3BqIiFXcD0acD0csozkUUUVL
byqLmMb+SESDT8iT2OMP/AOL/Jif4JMv8VP5DH/yu96VvV31Wu2pX+jIryin
N7z3lmZQ4bN8Djd2bPINjDqr8115B792/ODJXMFZzdmYeoRDPPNa2oFH8wt8
Hm35Vq8jv+BOnjG/IpfknLquHiAvj+NbvnSvJTdRSd+pV0aW5vlF1v+P/1HQ
MnY=
        "]], 
       Line3DBox[{2596, 2241, 2880, 2803, 2918, 3085, 2545, 2916, 3083, 2847, 
        3084, 2917, 2546, 3097, 3098, 2551, 3279, 2429, 3138, 2567, 3139, 
        3140, 2473, 2771, 3129, 2471, 3288, 2941, 2565, 3132, 2774, 2355, 
        2894, 2354, 2676, 2895, 2351, 2664, 3042, 2893, 2347, 2348, 2665, 
        3044, 3043, 2666, 2352, 3049, 2287, 2980, 2285, 2979, 2269, 2969, 
        2270, 2973, 2278, 2976, 2283, 2621, 3211, 3210, 2620, 2281, 2248, 
        2604, 3193, 2603, 2240, 2597, 2596}], 
       Line3DBox[{2503, 2959, 2242, 2966, 2265, 2971, 2275, 2990, 2299, 2992, 
        2301, 3046, 2527, 2670, 3045, 2669, 3238, 2353, 2357, 2530, 2529, 
        2528, 2356, 2673, 3239, 2672, 2831, 2659, 2658, 2828, 3022, 2652, 
        2523, 3226, 2827, 2908, 3067, 2538, 2909, 3263, 3262, 2390, 3264, 
        2391, 3277, 2550, 3088, 3087, 2922, 2548, 3086, 2920, 2848, 3122, 
        2562, 2754, 3121, 2461, 2755, 2936, 2808, 2882, 3195, 2607, 2253, 
        2261, 2509, 2262, 2964, 2611, 3201, 2612, 2503}], 
       Line3DBox[CompressedData["
1:eJwl0D1LgnEUhvHzRIiaH6ChBjehOQgihTIQacpvILRk1NAWkVCgW0MuEb0M
NZl+BpsElxqDGh0aWlqEgoZ+0nBzXec+588DT75+sL2fRERNhumIQjZiIrdz
ESvYykWU+Yfdr/mOl/Bc/667NC+bT83PmYgzfMEHLOA9brl5kx/3PSy77+gT
/q3bMHf5Ol7ogx/yWe+rmGAFZ3CMOWm7+XT7qDvhqzylb06/xZdwE/v2r/oS
L0rPvIZ1TOEXZjAtO/zG7YjnvV/EPTzWL/Cu3RGf5w19g1/rdvEJr3CQ/f+P
f7i8LEM=
        "]], Line3DBox[CompressedData["
1:eJwl0DFLQmEYhuE3LDDzHzTZVtAPyKmGlNb8A+WUIAaNtkXR6OSQTm1ZKO5R
uwbRkGQkSk1tTS1C2BUND/f9vOf9vnM4meLhbmUuIgqynoroJyPu8WIx4g4P
sIkNKfFjafHHdMQVLuPKUkTZvIR9/UG+9KKe4POypy/gPm5iB8c4kRN7XT3H
8zJ0b1LWzF/1Z57FAV7bu5V3/iHB8zjz3TuY0I/w09mp2TZv8xwOPLvhM97C
Lfy2M+Jvsur5BF/M6jjEM+89ldHfXWaX8uNczezJfpaf8w3s2amm///jL+oG
MzE=
        "]], 
       Line3DBox[{2518, 2995, 2310, 3234, 2525, 3231, 3230, 2660, 2339, 3026, 
        2832, 2912, 3268, 2541, 2708, 2845, 3269, 2710, 2913, 2842, 2706, 
        3267, 2705, 2397, 2399, 2837, 3244, 2899, 3243, 2681, 2369, 3072, 
        2844, 3094, 2414, 3089, 2413, 3162, 2493, 3157, 2432, 3281, 2552, 
        2731, 3106, 2732, 3280, 2431, 2441, 2558, 2440, 2737, 3113, 2927, 
        2443, 2756, 2937, 3287, 2857, 2768, 2564, 3126, 2940, 2822, 3002, 
        2522, 2888, 3223, 3222, 2518}]}}},
    VertexNormals->CompressedData["
1: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
ow==
     "]], 
   {RGBColor[1, 0, 0], Thickness[Large], Arrow3DBox[{{0, 0, 0}, {8, 0, 4}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Arrow3DBox[{{0, 0, 0}, {0, 4, 0}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Arrow3DBox[{{0, 0, 0}, {-4, 0, 8}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{347.5157275566232, 368.7726071410972},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-4, 4}, {-4, 4}, {-4, 4}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3645280556406165`, 0.11152678970672224`, 3.0944506718555638`},
  ViewVertical->{-0.4050938809831048, 0.42471144287334156`, 
   0.8096413637422994}]], "Output",
 CellChangeTimes->{{3.7533938115793195`*^9, 3.753393832530348*^9}, 
   3.7534062464173484`*^9, 3.7534062894363484`*^9},
 CellLabel->
  "Out[996]=",ExpressionUUID->"a36cc752-b510-4a8c-bc3e-475b09f09d41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P3 .7 .29\nConstruct the matrix corresponding to a rotation of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["90", "\[SmallCircle]"], TraditionalForm]],ExpressionUUID->
  "040a0d48-49f5-405e-853e-de7e81060783"],
 " about the y axis together with a reflection through the (x,z) plane. Use \
the standard right handed  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], ",", 
    OverscriptBox["y", "^"], ",", 
    OverscriptBox["z", "^"]}], TraditionalForm]],ExpressionUUID->
  "7a3ed83a-34c0-4047-a118-347ea5b30bcb"],
 "  basis ."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7486134771331224`*^9, 3.748613692423894*^9}, {
   3.7486147658169622`*^9, 3.7486147682298975`*^9}, 
   3.748708801347587*^9},ExpressionUUID->"30744dbf-03fb-4930-b8b9-\
4dc472fd18ac"],

Cell["\<\
The standard matrix for rotations about the y-axis by \[Theta] degrees is \
given by: 
NOTE: 
\tThe y-value is preserved whereas the other components are multiplied by \
combinations of Sin[] and Cos[]
\tAlso, the determinant is unsurprisingly 1. \
\>", "Text",
 CellChangeTimes->{{3.753393960392671*^9, 3.7533939769614515`*^9}, {
  3.7533951361788635`*^9, 3.7533951812453904`*^9}, {3.753395385970395*^9, 
  3.7533953873377523`*^9}},ExpressionUUID->"7c09d798-1516-4fe6-962a-\
be061f20b11e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotmat", "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "0", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]},
     {"0", "1", "0"},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.753393980814968*^9, 3.753393982009617*^9}, {
  3.7533950983992105`*^9, 3.7533951319146223`*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"a72b1ab9-8a75-41f9-9f6c-ed76b3d6f038"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7533951326338224`*^9},
 CellLabel->
  "Out[873]=",ExpressionUUID->"0867871e-e659-4ecd-9d0a-fbe37683916a"]
}, Open  ]],

Cell[TextData[{
 "In this case, we specifically want a 90 degree rotation, so we sub in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "2"}], ":"}]}], TraditionalForm]],ExpressionUUID->
  "4d98bbda-35df-4995-9bc5-2c9823ee1d88"]
}], "Text",
 CellChangeTimes->{{3.7533953958332148`*^9, 3.7533954001049194`*^9}, {
  3.753395558283188*^9, 
  3.7533955785630236`*^9}},ExpressionUUID->"1e5f1f4d-28f0-4b05-9e40-\
f3e5873ffd3a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rotmat90", "=", 
   RowBox[{"rotmat", "/.", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"\[Pi]", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "rotmat90", "]"}]}], "Input",
 CellChangeTimes->{{3.75339575233565*^9, 3.753395767249902*^9}},
 CellLabel->
  "In[877]:=",ExpressionUUID->"eeb8f320-f144-42f6-99c3-05364de46e06"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", "1", "0"},
     {
      RowBox[{"-", "1"}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753395759160199*^9, 3.753395767761204*^9}},
 CellLabel->
  "Out[878]//MatrixForm=",ExpressionUUID->"eddd3a91-82cd-442b-939d-\
0caad2bb2534"]
}, Open  ]],

Cell["\<\
This makes somewhat good sense because our y-value is still being preserved \
and our x and z values are switched and negated.

Now, we also need a standard matrix that represents reflections through the \
(x,z) plane.
This means the x-z values are preserved whereas the y-values are reversed \
(negated):\
\>", "Text",
 CellChangeTimes->{{3.753395777123699*^9, 3.7533957999862537`*^9}, {
  3.7533960593777013`*^9, 
  3.753396122706069*^9}},ExpressionUUID->"58db5558-4bf5-4106-8253-\
9723dca26d16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refmat", "=", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7533960839832673`*^9, 3.7533961047936897`*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"023684bc-065e-4105-8479-1c816d16679f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7533961060497956`*^9},
 CellLabel->
  "Out[882]=",ExpressionUUID->"62740cb6-4d9a-4ddd-b496-42aafa4d3202"]
}, Open  ]],

Cell["\<\
The composite matrix corresponding to several transformations is simply the \
product of the individual standard matrices: \
\>", "Text",
 CellChangeTimes->{{3.7533961291154013`*^9, 
  3.7533961518169765`*^9}},ExpressionUUID->"5be9fac0-2af3-4b0f-8614-\
d5ff2d96752b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"finalmat", "=", 
   RowBox[{"rotmat90", ".", "refmat"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "finalmat", "]"}]}], "Input",
 CellChangeTimes->{{3.753396164646973*^9, 3.7533961746977835`*^9}},
 CellLabel->
  "In[884]:=",ExpressionUUID->"4c7441b3-0288-4342-a034-def209f8d984"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{"-", "1"}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7533961691004143`*^9, 3.7533961751775*^9}},
 CellLabel->
  "Out[885]//MatrixForm=",ExpressionUUID->"7c1f1a33-2d39-4be6-9ef7-\
66f50e083c35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wk3.P2\nConsider the vector space of cubic polynomials with basis {1,x,",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "d1f9b2ea-8be2-489c-a40b-3f3d3b7323c0"],
 ",",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "5e14af4e-361c-4b77-a175-a6b7f1c44ed6"],
 "} . Let T be the operator that returns x p\[CloseCurlyQuote][x] for any \
polynomial p[x] . What is the matrix representation of T in this basis?"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7487052531555433`*^9, 3.748705413298245*^9}, {
  3.748705447675326*^9, 
  3.7487054699412327`*^9}},ExpressionUUID->"eefe29c8-925f-4255-8141-\
56309d82f162"],

Cell[TextData[{
 "We can see that T resembles the differentiation operator, however, it has \
an additional multiple of x in the end. \nWe can deduce the matrix \
representation of T by examining its effects on the basis vectors, in this \
case our basis is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      SuperscriptBox["x", "2"], ",", 
      SuperscriptBox["x", "3"]}], "}"}], ":"}], TraditionalForm]],
  ExpressionUUID->"3386492e-4595-48f4-8df2-f0aeb221aa34"],
 "\n\nFor the basis of 1, we get:"
}], "Text",
 CellChangeTimes->{{3.753396955842108*^9, 3.753397016587065*^9}, {
  3.7533975326342306`*^9, 
  3.7533975367384253`*^9}},ExpressionUUID->"6c03ea70-9c66-49fd-b81e-\
97a60436602a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basis1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"basis1", ",", "x"}], "]"}], "*", "x"}]}], "Input",
 CellChangeTimes->{{3.753397539752593*^9, 3.753397574082448*^9}, {
  3.7533991281561313`*^9, 
  3.7533991461031013`*^9}},ExpressionUUID->"f7887389-a972-46b7-bfdd-\
0089f569f2f3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.753397574595051*^9},
 CellLabel->
  "Out[887]=",ExpressionUUID->"db641ef3-2657-4ccf-9d85-8662cdb80a0f"]
}, Open  ]],

Cell["\<\
This is what the first column of our standard matrix looks like.\
\>", "Text",
 CellChangeTimes->{{3.753399220673772*^9, 3.7533992341384535`*^9}, {
  3.753399277418212*^9, 
  3.75339927756183*^9}},ExpressionUUID->"e0be7c46-8193-4cc8-b543-\
c0e4e876e340"],

Cell["For the basis of x, we get:", "Text",
 CellChangeTimes->{{3.7533975787456346`*^9, 
  3.753397583162097*^9}},ExpressionUUID->"536d35a1-2cd5-49ee-973c-\
7b53c2e45081"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basisx", "=", "x"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"basisx", ",", "x"}], "]"}], "*", "x"}]}], "Input",
 CellChangeTimes->{{3.753397585416638*^9, 3.7533975936667037`*^9}},
 CellLabel->
  "In[888]:=",ExpressionUUID->"44d142f2-849c-4b29-b324-301b1b84e88d"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.753397594353868*^9},
 CellLabel->
  "Out[889]=",ExpressionUUID->"b489a4c3-3653-4177-a9c8-003b3536c210"]
}, Open  ]],

Cell["\<\
This is what the second column of our standard matrix looks like.\
\>", "Text",
 CellChangeTimes->{{3.753399220673772*^9, 
  3.7533992753383956`*^9}},ExpressionUUID->"59509f27-d355-432b-a397-\
e246a3625d37"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "19ba15be-d5a9-4eff-a079-204a50288a01"],
 ", we get:"
}], "Text",
 CellChangeTimes->{{3.753397597730459*^9, 
  3.7533976057380047`*^9}},ExpressionUUID->"d25fdb7d-1aac-40c4-bde3-\
6780a5cb557a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basisx2", "=", 
   SuperscriptBox["x", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"basisx2", ",", "x"}], "]"}], "*", "x"}]}], "Input",
 CellChangeTimes->{{3.7533976075525165`*^9, 3.75339762101867*^9}},
 CellLabel->
  "In[890]:=",ExpressionUUID->"07f938ee-c825-43fe-8ddf-c3df2d6426bd"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.7533976214295707`*^9},
 CellLabel->
  "Out[891]=",ExpressionUUID->"9419a2f9-1179-4876-8ade-c7dc4a4d0eba"]
}, Open  ]],

Cell["\<\
This is what the third column of our standard matrix looks like.\
\>", "Text",
 CellChangeTimes->{{3.753399220673772*^9, 
  3.753399272889963*^9}},ExpressionUUID->"88a7df44-1df7-4f57-97f6-\
69dd53d24d5b"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "c09800a6-0e3a-45e7-a1c8-552e29513028"],
 ", we get:"
}], "Text",
 CellChangeTimes->{{3.7533977379937572`*^9, 
  3.753397742193557*^9}},ExpressionUUID->"817dfcdb-b59c-4c8d-8490-\
15cae6198b37"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basisx3", "=", 
   SuperscriptBox["x", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"basisx3", ",", "x"}], "]"}], "*", "x"}]}], "Input",
 CellChangeTimes->{{3.7533977441761065`*^9, 3.753397750146546*^9}},
 CellLabel->
  "In[892]:=",ExpressionUUID->"8522f98a-c558-4e30-9503-4f92add15ef6"],

Cell[BoxData[
 RowBox[{"3", " ", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.7533977506688805`*^9},
 CellLabel->
  "Out[893]=",ExpressionUUID->"6fa6c12c-1b3a-4111-a838-fb616dfdff49"]
}, Open  ]],

Cell["\<\
This is what the fourth column of our standard matrix looks like.
Putting all the columns together, we get:\
\>", "Text",
 CellChangeTimes->{{3.7533992427224536`*^9, 
  3.753399286755237*^9}},ExpressionUUID->"6c797c03-d567-4f1e-8d24-\
455c8e9cd337"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"col1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "2", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col4", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "3"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7533992904107227`*^9, 3.75339930974003*^9}, {
  3.75339942076246*^9, 3.7533994437483263`*^9}, {3.7533994745475006`*^9, 
  3.7533994795388565`*^9}},
 CellLabel->
  "In[900]:=",ExpressionUUID->"124fc33a-a156-4a98-ba52-9ae23cda3aa4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"{", 
    RowBox[{"col1", ",", "col2", ",", "col3", ",", "col4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellChangeTimes->{{3.7533994478445997`*^9, 3.7533994731942215`*^9}},
 CellLabel->
  "In[904]:=",ExpressionUUID->"03bf3c3e-a7e9-4183-939a-65b39584df9e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "2", "0"},
     {"0", "0", "0", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7533994634559402`*^9, 3.7533994813640127`*^9}},
 CellLabel->
  "Out[905]//MatrixForm=",ExpressionUUID->"4379a802-dc23-45e6-85f9-\
b263abdca375"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wk3.P3\nVerify that ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "\[ImaginaryI]"},
     {
      RowBox[{"1", "-", "\[ImaginaryI]"}], "1", "3"},
     {
      RowBox[{"-", "\[ImaginaryI]"}], "3", "1"}
    }], "\[NoBreak]", ")"}]],ExpressionUUID->
  "cce66f59-5eb2-4f3d-9f3c-ba9e5fafda3a"],
 "  is Hermitian. Find a unitary matrix which will diagonalize it  via a \
similarity transformation. Use N to get numerical values. Use Chop ( look it \
up) to get rid of roundoff error. "
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.748706247722412*^9, 3.7487062730831785`*^9}, {
   3.7487063081076765`*^9, 3.7487063092794333`*^9}, {3.748706362217067*^9, 
   3.7487063703758698`*^9}, 3.74870642250342*^9, {3.7487064726153708`*^9, 
   3.7487065536624823`*^9}, 
   3.7487073750290027`*^9},ExpressionUUID->"08597b54-de20-4f96-bdc5-\
3254f4165d5a"],

Cell["Defining a variable to represent the given matrix: ", "Text",
 CellChangeTimes->{{3.7534057801283536`*^9, 3.7534057857436275`*^9}, {
  3.7534081451866894`*^9, 
  3.7534081454599695`*^9}},ExpressionUUID->"c86a7b5b-96eb-4ee8-9213-\
b8aba70dd1d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hmat", "=", 
  RowBox[{"(", GridBox[{
     {"3", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "\[ImaginaryI]"},
     {
      RowBox[{"1", "-", "\[ImaginaryI]"}], "1", "3"},
     {
      RowBox[{"-", "\[ImaginaryI]"}], "3", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7533995597677975`*^9, 3.7533996050057836`*^9}},
 CellLabel->
  "In[1003]:=",ExpressionUUID->"ad308915-83f6-4323-a499-2f1ef3cbd5b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ",", "\[ImaginaryI]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "\[ImaginaryI]"}], ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], ",", "3", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7533996065378256`*^9, 3.75340636741383*^9},
 CellLabel->
  "Out[1003]=",ExpressionUUID->"1ddd2ecb-7599-4e4f-93f0-9318791382d0"]
}, Open  ]],

Cell["\<\
We can verify that the given matrix is Hermitian by equating it to its \
conjugate transpose:\
\>", "Text",
 CellChangeTimes->{{3.753405791463601*^9, 3.753405791690998*^9}, {
  3.753405879679738*^9, 
  3.7534058963212333`*^9}},ExpressionUUID->"971de677-7c57-40e1-a450-\
9a766a742148"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hmatct", "=", 
   RowBox[{"ConjugateTranspose", "[", "Hmat", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Hmatct", "]"}]}], "Input",
 CellChangeTimes->{{3.753405901818515*^9, 3.753405918679815*^9}},
 CellLabel->
  "In[1004]:=",ExpressionUUID->"c9bb44bc-9486-4128-8ba9-27864dda491e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "\[ImaginaryI]"},
     {
      RowBox[{"1", "-", "\[ImaginaryI]"}], "1", "3"},
     {
      RowBox[{"-", "\[ImaginaryI]"}], "3", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753405919383357*^9, 3.7534063675794187`*^9},
 CellLabel->
  "Out[1005]//MatrixForm=",ExpressionUUID->"909e69cb-ae21-4c92-a5c0-\
f19a4cca2e60"]
}, Open  ]],

Cell["And we do see that this matrix is Hermitian:", "Text",
 CellChangeTimes->{{3.7534078596289787`*^9, 3.7534078721195483`*^9}, {
  3.836158261656247*^9, 
  3.8361582620207386`*^9}},ExpressionUUID->"10f6194d-53fc-4ecc-b9a4-\
fa9b88ccda41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hmatct", "\[Equal]", "Hmat"}]], "Input",
 CellChangeTimes->{{3.7534078520501995`*^9, 3.753407853966112*^9}},
 CellLabel->
  "In[1046]:=",ExpressionUUID->"a5bf7ce5-12bb-46de-a424-be4590d69984"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.753407854453774*^9},
 CellLabel->
  "Out[1046]=",ExpressionUUID->"ac770d54-9cd4-4eb4-a23d-3b707ca3f410"]
}, Open  ]],

Cell["\<\
We can also verify that the matrix is Hermitian by equating its transpose and \
its conjugate:\
\>", "Text",
 CellChangeTimes->{{3.75340819148289*^9, 
  3.7534082073085756`*^9}},ExpressionUUID->"a432fc64-f698-4cf9-87fd-\
ebd21e399d16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Conjugate", "[", "Hmat", "]"}], "\[Equal]", 
  RowBox[{"Transpose", "[", "Hmat", "]"}]}]], "Input",
 CellChangeTimes->{{3.7534082109329324`*^9, 3.7534082212662926`*^9}},
 CellLabel->
  "In[1047]:=",ExpressionUUID->"e85c0cf0-b1c5-4ba4-a4bf-1cf88f80af47"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.753408221881645*^9},
 CellLabel->
  "Out[1047]=",ExpressionUUID->"a4d76995-5204-4819-95f3-363833f410b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Normalize", ",", 
        RowBox[{"Eigenvectors", "[", "Hmat", "]"}]}], "]"}], "//", 
      "Transpose"}], "//", "N"}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "U", "]"}]}], "Input",
 CellChangeTimes->{{3.7533996263605194`*^9, 3.7533996381642184`*^9}, {
  3.753405221078495*^9, 3.753405318047531*^9}},
 CellLabel->
  "In[1006]:=",ExpressionUUID->"160b5e9a-e09a-48bf-a6fa-06c003100298"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.23047309535312388`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5518261215189318`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.14866139416430108`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.005274995263569085`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.4783680552226812`"}], "-", 
       RowBox[{"0.6256245295544992`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.5799372529088838`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.07682436511770797`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.7095781585574458`"}], "+", 
       RowBox[{"0.04955379805476703`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.35551066904234824`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.1594560184075604`", " ", "\[ImaginaryI]"}]}]},
     {"0.5478511508981992`", "0.6869608593702171`", "0.4774347014543989`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.753405257136009*^9, {3.753405297601567*^9, 3.753405318562578*^9}, 
   3.7534053806595716`*^9, 3.7534063676163263`*^9},
 CellLabel->
  "Out[1007]//MatrixForm=",ExpressionUUID->"da708adb-6485-429d-868c-\
4072bfc6e319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uct", "=", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "U", "]"}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Uct", "]"}]}], "Input",
 CellChangeTimes->{{3.753405091850932*^9, 3.75340509309485*^9}, {
  3.7534053255831842`*^9, 3.753405334663617*^9}, {3.75340536548421*^9, 
  3.753405366476523*^9}},
 CellLabel->
  "In[1008]:=",ExpressionUUID->"33197104-9a77-45b6-84fb-a58e3eaff784"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.23047309535312388`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5518261215189318`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5799372529088838`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.07682436511770797`", " ", "\[ImaginaryI]"}]}], 
      "0.5478511508981992`"},
     {
      RowBox[{"0.14866139416430108`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.005274995263569085`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.7095781585574458`"}], "-", 
       RowBox[{"0.04955379805476703`", " ", "\[ImaginaryI]"}]}], 
      "0.6869608593702171`"},
     {
      RowBox[{
       RowBox[{"-", "0.4783680552226812`"}], "+", 
       RowBox[{"0.6256245295544992`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.35551066904234824`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.1594560184075604`", " ", "\[ImaginaryI]"}]}], 
      "0.4774347014543989`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753405335223132*^9, 3.7534053675002937`*^9, 
  3.7534063676532297`*^9},
 CellLabel->
  "Out[1009]//MatrixForm=",ExpressionUUID->"83fd25dc-0aeb-4c2c-a272-\
16d1ead35791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diag", "=", 
   RowBox[{
    RowBox[{"Uct", ".", "Hmat", ".", "U"}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "diag", "]"}]}], "Input",
 CellChangeTimes->{{3.753405337957805*^9, 3.7534053561105623`*^9}, {
  3.753405399801277*^9, 3.7534054034041348`*^9}},
 CellLabel->
  "In[1010]:=",ExpressionUUID->"247d6a97-9be6-42a0-a992-12bc1787a15a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5.182957134412246`", "0", "0"},
     {"0", 
      RowBox[{"-", "2.106449868035123`"}], "0"},
     {"0", "0", "1.9234927336228784`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7534053489815273`*^9, 3.7534054040344453`*^9}, {
  3.753406363218072*^9, 3.7534063676841073`*^9}},
 CellLabel->
  "Out[1011]//MatrixForm=",ExpressionUUID->"ed43c032-219a-4b35-9eab-\
5bee23839df6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diagonalization Example:", "Subsection",
 CellChangeTimes->{{3.753406489622518*^9, 
  3.7534064943957596`*^9}},ExpressionUUID->"d188c799-550c-4719-868a-\
ffeec3f957ff"],

Cell["Defining the given matrix: ", "Text",
 CellChangeTimes->{{3.7534070119370136`*^9, 
  3.753407014437332*^9}},ExpressionUUID->"982bd867-1296-4eea-9b72-\
be1de1ab79b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellChangeTimes->{{3.7534064975743*^9, 3.753406518332759*^9}},
 CellLabel->
  "In[1013]:=",ExpressionUUID->"c2e16050-5dd3-4044-8703-b37123770070"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "3"}]},
     {"3", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "1"}], "1", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753406513978421*^9, 3.753406518853368*^9}},
 CellLabel->
  "Out[1014]//MatrixForm=",ExpressionUUID->"55cf1c62-9e76-4a95-80d1-\
6218fdaeb803"]
}, Open  ]],

Cell["\<\
Using Eigenvectors[] and Transpose[] to generate a matrix U whose columns are \
the eigenvectors of the given matrix: \
\>", "Text",
 CellChangeTimes->{{3.7534070187238693`*^9, 
  3.753407037356077*^9}},ExpressionUUID->"39bfcadf-9bb8-423c-a8de-\
08534b51f115"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "mat", "]"}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "U", "]"}]}], "Input",
 CellChangeTimes->{{3.753406522117668*^9, 3.7534065406600676`*^9}},
 CellLabel->
  "In[1016]:=",ExpressionUUID->"0cf83ec8-3ef2-4ddb-ac8d-e0237bd50f64"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "3"}], "1", "1"},
     {
      RowBox[{"-", "3"}], "0", "1"},
     {"1", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753406535698331*^9, 3.7534065412006626`*^9}},
 CellLabel->
  "Out[1017]//MatrixForm=",ExpressionUUID->"4b3ad0e1-cf8d-47d5-a815-\
17d0378b3ea8"]
}, Open  ]],

Cell["Using Inverse[] to find the inverse of the given matrix: ", "Text",
 CellChangeTimes->{{3.75340704163466*^9, 
  3.7534070517735195`*^9}},ExpressionUUID->"7bd4e92a-4c5a-47cc-a6e3-\
13617440e682"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ut", "=", 
   RowBox[{"Inverse", "[", "U", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Ut", "]"}]}], "Input",
 CellChangeTimes->{{3.7534068855060687`*^9, 3.7534069283116198`*^9}},
 CellLabel->
  "In[1031]:=",ExpressionUUID->"80d5c1e6-b1f9-4c03-a1c4-0364163ee93f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "1", "1"},
     {"1", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{"-", "3"}], "4", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7534069002775373`*^9, 3.7534069424238954`*^9}},
 CellLabel->
  "Out[1032]//MatrixForm=",ExpressionUUID->"bf2cb2a7-81e0-4a0c-ada0-\
3c08ea12dbbb"]
}, Open  ]],

Cell[TextData[{
 "Applying the diagonalization formula: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{
     SuperscriptBox["U", 
      RowBox[{"-", "1"}]], "M", " ", "U"}]}], TraditionalForm]],
  ExpressionUUID->"93d4e09f-282a-4978-a7f8-da66a493541d"]
}], "Text",
 CellChangeTimes->{{3.75340705654276*^9, 3.7534070604892073`*^9}, {
  3.7534071346642475`*^9, 
  3.7534071427147264`*^9}},ExpressionUUID->"6973b072-6c37-4a87-9bb5-\
aa218057e6a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diag", "=", 
   RowBox[{"Ut", ".", "mat", ".", "U"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7534069077046843`*^9, 3.7534069573130517`*^9}, {
  3.7534069898471155`*^9, 3.75340699358313*^9}, {3.753407104245228*^9, 
  3.753407104696018*^9}},
 CellLabel->
  "In[1042]:=",ExpressionUUID->"0410e271-df8c-4733-a64a-ed1166072bb8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753406910512176*^9, 3.7534069580890017`*^9}, 
   3.753406994058846*^9, 3.7534071054260645`*^9},
 CellLabel->
  "Out[1043]//MatrixForm=",ExpressionUUID->"741d7ff7-d99d-47e4-8915-\
2ba2a0a59107"]
}, Open  ]],

Cell["\<\
The entries of our new diagonal matrix ought to match the eigenvalues of the \
given matrix: \
\>", "Text",
 CellChangeTimes->{{3.7534070671703777`*^9, 
  3.7534070939497747`*^9}},ExpressionUUID->"d08f2d32-6f0d-4130-9617-\
ac6a3db9735d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.7534070030986805`*^9, 3.753407005242943*^9}},
 CellLabel->
  "In[1041]:=",ExpressionUUID->"b2688039-36d1-4b8b-9c0c-0ac67c24c32f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.753407005862254*^9},
 CellLabel->
  "Out[1041]=",ExpressionUUID->"1ceade56-6dd5-4225-80a1-882b769b60ac"]
}, Open  ]],

Cell[TextData[{
 "We can apply the reverse of the formula to obtain original matrix by doing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", 
    RowBox[{"U", " ", "D", " ", 
     SuperscriptBox["U", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "dd37c0c5-60fc-4486-97a6-2f34ac96cd46"]
}], "Text",
 CellChangeTimes->{{3.7534071100218153`*^9, 
  3.7534071605071216`*^9}},ExpressionUUID->"9fcea073-c2f6-41d8-a363-\
83b297be89cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ogmat", "=", 
   RowBox[{"U", ".", "diag", ".", "Ut"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ogmat", "]"}]}], "Input",
 CellChangeTimes->{{3.753407162948635*^9, 3.7534071817104683`*^9}},
 CellLabel->
  "In[1044]:=",ExpressionUUID->"921c6a98-27ba-4e81-950c-e856543d6d3a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "3"}]},
     {"3", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "1"}], "1", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753407182250019*^9},
 CellLabel->
  "Out[1045]//MatrixForm=",ExpressionUUID->"6af68a1b-d893-42aa-a2ee-\
44bc99bfa5b7"]
}, Open  ]],

Cell[TextData[{
 "We see that the diagonalization formula: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{
     SuperscriptBox["U", 
      RowBox[{"-", "1"}]], "M", " ", "U"}]}], TraditionalForm]],
  ExpressionUUID->"f119868c-140f-48fd-81c3-19a45ed81f34"],
 " works for D is a diagonal matrix and M is a \
\[OpenCurlyDoubleQuote]diagonalizable\[CloseCurlyDoubleQuote] matrix."
}], "Text",
 CellChangeTimes->{{3.75340766144882*^9, 
  3.7534076908662167`*^9}},ExpressionUUID->"b792d043-9901-4b17-a985-\
d904efa48033"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"52d1c938-ac34-49c0-a0c2-46c009ae4c22"],

Cell[TextData[{
 "\n\n",
 StyleBox["Week 4 Homework: ",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7534082750867414`*^9, 3.75340827969345*^9}, {
  3.753409662600548*^9, 3.7534096628159714`*^9}, {3.7534933765073214`*^9, 
  3.753493376657843*^9}},ExpressionUUID->"b49264da-2a6d-4a84-8a45-\
979962e4668b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P3 .12 .16
Find the characteristic frequencies and characteristic modes of vibration for \
the system of masses and springs as shown in the figure.\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.749063356813159*^9, 3.74906337230458*^9}, {
   3.749063477569994*^9, 3.749063530889682*^9}, 
   3.7490641827246594`*^9},ExpressionUUID->"f15e1195-9b4e-4e33-bd1a-\
8b65b08b9841"],

Cell[BoxData[
 GraphicsBox[{
   GeometricTransformationBox[{
     LineBox[{{0, 0}, {1.5, 0}, {1.5, 4}, {0, 4}, {0, 0}}], 
     LineBox[{{0, 0.}, {1.5, 1.5}}], LineBox[{{0, 0.3}, {1.5, 1.8}}], 
     LineBox[{{0, 0.6}, {1.5, 2.1}}], 
     LineBox[{{0, 0.8999999999999999}, {1.5, 2.4}}], 
     LineBox[{{0, 1.2}, {1.5, 2.7}}], LineBox[{{0, 1.5}, {1.5, 3.}}], 
     LineBox[{{0, 1.7999999999999998`}, {1.5, 3.3}}], 
     LineBox[{{0, 2.1}, {1.5, 3.6}}], LineBox[{{0, 2.4}, {1.5, 3.9}}], 
     LineBox[{{0, 2.6999999999999997`}, {1.3000000000000003`, 4.}}], 
     LineBox[{{0, 3.}, {1., 4.}}], 
     LineBox[{{0, 3.3}, {0.7000000000000002, 4.}}], 
     LineBox[{{0, 3.5999999999999996`}, {0.40000000000000036`, 4.}}], 
     LineBox[{{0, 3.9}, {0.10000000000000009`, 4.}}], 
     LineBox[{{1.5, 1.2}, {0.30000000000000004`, 0}}], 
     LineBox[{{1.5, 0.9}, {0.6, 0}}], 
     LineBox[{{1.5, 0.6000000000000001}, {0.8999999999999998, 0}}], 
     LineBox[{{1.5, 0.30000000000000004`}, {1.1999999999999997`, 0}}], 
     LineBox[{{1.5, 0}, {1.4999999999999998`, 0}}]}, {-1.5, -2}], 
   LineBox[{{0, 0}, {3, 0}, {3.25, 0.5}, {3.75, -0.5}, {4., 0}, {4., 0}, {
     4.25, 0.5}, {4.75, -0.5}, {5., 0}, {5., 0}, {5.25, 0.5}, {5.75, -0.5}, {
     6., 0}, {6., 0}, {6.25, 0.5}, {6.75, -0.5}, {7., 0}, {7., 0}, {7.25, 
     0.5}, {7.75, -0.5}, {8., 0}, {11., 0}}], 
   GeometricTransformationBox[
    LineBox[{{0, 0}, {3, 0}, {3.25, 0.5}, {3.75, -0.5}, {4., 0}, {4., 0}, {
      4.25, 0.5}, {4.75, -0.5}, {5., 0}, {5., 0}, {5.25, 0.5}, {5.75, -0.5}, {
      6., 0}, {6., 0}, {6.25, 0.5}, {6.75, -0.5}, {7., 0}, {7., 0}, {7.25, 
      0.5}, {7.75, -0.5}, {8., 0}, {11., 0}}], {10, 0}], 
   GeometricTransformationBox[
    LineBox[{{0, 0}, {3, 0}, {3.25, 0.5}, {3.75, -0.5}, {4., 0}, {4., 0}, {
      4.25, 0.5}, {4.75, -0.5}, {5., 0}, {5., 0}, {5.25, 0.5}, {5.75, -0.5}, {
      6., 0}, {6., 0}, {6.25, 0.5}, {6.75, -0.5}, {7., 0}, {7., 0}, {7.25, 
      0.5}, {7.75, -0.5}, {8., 0}, {11., 0}}], {20, 0}], 
   GeometricTransformationBox[{
     LineBox[{{0, 0}, {1.5, 0}, {1.5, 4}, {0, 4}, {0, 0}}], 
     LineBox[{{0, 0.}, {1.5, 1.5}}], LineBox[{{0, 0.3}, {1.5, 1.8}}], 
     LineBox[{{0, 0.6}, {1.5, 2.1}}], 
     LineBox[{{0, 0.8999999999999999}, {1.5, 2.4}}], 
     LineBox[{{0, 1.2}, {1.5, 2.7}}], LineBox[{{0, 1.5}, {1.5, 3.}}], 
     LineBox[{{0, 1.7999999999999998`}, {1.5, 3.3}}], 
     LineBox[{{0, 2.1}, {1.5, 3.6}}], LineBox[{{0, 2.4}, {1.5, 3.9}}], 
     LineBox[{{0, 2.6999999999999997`}, {1.3000000000000003`, 4.}}], 
     LineBox[{{0, 3.}, {1., 4.}}], 
     LineBox[{{0, 3.3}, {0.7000000000000002, 4.}}], 
     LineBox[{{0, 3.5999999999999996`}, {0.40000000000000036`, 4.}}], 
     LineBox[{{0, 3.9}, {0.10000000000000009`, 4.}}], 
     LineBox[{{1.5, 1.2}, {0.30000000000000004`, 0}}], 
     LineBox[{{1.5, 0.9}, {0.6, 0}}], 
     LineBox[{{1.5, 0.6000000000000001}, {0.8999999999999998, 0}}], 
     LineBox[{{1.5, 0.30000000000000004`}, {1.1999999999999997`, 0}}], 
     LineBox[{{1.5, 0}, {1.4999999999999998`, 0}}]}, {30, -2}], InsetBox[
    StyleBox["\<\"4k\"\>",
     StripOnInput->False,
     FontSize->14], {5, 1.5}], InsetBox[
    StyleBox["\<\"2k\"\>",
     StripOnInput->False,
     FontSize->14], {15, 1.5}], 
   {PointSize[0.02], PointBox[{10, 0}], PointBox[{20, 0}]}, InsetBox[
    StyleBox["\<\"m\"\>",
     StripOnInput->False,
     FontSize->14], {11, 1}], InsetBox[
    StyleBox["\<\"m\"\>",
     StripOnInput->False,
     FontSize->14], {20, 1}], InsetBox[
    StyleBox["\<\"k\"\>",
     StripOnInput->False,
     FontSize->14], {25, 1.5}], LineBox[{{10, -1}, {10, -2}}], 
   ArrowBox[{{10, -1.5}, {14, -1.5}}], LineBox[{{20, -1}, {20, -2}}], 
   ArrowBox[{{20, -1.5}, {24, -1.5}}], InsetBox[
    StyleBox["\<\"x\"\>",
     StripOnInput->False,
     FontSize->14], {12, -2.5}], InsetBox[
    StyleBox["\<\"y\"\>",
     StripOnInput->False,
     FontSize->14], {22, -2.5}]},
  Background->GrayLevel[1],
  ImageSize->{Automatic, 62.889163636363634`}]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.748625274850115*^9, {3.74862531997688*^9, 3.7486253748891587`*^9}, 
   3.748625419248418*^9, {3.7486255639439735`*^9, 3.7486256301254787`*^9}, 
   3.74862571802777*^9, 3.7486257605362864`*^9, {3.748625818017496*^9, 
   3.748625827587229*^9}, 3.748625870494467*^9, 3.7486259198480515`*^9, {
   3.748625963783625*^9, 3.7486259852590485`*^9}, 3.7490639776792784`*^9, {
   3.7490640839513254`*^9, 3.7490641041959844`*^9}, 3.7490641592885*^9, 
   3.7494766905006905`*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"21bcae33-6b93-481e-a89a-8d94e0b93b11"],

Cell["\<\
This is our expression of the potential energy with time dependence on x and \
y:\
\>", "Text",
 CellChangeTimes->{{3.753409640336071*^9, 
  3.753409657337619*^9}},ExpressionUUID->"f7f4ce1a-ada9-415e-80be-\
0e2627a8c334"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pot", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["k", "1"], 
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["k", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"x", "[", "t", "]"}]}], "+", 
         RowBox[{"y", "[", "t", "]"}]}], ")"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["k", "3"], 
      SuperscriptBox[
       RowBox[{"y", "[", "t", "]"}], "2"]}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["k", "1"], "\[Rule]", 
      RowBox[{"4", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "2"], "\[Rule]", 
      RowBox[{"2", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "3"], "\[Rule]", 
      RowBox[{"1", "k"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7534082946713743`*^9, 3.7534083075120473`*^9}, {
  3.753409245434137*^9, 3.753409325451206*^9}},
 CellLabel->
  "In[1048]:=",ExpressionUUID->"34232b8c-2cf1-4412-a85a-e98a3fcaa749"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "k", " ", 
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "k", " ", 
   SuperscriptBox[
    RowBox[{"y", "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"k", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "[", "t", "]"}]}], "+", 
      RowBox[{"y", "[", "t", "]"}]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.7534093275744867`*^9},
 CellLabel->
  "Out[1048]=",ExpressionUUID->"6a2de006-99d2-4a90-ad4d-f183e93c1f43"]
}, Open  ]],

Cell["\<\
To write the equations of motion, we take the negative derivative for the \
potential energy with respect to distance.
The motion in x is:\
\>", "Text",
 CellChangeTimes->{{3.7534096659186807`*^9, 3.753409681573824*^9}, {
  3.7534097897820644`*^9, 3.753409790381411*^9}, {3.753409833804325*^9, 
  3.753409846312894*^9}},ExpressionUUID->"aca3ef38-2652-430e-adc7-\
a607056938b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xmot", "=", 
  RowBox[{
   RowBox[{"m", " ", 
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"-", 
     RowBox[{"D", "[", 
      RowBox[{"pot", ",", 
       RowBox[{"x", "[", "t", "]"}]}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7534097551865416`*^9, 3.7534097591459703`*^9}, 
   3.7534098645899997`*^9, {3.7534101553120527`*^9, 3.753410158985233*^9}, {
   3.753410232129715*^9, 3.753410255521139*^9}},
 CellLabel->
  "In[1064]:=",ExpressionUUID->"9764ec53-a133-4228-bbdf-1ec92ca10572"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"2", " ", "k", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      RowBox[{"x", "[", "t", "]"}]}], "+", 
     RowBox[{"y", "[", "t", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.7534097598291264`*^9, 3.7534098688476133`*^9, 3.753410170317933*^9, {
   3.753410219809616*^9, 3.753410256125554*^9}},
 CellLabel->
  "Out[1064]=",ExpressionUUID->"d867715d-2fd7-4d09-a733-6951a6917993"]
}, Open  ]],

Cell["The motion in y is: ", "Text",
 CellChangeTimes->{{3.7534098511828337`*^9, 
  3.7534098704573517`*^9}},ExpressionUUID->"0c730ab2-55c9-49dd-9db9-\
08ed9c894a5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ymot", "=", 
  RowBox[{
   RowBox[{"m", " ", 
    RowBox[{
     RowBox[{"y", "''"}], "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"-", 
     RowBox[{"D", "[", 
      RowBox[{"pot", ",", 
       RowBox[{"y", "[", "t", "]"}]}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.75340976206711*^9, 3.7534097684600616`*^9}, 
   3.7534098666894245`*^9, {3.7534101620022235`*^9, 3.753410166737541*^9}, {
   3.7534102592362604`*^9, 3.7534102650636654`*^9}},
 CellLabel->
  "In[1065]:=",ExpressionUUID->"f7aa00bb-351a-4c9d-8ce1-fc6f08f0e4c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"k", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"x", "[", "t", "]"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"y", "[", "t", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7534097691322536`*^9, 3.7534098738562546`*^9, 
  3.7534101680829115`*^9, 3.753410265824625*^9},
 CellLabel->
  "Out[1065]=",ExpressionUUID->"1d635e6a-d527-4c4d-9917-3080e63e3177"]
}, Open  ]],

Cell["We can put these equations of motion in a list: ", "Text",
 CellChangeTimes->{{3.7534101014009132`*^9, 
  3.7534101116275663`*^9}},ExpressionUUID->"74267d8e-4bac-4b26-ab59-\
a5627a75aa1a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqmot", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xmot", ",", "ymot"}], "}"}], "//", "Expand"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "eqmot", "]"}]}], "Input",
 CellChangeTimes->{{3.7534101151401834`*^9, 3.7534101292913456`*^9}, {
  3.7534124297876835`*^9, 3.7534124307191505`*^9}},
 CellLabel->
  "In[1078]:=",ExpressionUUID->"a3a52fc4-dd93-4e64-9709-bb961935be24"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "k", " ", 
         RowBox[{"x", "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "k", " ", 
         RowBox[{"y", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
       RowBox[{
        RowBox[{"2", " ", "k", " ", 
         RowBox[{"x", "[", "t", "]"}]}], "-", 
        RowBox[{"3", " ", "k", " ", 
         RowBox[{"y", "[", "t", "]"}]}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753410119709923*^9, 3.7534101300692616`*^9}, 
   3.753410172299636*^9, 3.7534102677225533`*^9, 3.753412431314558*^9},
 CellLabel->
  "Out[1079]//TableForm=",ExpressionUUID->"7203637a-17b5-40aa-8583-\
085e17d0877d"]
}, Open  ]],

Cell["\<\
We can confirm if these are the right equations by intuitively creating the \
force equations ourselves: \
\>", "Text",
 CellChangeTimes->{{3.753410603857849*^9, 
  3.753410635218006*^9}},ExpressionUUID->"972fc75d-2929-4caa-87f2-\
8d58e0a0fcb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xmotguess", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{
      RowBox[{"x", "''"}], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["k", "1"]}], 
       RowBox[{"x", "[", "t", "]"}]}], "-", 
      RowBox[{
       SubscriptBox["k", "2"], 
       RowBox[{"x", "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["k", "2"], 
       RowBox[{"y", "[", "t", "]"}]}]}], ")"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["k", "1"], "\[Rule]", 
      RowBox[{"4", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "2"], "\[Rule]", 
      RowBox[{"2", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "3"], "\[Rule]", 
      RowBox[{"1", "k"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7534106384603367`*^9, 3.753410658624466*^9}, {
   3.7534107003352747`*^9, 3.753410711626077*^9}, {3.753410744097278*^9, 
   3.7534108208909636`*^9}, {3.7534112373616657`*^9, 3.7534112713398523`*^9}, 
   3.753411404960587*^9, {3.7534114645812187`*^9, 3.7534114672839575`*^9}},
 CellLabel->
  "In[1073]:=",ExpressionUUID->"8c48cb14-7498-4e94-96c8-53b8531c3bb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "6"}], " ", "k", " ", 
    RowBox[{"x", "[", "t", "]"}]}], "+", 
   RowBox[{"2", " ", "k", " ", 
    RowBox[{"y", "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.7534108215860987`*^9, 3.7534114062122717`*^9, 
  3.7534114679182744`*^9},
 CellLabel->
  "Out[1073]=",ExpressionUUID->"0971c401-c1ef-4a46-bf7a-c11bac5f9f75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ymotguess", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["k", "2"], 
       RowBox[{"x", "[", "t", "]"}]}], "-", 
      RowBox[{
       SubscriptBox["k", "2"], 
       RowBox[{"y", "[", "t", "]"}]}], "-", 
      RowBox[{
       SubscriptBox["k", "3"], 
       RowBox[{"y", "[", "t", "]"}]}]}], ")"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["k", "1"], "\[Rule]", 
      RowBox[{"4", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "2"], "\[Rule]", 
      RowBox[{"2", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "3"], "\[Rule]", 
      RowBox[{"1", "k"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7534114730784655`*^9, 3.7534115274760323`*^9}},
 CellLabel->
  "In[1075]:=",ExpressionUUID->"2dca2ebf-44ca-42ff-9f0d-c179c1b3bdf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"2", " ", "k", " ", 
    RowBox[{"x", "[", "t", "]"}]}], "-", 
   RowBox[{"3", " ", "k", " ", 
    RowBox[{"y", "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7534115123853755`*^9, 3.7534115297120514`*^9}},
 CellLabel->
  "Out[1075]=",ExpressionUUID->"f2b5c3cb-0f88-4f96-a61e-de403371b05b"]
}, Open  ]],

Cell[TextData[{
 "Above, we do see that our guess matches the derivative of the potential \
energy. We generated these guesses\nby focusing on just one mass, then seeing \
the direction and magnitude of each spring force ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"F", "=", 
     RowBox[{
      RowBox[{"\[PlusMinus]", "k"}], " ", "x"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"4f08ce29-1d20-40d0-8f1e-191cb77bdfec"],
 " where\nx is just the displacement of either mass. \n\nPlugging in periodic \
solutions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], " ", "and", " ", 
    RowBox[{"y", "[", "t", "]"}]}], TraditionalForm]],ExpressionUUID->
  "0892a15f-9fbc-463d-b588-2ffc723f3406"],
 " with the same time dependence, but different amplitudes.\nIn this case, we \
are asked for our trial solutions to assume the form of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]], ":"}],
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "fdfb933c-fb49-4eaf-a757-deaeb7c85c5d"]
}], "Text",
 CellChangeTimes->{{3.7534102818268423`*^9, 3.7534103496644993`*^9}, {
  3.753411538443741*^9, 3.753411619879888*^9}, {3.753411893456426*^9, 
  3.7534119174552665`*^9}, {3.7534119556950617`*^9, 
  3.753411975591869*^9}},ExpressionUUID->"35b03ebe-3cdf-4ad3-b749-\
2b10ae8622e4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqmot2", "=", 
   RowBox[{"eqmot", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"t", ",", 
         RowBox[{"Ax", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]]}]}], "]"}]}],
       ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"t", ",", 
         RowBox[{"Ay", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]]}]}], 
        "]"}]}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "eqmot2", "]"}]}], "Input",
 CellChangeTimes->{{3.7534103558300076`*^9, 3.7534103690616198`*^9}, {
  3.753410427411626*^9, 3.753410455786764*^9}},
 CellLabel->
  "In[1080]:=",ExpressionUUID->"69d0a995-7763-4663-9a73-8157f5ce6755"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ax"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "Ax", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "k"}], 
        "+", 
        RowBox[{"2", " ", "Ay", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", 
         "k"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ay"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{"2", " ", "Ax", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "k"}], 
        "-", 
        RowBox[{"3", " ", "Ay", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", 
         "k"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753410446558433*^9, 3.7534104564649396`*^9}, 
   3.753412437305541*^9},
 CellLabel->
  "Out[1081]//TableForm=",ExpressionUUID->"f962c748-1b5b-404e-b55e-\
0686d157284e"]
}, Open  ]],

Cell[TextData[{
 "We can clean up these equations a little bit by doing the substitution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[Rule]", 
    RowBox[{"0", ":"}]}], TraditionalForm]],ExpressionUUID->
  "269c1dea-f409-4f4b-8e6a-4981f983cafc"]
}], "Text",
 CellChangeTimes->{{3.7534121250034947`*^9, 
  3.7534121390759125`*^9}},ExpressionUUID->"448d1395-795b-4b1c-9765-\
8f450bac41e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqmot3", "=", 
   RowBox[{"eqmot2", "/.", 
    RowBox[{"t", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "eqmot3", "]"}]}], "Input",
 CellChangeTimes->{{3.7534121426533346`*^9, 3.753412149421218*^9}},
 CellLabel->
  "In[1082]:=",ExpressionUUID->"d7c73f5f-6c28-434d-b11a-bc2afdd5401c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ax"}], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "Ax", " ", "k"}], "+", 
        RowBox[{"2", " ", "Ay", " ", "k"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ay"}], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{"2", " ", "Ax", " ", "k"}], "-", 
        RowBox[{"3", " ", "Ay", " ", "k"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753412150013627*^9, 3.7534124405748053`*^9},
 CellLabel->
  "Out[1083]//TableForm=",ExpressionUUID->"58d0bb6d-c033-47cd-8fa9-\
389b7dd35c1d"]
}, Open  ]],

Cell[TextData[{
 "In order to solve for \[Omega], we can generate a coefficient matrix for Ax \
and Ay. \nWe can rewrite the above two equations in matrix form: \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"m", " ", 
    SuperscriptBox["\[Omega]", "2"], 
    RowBox[{"(", GridBox[{
       {"Ax"},
       {"Ay"}
      }], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"6", "k"}], 
        RowBox[{
         RowBox[{"-", "2"}], "k"}]},
       {
        RowBox[{
         RowBox[{"-", "2"}], "k"}], 
        RowBox[{"3", "k"}]}
      }], ")"}], 
    RowBox[{"(", GridBox[{
       {"Ax"},
       {"Ay"}
      }], ")"}]}]}]],ExpressionUUID->"85161d6b-685a-48dc-9cd9-fa98b9348fd5"],
 "\nMoving the left side to the right side:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{"6", "k"}], 
         RowBox[{
          RowBox[{"-", "2"}], "k"}]},
        {
         RowBox[{
          RowBox[{"-", "2"}], "k"}], 
         RowBox[{"3", "k"}]}
       }], ")"}], 
     RowBox[{"(", GridBox[{
        {"Ax"},
        {"Ay"}
       }], ")"}]}], "-", 
    RowBox[{"m", " ", 
     SuperscriptBox["\[Omega]", "2"], 
     RowBox[{"(", GridBox[{
        {"Ax"},
        {"Ay"}
       }], ")"}]}]}], "=", "0"}]],ExpressionUUID->
  "b45d7fee-8d11-45d7-b2fc-ebb83c7f9eb4"],
 "\nSimplifying:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         RowBox[{"6", "k"}], "-", 
         RowBox[{"m", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "k"}]},
       {
        RowBox[{
         RowBox[{"-", "2"}], "k"}], 
        RowBox[{
         RowBox[{"3", "k"}], "-", 
         RowBox[{"m", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}]}
      }], ")"}], 
    RowBox[{"(", GridBox[{
       {"Ax"},
       {"Ay"}
      }], ")"}]}], "=", "0"}]],ExpressionUUID->
  "4c0579b0-6b6d-477e-97d0-b8a19f85e872"],
 "\nDefining a variable to represent our coefficient matrix: "
}], "Text",
 CellChangeTimes->{{3.753412677082526*^9, 3.7534126795389214`*^9}, {
  3.753412742601326*^9, 3.75341284039958*^9}, {3.753412928299574*^9, 
  3.753412955598596*^9}, {3.753413048359846*^9, 3.7534131014533453`*^9}, {
  3.7534131730139914`*^9, 3.7534131730139914`*^9}, {3.7534137589094486`*^9, 
  3.7534138251323996`*^9}, {3.753413906142838*^9, 
  3.753413934692628*^9}},ExpressionUUID->"7b03b03a-d054-4189-9cf2-\
e082a5f7edc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"6", "k"}], "-", 
        RowBox[{"m", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], "k"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], ",", 
       RowBox[{
        RowBox[{"3", "k"}], "-", 
        RowBox[{"m", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellChangeTimes->{{3.7534131089243636`*^9, 3.753413109279382*^9}, {
  3.7534131426930833`*^9, 3.7534131782769604`*^9}, {3.753413584792346*^9, 
  3.7534135872857127`*^9}, {3.7534139505421534`*^9, 3.7534139610400763`*^9}},
 CellLabel->
  "In[1092]:=",ExpressionUUID->"66fa8fcc-c554-4d1b-829c-afdb31756703"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"6", " ", "k"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["\[Omega]", "2"]}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "k"}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", "k"}], 
      RowBox[{
       RowBox[{"3", " ", "k"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["\[Omega]", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753413178838443*^9, 3.753413587783348*^9, 
  3.7534139629210625`*^9, 3.7534141194773197`*^9},
 CellLabel->
  "Out[1093]//MatrixForm=",ExpressionUUID->"2c50e5e7-4fb9-4692-aaf3-\
5c904bc9f10b"]
}, Open  ]],

Cell["Solving for the eigenvalues, we get: ", "Text",
 CellChangeTimes->{{3.753414137734514*^9, 3.7534141647672167`*^9}, {
  3.7534147009608593`*^9, 
  3.753414727236654*^9}},ExpressionUUID->"ea183fae-9034-467e-aa5a-\
8fdf8a9ba5fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"efreq", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "mat", "]"}], "\[Equal]", "0"}], ",", "\[Omega]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7534139975975113`*^9, 3.7534140130631647`*^9}, {
  3.753414060901417*^9, 3.7534141263499403`*^9}},
 CellLabel->
  "In[1095]:=",ExpressionUUID->"eef84c47-9cd3-44aa-a4ec-272d24c292c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox["k"]}], 
       SqrtBox["m"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     FractionBox[
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox["k"]}], 
      SqrtBox["m"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SqrtBox["7"], " ", 
        SqrtBox["k"]}], 
       SqrtBox["m"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     FractionBox[
      RowBox[{
       SqrtBox["7"], " ", 
       SqrtBox["k"]}], 
      SqrtBox["m"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7534140136556253`*^9, 3.753414062868168*^9, {3.7534141169540358`*^9, 
   3.75341412695234*^9}},
 CellLabel->
  "Out[1095]=",ExpressionUUID->"f8f8b3c1-9e8d-4425-878b-65e29f384cb8"]
}, Open  ]],

Cell["\<\
The positive values are the characteristic frequency of vibration. Each \
frequency is associated with a mode of vibration, 
which can be found by its null space or eigenvector: \
\>", "Text",
 CellChangeTimes->{{3.7534147306684723`*^9, 3.753414777319745*^9}, 
   3.753414862825141*^9},ExpressionUUID->"ad0296f9-dfff-4ec9-aed2-\
6003ba5736fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"mat", "/.", 
   RowBox[{"\[Omega]", "->", 
    FractionBox[
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox["k"]}], 
     SqrtBox["m"]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534147821956787`*^9, 3.753414797408003*^9}},
 CellLabel->
  "In[1098]:=",ExpressionUUID->"ea0cb48c-23b0-49db-85a6-ba207907d123"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", "2"], ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.753414793741807*^9, 3.753414800329195*^9}},
 CellLabel->
  "Out[1098]=",ExpressionUUID->"0b245a89-da70-4f6f-b41c-d4a1cfb45d01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"mat", "/.", 
   RowBox[{"\[Omega]", "->", 
    FractionBox[
     RowBox[{
      SqrtBox["7"], " ", 
      SqrtBox["k"]}], 
     SqrtBox["m"]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534148024924145`*^9, 3.7534148131279783`*^9}},
 CellLabel->
  "In[1099]:=",ExpressionUUID->"351e55a7-1b56-430c-ae89-8f9b1145e133"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "2"}], ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.753414814004632*^9},
 CellLabel->
  "Out[1099]=",ExpressionUUID->"54588b85-ecff-49b5-aef0-752f1ef0bd53"]
}, Open  ]],

Cell["\<\
We can see that for the first mode of vibration, they go in the same \
direction ie both positive. However, for the 
second mode of vibration, they both go in opposite direction ie opposite signs\
\>", "Text",
 CellChangeTimes->{{3.7534149932683983`*^9, 
  3.7534150340107946`*^9}},ExpressionUUID->"a99ed2d0-f020-450b-bad0-\
8195900c2454"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P3 .12 .18
Find the characteristic frequencies and characteristic modes of vibration for \
the system of masses and springs as shown in the figure.\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7492599511770444`*^9, 3.7492599767217164`*^9}, {
  3.7492601495899467`*^9, 
  3.749260153814961*^9}},ExpressionUUID->"85d23a1a-bcbe-462a-bd15-\
92a5fbcaa837"],

Cell[BoxData[
 GraphicsBox[{
   GeometricTransformationBox[{
     LineBox[{{0, 0}, {1.5, 0}, {1.5, 4}, {0, 4}, {0, 0}}], 
     LineBox[{{0, 0.}, {1.5, 1.5}}], LineBox[{{0, 0.3}, {1.5, 1.8}}], 
     LineBox[{{0, 0.6}, {1.5, 2.1}}], 
     LineBox[{{0, 0.8999999999999999}, {1.5, 2.4}}], 
     LineBox[{{0, 1.2}, {1.5, 2.7}}], LineBox[{{0, 1.5}, {1.5, 3.}}], 
     LineBox[{{0, 1.7999999999999998`}, {1.5, 3.3}}], 
     LineBox[{{0, 2.1}, {1.5, 3.6}}], LineBox[{{0, 2.4}, {1.5, 3.9}}], 
     LineBox[{{0, 2.6999999999999997`}, {1.3000000000000003`, 4.}}], 
     LineBox[{{0, 3.}, {1., 4.}}], 
     LineBox[{{0, 3.3}, {0.7000000000000002, 4.}}], 
     LineBox[{{0, 3.5999999999999996`}, {0.40000000000000036`, 4.}}], 
     LineBox[{{0, 3.9}, {0.10000000000000009`, 4.}}], 
     LineBox[{{1.5, 1.2}, {0.30000000000000004`, 0}}], 
     LineBox[{{1.5, 0.9}, {0.6, 0}}], 
     LineBox[{{1.5, 0.6000000000000001}, {0.8999999999999998, 0}}], 
     LineBox[{{1.5, 0.30000000000000004`}, {1.1999999999999997`, 0}}], 
     LineBox[{{1.5, 0}, {1.4999999999999998`, 0}}]}, {-1.5, -2}], 
   LineBox[{{0, 0}, {3, 0}, {3.25, 0.5}, {3.75, -0.5}, {4., 0}, {4., 0}, {
     4.25, 0.5}, {4.75, -0.5}, {5., 0}, {5., 0}, {5.25, 0.5}, {5.75, -0.5}, {
     6., 0}, {6., 0}, {6.25, 0.5}, {6.75, -0.5}, {7., 0}, {7., 0}, {7.25, 
     0.5}, {7.75, -0.5}, {8., 0}, {11., 0}}], 
   GeometricTransformationBox[
    LineBox[{{0, 0}, {3, 0}, {3.25, 0.5}, {3.75, -0.5}, {4., 0}, {4., 0}, {
      4.25, 0.5}, {4.75, -0.5}, {5., 0}, {5., 0}, {5.25, 0.5}, {5.75, -0.5}, {
      6., 0}, {6., 0}, {6.25, 0.5}, {6.75, -0.5}, {7., 0}, {7., 0}, {7.25, 
      0.5}, {7.75, -0.5}, {8., 0}, {11., 0}}], {10, 0}], 
   GeometricTransformationBox[
    LineBox[{{0, 0}, {3, 0}, {3.25, 0.5}, {3.75, -0.5}, {4., 0}, {4., 0}, {
      4.25, 0.5}, {4.75, -0.5}, {5., 0}, {5., 0}, {5.25, 0.5}, {5.75, -0.5}, {
      6., 0}, {6., 0}, {6.25, 0.5}, {6.75, -0.5}, {7., 0}, {7., 0}, {7.25, 
      0.5}, {7.75, -0.5}, {8., 0}, {11., 0}}], {20, 0}], 
   GeometricTransformationBox[{
     LineBox[{{0, 0}, {1.5, 0}, {1.5, 4}, {0, 4}, {0, 0}}], 
     LineBox[{{0, 0.}, {1.5, 1.5}}], LineBox[{{0, 0.3}, {1.5, 1.8}}], 
     LineBox[{{0, 0.6}, {1.5, 2.1}}], 
     LineBox[{{0, 0.8999999999999999}, {1.5, 2.4}}], 
     LineBox[{{0, 1.2}, {1.5, 2.7}}], LineBox[{{0, 1.5}, {1.5, 3.}}], 
     LineBox[{{0, 1.7999999999999998`}, {1.5, 3.3}}], 
     LineBox[{{0, 2.1}, {1.5, 3.6}}], LineBox[{{0, 2.4}, {1.5, 3.9}}], 
     LineBox[{{0, 2.6999999999999997`}, {1.3000000000000003`, 4.}}], 
     LineBox[{{0, 3.}, {1., 4.}}], 
     LineBox[{{0, 3.3}, {0.7000000000000002, 4.}}], 
     LineBox[{{0, 3.5999999999999996`}, {0.40000000000000036`, 4.}}], 
     LineBox[{{0, 3.9}, {0.10000000000000009`, 4.}}], 
     LineBox[{{1.5, 1.2}, {0.30000000000000004`, 0}}], 
     LineBox[{{1.5, 0.9}, {0.6, 0}}], 
     LineBox[{{1.5, 0.6000000000000001}, {0.8999999999999998, 0}}], 
     LineBox[{{1.5, 0.30000000000000004`}, {1.1999999999999997`, 0}}], 
     LineBox[{{1.5, 0}, {1.4999999999999998`, 0}}]}, {30, -2}], InsetBox[
    StyleBox["\<\"2k\"\>",
     StripOnInput->False,
     FontSize->14], {5, 1.5}], InsetBox[
    StyleBox["\<\"k\"\>",
     StripOnInput->False,
     FontSize->14], {15, 1.5}], 
   {PointSize[0.02], PointBox[{10, 0}], PointBox[{20, 0}]}, InsetBox[
    StyleBox["\<\"m\"\>",
     StripOnInput->False,
     FontSize->14], {11, 1}], InsetBox[
    StyleBox["\<\"5m\"\>",
     StripOnInput->False,
     FontSize->14], {20, 1}], InsetBox[
    StyleBox["\<\"10k\"\>",
     StripOnInput->False,
     FontSize->14], {25, 1.5}], LineBox[{{10, -1}, {10, -2}}], 
   ArrowBox[{{10, -1.5}, {14, -1.5}}], LineBox[{{20, -1}, {20, -2}}], 
   ArrowBox[{{20, -1.5}, {24, -1.5}}], InsetBox[
    StyleBox["\<\"x\"\>",
     StripOnInput->False,
     FontSize->14], {12, -2.5}], InsetBox[
    StyleBox["\<\"y\"\>",
     StripOnInput->False,
     FontSize->14], {22, -2.5}]},
  Background->GrayLevel[1]]], "Text",
 CellChangeTimes->{3.749260119151843*^9, 3.7494767242551413`*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"794f21b3-5f05-4b83-b623-a346ee9290b8"],

Cell["Writing our potential energy equation: ", "Text",
 CellChangeTimes->{{3.75341552255293*^9, 
  3.753415533824609*^9}},ExpressionUUID->"4dde9f0d-5e62-4cc2-a5e9-\
13b51b122496"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pot", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["k", "1"], 
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["k", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"x", "[", "t", "]"}]}], "+", 
         RowBox[{"y", "[", "t", "]"}]}], ")"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["k", "3"], 
      SuperscriptBox[
       RowBox[{"y", "[", "t", "]"}], "2"]}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["k", "1"], "\[Rule]", 
      RowBox[{"2", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "2"], "\[Rule]", 
      RowBox[{"1", "k"}]}], ",", 
     RowBox[{
      SubscriptBox["k", "3"], "\[Rule]", 
      RowBox[{"10", "k"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.753414434321541*^9, 3.753414435327896*^9}, {
  3.753415240437768*^9, 3.7534152661290817`*^9}, {3.753415330400653*^9, 
  3.7534153861127243`*^9}, {3.7534162206508784`*^9, 3.753416256555962*^9}},
 CellLabel->
  "In[1160]:=",ExpressionUUID->"088a0ee5-4f72-43da-a0fd-2db7b4c1eb86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", " ", 
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"5", " ", "k", " ", 
   SuperscriptBox[
    RowBox[{"y", "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "k", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "[", "t", "]"}]}], "+", 
      RowBox[{"y", "[", "t", "]"}]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.75341550428872*^9, {3.7534162452430077`*^9, 3.753416257482413*^9}, 
   3.7534173597804565`*^9, 3.753417489598065*^9, 3.7534176011672535`*^9},
 CellLabel->
  "Out[1160]=",ExpressionUUID->"009dca1f-f1cb-4026-ae2a-6b46e6ddc755"]
}, Open  ]],

Cell["\<\
Generating equations of motion for x and y by taking the negative derivative \
of the potential energy
with respect to distance: \
\>", "Text",
 CellChangeTimes->{{3.753415539139267*^9, 
  3.753415575850724*^9}},ExpressionUUID->"30b54b1b-bb23-44bd-a1a1-\
806d35b7321e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xmot", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{
      RowBox[{"x", "''"}], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"-", 
     RowBox[{"D", "[", 
      RowBox[{"pot", ",", 
       RowBox[{"x", "[", "t", "]"}]}], "]"}]}]}], "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.7534160364515867`*^9, 3.7534160970554714`*^9}, {
  3.7534162177207594`*^9, 3.7534162180631723`*^9}, {3.7534162620057273`*^9, 
  3.753416263000908*^9}, {3.7534173321837215`*^9, 3.753417345479397*^9}},
 CellLabel->
  "In[1161]:=",ExpressionUUID->"aa85f330-a6b9-4ec5-8e42-15c164a8bef8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], " ", "k", " ", 
    RowBox[{"x", "[", "t", "]"}]}], "+", 
   RowBox[{"k", " ", 
    RowBox[{"y", "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7534160759113417`*^9, 3.7534160977966523`*^9}, {
   3.753416260488659*^9, 3.753416263752385*^9}, 3.7534173600872364`*^9, 
   3.7534174898812356`*^9, 3.7534176014509954`*^9},
 CellLabel->
  "Out[1161]=",ExpressionUUID->"d4bed8a7-8c5f-4974-a7fd-4259848174fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ymot", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"5", "m", " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"-", 
     RowBox[{"D", "[", 
      RowBox[{"pot", ",", 
       RowBox[{"y", "[", "t", "]"}]}], "]"}]}]}], "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.7534162662679353`*^9, 3.7534162766986427`*^9}, {
  3.7534173534347467`*^9, 3.7534173553474426`*^9}},
 CellLabel->
  "In[1162]:=",ExpressionUUID->"209584cc-2956-44c2-a99b-3d4706b04065"],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", "m", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"k", " ", 
    RowBox[{"x", "[", "t", "]"}]}], "-", 
   RowBox[{"11", " ", "k", " ", 
    RowBox[{"y", "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.7534162771835947`*^9, 3.753417360185974*^9, 
  3.753417489982772*^9, 3.753417601556712*^9},
 CellLabel->
  "Out[1162]=",ExpressionUUID->"4d9dbc9f-257e-47ab-a25d-0f545d1f0817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqmot", "=", 
   RowBox[{"{", 
    RowBox[{"xmot", ",", "ymot"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "eqmot", "]"}]}], "Input",
 CellChangeTimes->{{3.753416278539054*^9, 3.7534162845617027`*^9}},
 CellLabel->
  "In[1163]:=",ExpressionUUID->"a753ba39-a897-433b-b40d-4f5376101de6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "k", " ", 
         RowBox[{"x", "[", "t", "]"}]}], "+", 
        RowBox[{"k", " ", 
         RowBox[{"y", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"5", " ", "m", " ", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"x", "[", "t", "]"}]}], "-", 
        RowBox[{"11", " ", "k", " ", 
         RowBox[{"y", "[", "t", "]"}]}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753416285490841*^9, 3.7534173602977295`*^9, 
  3.7534174900979404`*^9, 3.753417601661645*^9},
 CellLabel->
  "Out[1164]//TableForm=",ExpressionUUID->"98d3dff6-7740-4961-ab3b-\
4139a9a79c54"]
}, Open  ]],

Cell[TextData[{
 "Plugging in our trial solution for x[t] and y[t] in the form of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", " ", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]], ":"}]}], 
   TraditionalForm]],ExpressionUUID->"6b7068e3-08cf-4592-9ee3-55c328b22d4f"]
}], "Text",
 CellChangeTimes->{{3.7534165045427084`*^9, 3.7534165224491143`*^9}, {
  3.753416592004057*^9, 
  3.75341660453154*^9}},ExpressionUUID->"113cef99-9ba4-4214-a8d1-\
537f3c570a6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqmot2", "=", 
   RowBox[{"eqmot", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"t", ",", 
         RowBox[{"Ax", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]]}]}], "]"}]}],
       ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"t", ",", 
         RowBox[{"Ay", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]]}]}], 
        "]"}]}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "eqmot2", "]"}]}], "Input",
 CellChangeTimes->{{3.7534162888760138`*^9, 3.753416290240859*^9}, {
  3.7534164367583513`*^9, 3.7534164732471724`*^9}},
 CellLabel->
  "In[1165]:=",ExpressionUUID->"6e8acc9d-56f0-4b82-aa69-8345c5de9406"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ax"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "Ax", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "k"}], 
        "+", 
        RowBox[{"Ay", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", 
         "k"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "5"}], " ", "Ay", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{"Ax", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", "k"}], 
        "-", 
        RowBox[{"11", " ", "Ay", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]], " ", 
         "k"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7534164657667913`*^9, 3.75341647425948*^9}, 
   3.753417360413556*^9, 3.7534174902081037`*^9, 3.753417601763372*^9},
 CellLabel->
  "Out[1166]//TableForm=",ExpressionUUID->"960b6045-4e52-41c5-9039-\
ed0a0a7b9e5a"]
}, Open  ]],

Cell[TextData[{
 "We clean up our equation by subbing in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[Rule]", "0"}], TraditionalForm]],ExpressionUUID->
  "6cb01db1-8fcd-40ef-88a4-dc4c5127288c"],
 " "
}], "Text",
 CellChangeTimes->{{3.7534166633613358`*^9, 3.753416674552493*^9}, {
  3.7534167993367167`*^9, 
  3.753416802448802*^9}},ExpressionUUID->"b969217d-0321-4102-be7e-\
a8d49c0b2a22"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqmot3", "=", 
   RowBox[{"eqmot2", "/.", 
    RowBox[{"t", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "eqmot3", "]"}]}], "Input",
 CellChangeTimes->{{3.7534164774818497`*^9, 3.7534164946922073`*^9}},
 CellLabel->
  "In[1167]:=",ExpressionUUID->"e43db8bf-7ad8-444d-8b9f-c2954b0646fc"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ax"}], " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "Ax", " ", "k"}], "+", 
        RowBox[{"Ay", " ", "k"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "5"}], " ", "Ay", " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{"Ax", " ", "k"}], "-", 
        RowBox[{"11", " ", "Ay", " ", "k"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753416486176349*^9, 3.7534164954174027`*^9}, 
   3.7534173605149927`*^9, 3.753417490324973*^9, 3.7534176019051037`*^9},
 CellLabel->
  "Out[1168]//TableForm=",ExpressionUUID->"2917d365-3d34-4915-84f5-\
39ddee846614"]
}, Open  ]],

Cell[TextData[{
 "Rewriting the above equations in matrix form: \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"m", " ", 
         SuperscriptBox["\[Omega]", "2"]}], "0"},
       {"0", 
        RowBox[{"5", "m", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}
      }], ")"}], 
    RowBox[{"(", GridBox[{
       {"Ax"},
       {"Ay"}
      }], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"3", "k"}], 
        RowBox[{"-", "k"}]},
       {
        RowBox[{"-", "k"}], 
        RowBox[{"11", "k"}]}
      }], ")"}], 
    RowBox[{"(", GridBox[{
       {"Ax"},
       {"Ay"}
      }], ")"}]}]}]],ExpressionUUID->"72483b11-424b-4ae4-9382-3b1080756629"],
 "\nMoving everything onto one side: \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{"3", "k"}], 
         RowBox[{"-", "k"}]},
        {
         RowBox[{"-", "k"}], "11"}
       }], ")"}], 
     RowBox[{"(", GridBox[{
        {"Ax"},
        {"Ay"}
       }], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{"m", " ", 
          SuperscriptBox["\[Omega]", "2"]}], "0"},
        {"0", 
         RowBox[{"5", "m", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}
       }], ")"}], 
     RowBox[{"(", GridBox[{
        {"Ax"},
        {"Ay"}
       }], ")"}]}]}], "=", "0"}]],ExpressionUUID->
  "733f9751-8616-47fc-b327-b883bd8ed30b"],
 "\nSimplifying: \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         RowBox[{"3", "k"}], "-", 
         RowBox[{"m", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], 
        RowBox[{"-", "k"}]},
       {
        RowBox[{"-", "k"}], 
        RowBox[{
         RowBox[{"11", "k"}], "-", 
         RowBox[{"5", "m", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}]}
      }], ")"}], 
    RowBox[{"(", GridBox[{
       {"Ax"},
       {"Ay"}
      }], ")"}]}], "=", "0"}]],ExpressionUUID->
  "e12b7536-d95c-4dbb-91d1-661da3e19ee2"],
 "\nOur coefficient matrix now looks like:"
}], "Text",
 CellChangeTimes->{{3.7534168073860807`*^9, 3.753417015069024*^9}, {
  3.753417141147019*^9, 3.7534171452363453`*^9}, {3.753417271685619*^9, 
  3.753417287279873*^9}, {3.7534175269186764`*^9, 3.7534175712416363`*^9}, {
  3.753417682408641*^9, 
  3.7534176825185184`*^9}},ExpressionUUID->"77d1fbf4-6a7a-40c7-a968-\
3dc087ec8bc2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"3", "k"}], "-", 
        RowBox[{"m", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}], ",", 
       RowBox[{"-", "k"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "k"}], ",", 
       RowBox[{
        RowBox[{"11", "k"}], "-", 
        RowBox[{"5", "m", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellChangeTimes->{{3.753417045632655*^9, 3.7534170822742634`*^9}, 
   3.7534171481413345`*^9, {3.753417291208211*^9, 3.7534172937335515`*^9}, 
   3.753417596588753*^9},
 CellLabel->
  "In[1169]:=",ExpressionUUID->"78c460b8-bf3f-4b22-bc7a-5cd93782cc5f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"3", " ", "k"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["\[Omega]", "2"]}]}], 
      RowBox[{"-", "k"}]},
     {
      RowBox[{"-", "k"}], 
      RowBox[{
       RowBox[{"11", " ", "k"}], "-", 
       RowBox[{"5", " ", "m", " ", 
        SuperscriptBox["\[Omega]", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7534170703081193`*^9, 3.753417083485247*^9}, 
   3.753417150719185*^9, 3.7534172945765743`*^9, 3.7534173606217055`*^9, 
   3.7534174904424334`*^9, 3.7534176020025487`*^9},
 CellLabel->
  "Out[1170]//MatrixForm=",ExpressionUUID->"54d049de-ebfd-4ebe-83fe-\
d21e3b74b528"]
}, Open  ]],

Cell["It\[CloseCurlyQuote]s characteristic frequency is given by its \
eigenvalues: ", "Text",
 CellChangeTimes->{{3.75341708932928*^9, 
  3.753417099681555*^9}},ExpressionUUID->"e31ed313-a3a0-441c-b57b-\
0deee3fd48d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "mat", "]"}], "\[Equal]", "0"}], ",", "\[Omega]"}], 
   "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.753417104026638*^9, 3.7534171209509387`*^9}, {
  3.753417248290617*^9, 3.753417253166629*^9}},
 CellLabel->
  "In[1171]:=",ExpressionUUID->"338ea4d9-570d-433c-9fdf-91a803d3abea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox["k"]}], 
       SqrtBox["m"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     FractionBox[
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox["k"]}], 
      SqrtBox["m"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox["k"]}], 
       RowBox[{
        SqrtBox["5"], " ", 
        SqrtBox["m"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", 
     FractionBox[
      RowBox[{"4", " ", 
       SqrtBox["k"]}], 
      RowBox[{
       SqrtBox["5"], " ", 
       SqrtBox["m"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753417112377982*^9, 3.7534171218886504`*^9}, 
   3.753417152821973*^9, {3.753417251064125*^9, 3.75341725406289*^9}, 
   3.753417296443261*^9, 3.753417360723077*^9, 3.7534174905449038`*^9, 
   3.7534176021236095`*^9},
 CellLabel->
  "Out[1171]=",ExpressionUUID->"8b9fe6a4-dbe3-455e-b44e-159b26bdbafb"]
}, Open  ]],

Cell["The characteristic modes are given by its eigenvectors:", "Text",
 CellChangeTimes->{{3.7534176875155864`*^9, 
  3.7534176970207024`*^9}},ExpressionUUID->"f53ea751-c6f6-48ce-96d6-\
4eb1da82e8f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"mat", "/.", 
   RowBox[{"\[Omega]", "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox["k"]}], 
     SqrtBox["m"]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75341743068371*^9, 3.7534174692398148`*^9}, {
  3.7534176066224823`*^9, 3.7534176265929737`*^9}, {3.753417657501192*^9, 
  3.7534176579330378`*^9}},
 CellLabel->
  "In[1174]:=",ExpressionUUID->"2b8d2e6c-a1b2-4dd5-a046-fcc4960ee895"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7534176118395324`*^9, 3.753417659028291*^9},
 CellLabel->
  "Out[1174]=",ExpressionUUID->"eae3d6d5-fadc-4d80-887a-b7172c6ee2c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"mat", "/.", 
   RowBox[{"\[Omega]", "\[Rule]", 
    FractionBox[
     RowBox[{"4", " ", 
      SqrtBox["k"]}], 
     RowBox[{
      SqrtBox["5"], " ", 
      SqrtBox["m"]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534176612390957`*^9, 3.7534176760260878`*^9}},
 CellLabel->
  "In[1176]:=",ExpressionUUID->"0418944d-c888-4711-a90f-ce91da895918"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "5"}], ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7534176704868793`*^9, 3.753417676555909*^9}},
 CellLabel->
  "Out[1176]=",ExpressionUUID->"bd144bac-21fc-4b31-94bc-0e84b7430a98"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P3 .15 .18\nFind the matrix C that diagonalizes M=",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"3", 
      RowBox[{"-", "2"}]}
    }], "\[NoBreak]", ")"}]],ExpressionUUID->
  "7d2c917d-2bd7-4c6a-9442-39992326fb94"],
 " . Observe that M is not symmetric and C is not orthogonal. However C does \
have an inverse ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["C", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "1f5e3134-afba-4787-9402-006cf9b5b472"],
 " ; find ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["C", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "96f31481-c3da-4a99-9e4e-2c3318a465e7"],
 " and show ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["C", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "76ec47f0-440d-466a-85bd-0ef9dbfcf371"],
 "M C=D"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.749260294916155*^9, 3.749260390000744*^9}, {
  3.74926043076302*^9, 3.749260551508731*^9}, {3.753417957693697*^9, 
  3.75341795790483*^9}},ExpressionUUID->"eef0ad4a-50af-41cc-bb43-\
9900c5855692"],

Cell["Defining a variable to represent the given matrix: ", "Text",
 CellChangeTimes->{{3.753417838388837*^9, 
  3.753417844500705*^9}},ExpressionUUID->"0ec3b984-b931-46ff-a88d-\
e82292e96671"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellChangeTimes->{{3.75341784680457*^9, 3.7534178598772736`*^9}},
 CellLabel->
  "In[1179]:=",ExpressionUUID->"17d9914e-5205-4e52-8f02-75c734d92dca"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"3", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753417857421288*^9, 3.7534178607223883`*^9}},
 CellLabel->
  "Out[1180]//MatrixForm=",ExpressionUUID->"779a60cd-cc77-4124-9ef3-\
13d7270c02b1"]
}, Open  ]],

Cell["\<\
C is the standard matrix used to diagonalize the given matrix M. 
We can construct C by having its columns be the eigenvectors of M:\
\>", "Text",
 CellChangeTimes->{{3.753417882798378*^9, 
  3.7534179117151103`*^9}},ExpressionUUID->"9331e4a3-9b30-4f36-b5d0-\
3af0200ccfd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cmat", "=", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "mat", "]"}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Cmat", "]"}]}], "Input",
 CellChangeTimes->{{3.7534179275897965`*^9, 3.7534179515533333`*^9}},
 CellLabel->
  "In[1184]:=",ExpressionUUID->"ae2cfd8d-a5bb-46d7-bad5-a478fa0f16a2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7534179345124617`*^9, 3.753417952311126*^9}},
 CellLabel->
  "Out[1185]//MatrixForm=",ExpressionUUID->"006cfc3b-ad7c-4680-8ff8-\
2f4afacae197"]
}, Open  ]],

Cell["Using Inverse[] to find its inverse:", "Text",
 CellChangeTimes->{{3.753417960907464*^9, 
  3.753417965224684*^9}},ExpressionUUID->"8e07e960-ae20-4882-be67-\
ae84fe27e4e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"invCmat", "=", 
   RowBox[{"Inverse", "[", "Cmat", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "invCmat", "]"}]}], "Input",
 CellChangeTimes->{{3.7534179675037394`*^9, 3.753417970957901*^9}, {
  3.7534180147826896`*^9, 3.753418047873014*^9}},
 CellLabel->
  "In[1187]:=",ExpressionUUID->"a78c4c8b-7d70-43a4-9e91-c545bf79a448"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753418036787266*^9, 3.7534180488724117`*^9}},
 CellLabel->
  "Out[1188]//MatrixForm=",ExpressionUUID->"0444b677-7aa2-42b3-b90b-\
6f419f8c244f"]
}, Open  ]],

Cell["Applying the diagonalization formula: ", "Text",
 CellChangeTimes->{{3.7534180657975893`*^9, 
  3.7534180755490875`*^9}},ExpressionUUID->"daf8868c-0c12-4698-8308-\
7d90d45d06cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diag", "=", 
   RowBox[{"invCmat", ".", "mat", ".", "Cmat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "diag", "]"}]}], "Input",
 CellChangeTimes->{{3.753418123826689*^9, 3.753418146582678*^9}},
 CellLabel->
  "In[1193]:=",ExpressionUUID->"390d25c3-9eb0-4230-afd1-b551b8c7d9f1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7534181369385624`*^9, 3.7534181504063435`*^9}},
 CellLabel->
  "Out[1194]//MatrixForm=",ExpressionUUID->"510fdb84-0607-45eb-a525-\
05ce5a496de9"]
}, Open  ]],

Cell[TextData[{
 "We can see from earlier that because M is not symmetric, it\
\[CloseCurlyQuote]s matrix C is not orthogonal. If C were orthogonal then it\
\[CloseCurlyQuote]s inverse\nwould be the transpose. Furthermore, the formula \
to diagonalize becomes: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["C", 
       RowBox[{"-", "1"}]], " ", "M", " ", "C"}], "=", 
     RowBox[{
      SuperscriptBox["C", "T"], " ", "M", " ", "C"}]}]}], TraditionalForm]],
  ExpressionUUID->"834ef80e-2890-473c-8765-6e70e5f8f139"]
}], "Text",
 CellChangeTimes->{{3.753418158317935*^9, 3.753418206307705*^9}, {
  3.7534191580605016`*^9, 
  3.75341921121117*^9}},ExpressionUUID->"90c846b6-f296-43de-b17a-\
3f265c0729e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "PWk4 .1\nDefine an inner product <f,g>= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], 
     RowBox[{"f", "[", "t", "]"}], " ", 
     RowBox[{"g", "[", "t", "]"}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}], TraditionalForm]],ExpressionUUID->
  "3f878511-8057-49b8-8746-41f7c8faeeb9"],
 "   .  Consider the functions {1,t,",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "75100f7f-a5e2-4c8b-a585-42317f6268f7"],
 ",",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "3"], TraditionalForm]],ExpressionUUID->
  "edbd9302-2ff6-4073-aaad-2d9a4e642c32"],
 ",",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "4"], TraditionalForm]],ExpressionUUID->
  "d4b00bd3-088e-4fc3-878a-24113dfd4ae1"],
 "} . Apply the Gram-Schmidt process to construct an orthonormal set of \
functions. Verify that they are orthonormal by constructing a table of all of \
the inner products .   Do not use Orthogonalize ( you can use it to check \
your answer) , but work out conditions for each e[i] . "
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7492613819313107`*^9, 3.7492616034997334`*^9}, {
  3.7492617097939014`*^9, 3.7492617106589994`*^9}, {3.7492641899816837`*^9, 
  3.7492642100605154`*^9}, {3.7494755573928146`*^9, 
  3.749475560027151*^9}},ExpressionUUID->"5c9ef12b-6e3f-44c8-a5d1-\
88725a16a2c4"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.753420987447009*^9, 3.7534209917258463`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4cfb5ac7-01c7-46d1-857c-17dc78e1770d"],

Cell["We can start by defining our given basis: ", "Text",
 CellChangeTimes->{{3.753420174520804*^9, 3.7534201796587267`*^9}, {
  3.7534202248219137`*^9, 
  3.7534202362628765`*^9}},ExpressionUUID->"6e81b4a6-101a-4722-a2c1-\
1bab46bc24d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"old", "[", "1", "]"}], ",", 
     RowBox[{"old", "[", "2", "]"}], ",", 
     RowBox[{"old", "[", "3", "]"}], ",", 
     RowBox[{"old", "[", "4", "]"}], ",", 
     RowBox[{"old", "[", "5", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "t", ",", 
     SuperscriptBox["t", "2"], ",", 
     SuperscriptBox["t", "3"], ",", 
     SuperscriptBox["t", "4"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534202385232534`*^9, 3.7534202501282735`*^9}, {
  3.7534208448564224`*^9, 3.7534208578988647`*^9}, {3.753420945907468*^9, 
  3.753420958949891*^9}, {3.7534216556989594`*^9, 3.753421670588874*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"f5e7633c-38d0-44e6-9270-513febab2a09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "t", ",", 
   SuperscriptBox["t", "2"], ",", 
   SuperscriptBox["t", "3"], ",", 
   SuperscriptBox["t", "4"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.753420250784873*^9, {3.7534208455922203`*^9, 3.7534208891053824`*^9}, 
   3.753420959891944*^9, 3.7534209964007235`*^9, 3.7534216725377674`*^9, 
   3.7534310849031177`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"e618f81d-1b61-4634-8ad8-6972074cfbd2"]
}, Open  ]],

Cell["\<\
Symbolically, our new orthonormal basis vectors will look like: \
\>", "Text",
 CellChangeTimes->{{3.7534202630217323`*^9, 3.753420278337145*^9}, {
  3.753421215064602*^9, 
  3.7534212161482534`*^9}},ExpressionUUID->"a8521932-e026-445a-b2c5-\
ab0b0cd4e78f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"e", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753420280741481*^9, 3.7534203012757854`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b0cd5737-9232-4c09-bf48-177967c2a833"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"e", "[", "1", "]"}], ",", 
   RowBox[{"e", "[", "2", "]"}], ",", 
   RowBox[{"e", "[", "3", "]"}], ",", 
   RowBox[{"e", "[", "4", "]"}], ",", 
   RowBox[{"e", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7534203020144644`*^9, 3.7534310849449773`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"0cdc1302-40b5-47e2-9868-b70c0f72fc15"]
}, Open  ]],

Cell["Defining our inner product function: ", "Text",
 CellChangeTimes->{{3.7534203273655057`*^9, 
  3.753420330245575*^9}},ExpressionUUID->"8eaa9030-82e4-4be1-a06a-\
635bf6005e35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inner", "[", 
   RowBox[{"f_", ",", "g_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], "f", "*", "g"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534199555520535`*^9, 3.753419974827985*^9}, {
  3.753421086048093*^9, 3.753421087122073*^9}, {3.753421181089182*^9, 
  3.7534211849465203`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"55f6f01e-30f2-4ff5-82b5-caaa35941901"],

Cell["\<\
The first orthonormal vector of our new basis can just assume the first \
vector of our old basis: \
\>", "Text",
 CellChangeTimes->{{3.753420336118683*^9, 3.7534203497299356`*^9}, {
  3.7534212110489845`*^9, 
  3.7534212125114727`*^9}},ExpressionUUID->"bb357be8-fa4e-446e-8f14-\
719e62ece589"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "1", "]"}], "=", 
  FractionBox[
   RowBox[{"old", "[", "1", "]"}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"inner", "[", 
     RowBox[{
      RowBox[{"old", "[", "1", "]"}], ",", 
      RowBox[{"old", "[", "1", "]"}]}], "]"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.7534203531227493`*^9, 3.7534203573493776`*^9}, {
  3.753420824898961*^9, 3.7534208754711742`*^9}, {3.7534210060095253`*^9, 
  3.753421014158618*^9}, {3.753421679683114*^9, 3.753421687011875*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d47b7172-0776-4433-9b95-a9891fef3ca6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.7534203578629727`*^9, {3.753420882440707*^9, 3.753420900420849*^9}, {
   3.7534210004129734`*^9, 3.7534210203287077`*^9}, 3.753421193992895*^9, 
   3.7534216875788164`*^9, 3.7534310855633235`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1d04e93f-60ab-4d85-85ec-b3442955b61a"]
}, Open  ]],

Cell["\<\
We can define the second new basis vector as some linear combination of the \
first 2 old basis vectors: \
\>", "Text",
 CellChangeTimes->{{3.753421304503311*^9, 3.7534213255778313`*^9}, 
   3.7534232220758133`*^9},ExpressionUUID->"f48b2bc1-16f3-45c6-899a-\
2fe58ce6deec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "2", "]"}], "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"old", "[", "1", "]"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"old", "[", "2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7534208215106955`*^9, 3.753420822111909*^9}, {
  3.753421341961422*^9, 3.7534213458108964`*^9}, {3.753421641837081*^9, 
  3.753421650235357*^9}, {3.753421689459234*^9, 3.753421702309778*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ab729a30-a89d-47bc-ab82-0d7a15d89c87"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"b", " ", "t"}]}]], "Output",
 CellChangeTimes->{3.7534217034438133`*^9, 3.753431085605246*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"a320ffa1-12fc-45b0-971f-3752f82bffd4"]
}, Open  ]],

Cell["\<\
where a and b are just constants.

Now we have a simple, symbolic expression for our new basis. We can generate \
conditions based on orthonormal properties that we know ought to be true, \
turn these conditions into equation form, and use Solve[] to find solutions \
to the constants (a,b):\
\>", "Text",
 CellChangeTimes->{{3.753421709894504*^9, 3.7534217572934055`*^9}, {
   3.7534218276443467`*^9, 3.753421854743927*^9}, 3.7534231857974076`*^9, {
   3.7534240085462418`*^9, 
   3.753424014062451*^9}},ExpressionUUID->"fa1ecdb2-f708-458e-9a0c-\
3ea79f8a796a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond1", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "2", "]"}], ",", 
     RowBox[{"e", "[", "2", "]"}]}], "]"}], "\[Equal]", "1"}]}]], "Input",
 CellChangeTimes->{{3.7534219570042963`*^9, 3.7534219693301687`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c6b24052-4f72-4815-8099-84fcbd578df9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], "+", 
   RowBox[{"2", " ", "a", " ", "b"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["b", "2"]}]}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.753421971356623*^9, 3.75343108587751*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"3fca97d2-01ef-4e79-837b-c5db9c5f1c2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond2", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "2", "]"}], ",", 
     RowBox[{"e", "[", "1", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753421973494403*^9, 3.75342198294947*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4b634d18-3569-43b3-bcc2-52705a18265c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b"}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.753421984103141*^9, 3.753431086051019*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"e25aad2d-99bd-4b2b-959c-7793065cb996"]
}, Open  ]],

Cell["\<\
Cond1 is the normalized condition and Cond2 is the orthogonal condition. 
Nonetheless, 2 equations and 2 unknowns, we can solve this bitch:\
\>", "Text",
 CellChangeTimes->{{3.753421991022374*^9, 3.7534220106368217`*^9}, {
  3.7534220606496124`*^9, 
  3.753422076273348*^9}},ExpressionUUID->"77e31158-21fb-4b71-8903-\
16c01020c2a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cond1", ",", "cond2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "//", "First"}]}]], "Input",
 CellChangeTimes->{{3.7534220822116156`*^9, 3.7534221001952286`*^9}, {
  3.7534227573530517`*^9, 3.753422758196492*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c88d44d3-543b-4fef-aa1b-9fd2b59f2c23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"b", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.753422101444231*^9, 3.7534227590519648`*^9, 
  3.753431086092951*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0d7afa6f-f724-4cb8-b892-bcf95722bdee"]
}, Open  ]],

Cell["\<\
We can post-wrap //First[] on the solution just to arbitrarily select only \
one of the given solutions.
Subbing in these solutions, our second new basis vector is: \
\>", "Text",
 CellChangeTimes->{{3.7534227323794265`*^9, 3.753422795780866*^9}, {
  3.753422891079911*^9, 
  3.7534228972149305`*^9}},ExpressionUUID->"eeadde3b-239f-4cdb-b907-\
bc06586a3095"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "2", "]"}], "=", 
  RowBox[{
   RowBox[{"e", "[", "2", "]"}], "/.", "sol1"}]}]], "Input",
 CellChangeTimes->{{3.753423124500574*^9, 3.7534231367575192`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b5f76e31-9d6b-4069-ac88-8b10eb582a7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "t"}]], "Output",
 CellChangeTimes->{{3.7534231317009087`*^9, 3.753423137466101*^9}, 
   3.75343108613483*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7f9e6a47-5362-4ea1-ba74-bcaa5627b297"]
}, Open  ]],

Cell["\<\
Moving onto the next new basis vector, we can write it as a linear \
combination of the first 3 old basis vectors: \
\>", "Text",
 CellChangeTimes->{{3.753423146394201*^9, 
  3.753423180364958*^9}},ExpressionUUID->"23fceeeb-7f16-45b9-9b5e-\
b25250d1923e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "3", "]"}], "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"old", "[", "1", "]"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"old", "[", "2", "]"}]}], "+", 
   RowBox[{"c", " ", 
    RowBox[{"old", "[", "3", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.75342322583315*^9, 3.7534232475115986`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ba1a307d-c9a0-4769-a5aa-0676d626e6a8"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"b", " ", "t"}], "+", 
  RowBox[{"c", " ", 
   SuperscriptBox["t", "2"]}]}]], "Output",
 CellChangeTimes->{3.753423249020852*^9, 3.7534310861747236`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"9503c63e-bd4b-4e95-ad83-94ae81dc6373"]
}, Open  ]],

Cell[TextData[{
 "Notice that we will always have the 1 condition concerning normalization, \
and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "cff50788-fbd4-4c36-9217-c6cc8ab52411"],
 " conditions concerning orthogonality. \nFor instance, for the third new \
basis vector, it ought obey the normalization property and it ought to be \
orthogonal\nto the first and second new basis vectors: "
}], "Text",
 CellChangeTimes->{{3.753423438677867*^9, 3.753423446861051*^9}, {
  3.753423863147767*^9, 
  3.753423956034377*^9}},ExpressionUUID->"98f6d6ba-1775-4b8a-a3c2-\
d06f02c13076"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond1", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "3", "]"}], ",", 
     RowBox[{"e", "[", "3", "]"}]}], "]"}], "\[Equal]", "1"}]}]], "Input",
 CellChangeTimes->{{3.75342325163377*^9, 3.753423263925221*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"831e2bba-a463-4079-9f29-cd4af07596c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], "+", 
   RowBox[{"2", " ", "a", " ", "b"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["b", "2"]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", 
      RowBox[{"3", " ", "b"}]}], ")"}], " ", "c"}], "+", 
   RowBox[{"24", " ", 
    SuperscriptBox["c", "2"]}]}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.7534232658186536`*^9, 3.7534310865247784`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"cac0abea-497c-47af-9ba3-c4a0ff0783a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond2", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "3", "]"}], ",", 
     RowBox[{"e", "[", "2", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753423268458371*^9, 3.753423277602145*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9747b8a4-6d95-4691-b73f-9e412bf23019"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "+", 
   RowBox[{"4", " ", "c"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7534232792347236`*^9, 3.7534310869007473`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c549de6a-adaa-47e5-b5c1-6f5d0b48dcbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond3", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "3", "]"}], ",", 
     RowBox[{"e", "[", "1", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753423280423237*^9, 3.753423287393477*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"4c5745b6-8b06-4599-a78f-b90f93fa827c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b", "+", 
   RowBox[{"2", " ", "c"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7534232888851023`*^9, 3.753431087088278*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"9031eca8-8444-408c-a446-dc5d06b6eeff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cond1", ",", "cond2", ",", "cond3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.753423290774763*^9, 3.7534233080882254`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"2e6156e5-d15b-4c7e-8b1c-1e07c9f5a6ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", "2"}]}], ",", 
   RowBox[{"c", "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7534232984019136`*^9, 3.7534233088415613`*^9}, 
   3.7534310871311607`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"84a1903f-d570-4ca2-9b15-0b75475d89c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "3", "]"}], "=", 
  RowBox[{
   RowBox[{"e", "[", "3", "]"}], "/.", "sol2"}]}]], "Input",
 CellChangeTimes->{{3.7534234251048646`*^9, 3.75342342963229*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e68ac823-8e83-41c5-8069-b7571c5f0dd8"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", "t"}], "+", 
  FractionBox[
   SuperscriptBox["t", "2"], "2"]}]], "Output",
 CellChangeTimes->{3.753423430303421*^9, 3.7534310871730213`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"fa5f06ab-9e3e-4093-8f52-cac5ac01c926"]
}, Open  ]],

Cell["\<\
Rinse & repeat. 
We define our fourth new basis vector:\
\>", "Text",
 CellChangeTimes->{{3.7534239696043053`*^9, 3.753423988612418*^9}, 
   3.7534310504103093`*^9},ExpressionUUID->"686cce84-c014-49ee-b923-\
712af43b0b53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "4", "]"}], "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"old", "[", "1", "]"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"old", "[", "2", "]"}]}], "+", 
   RowBox[{"c", " ", 
    RowBox[{"old", "[", "3", "]"}]}], "+", 
   RowBox[{"d", " ", 
    RowBox[{"old", "[", "4", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.753423974691828*^9, 3.753423976715419*^9}, {
  3.753431053933052*^9, 3.7534310789031315`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"fe4d6de7-e7e6-4014-90cd-427c8e58c124"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"b", " ", "t"}], "+", 
  RowBox[{"c", " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{"d", " ", 
   SuperscriptBox["t", "3"]}]}]], "Output",
 CellChangeTimes->{{3.7534310809287148`*^9, 3.753431087215906*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"3644ecde-e6fb-4ebb-8845-d3bef2768455"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond1", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "4", "]"}], ",", 
     RowBox[{"e", "[", "4", "]"}]}], "]"}], "\[Equal]", "1"}]}]], "Input",
 CellChangeTimes->{{3.753431183011791*^9, 3.753431216713744*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"8a1f87d6-4c73-4b27-b47b-63453f703c5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], "+", 
   RowBox[{"2", " ", "a", " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", 
      RowBox[{"2", " ", "c"}], "+", 
      RowBox[{"6", " ", "d"}]}], ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["b", "2"], "+", 
      RowBox[{"6", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{"c", "+", 
         RowBox[{"4", " ", "d"}]}], ")"}]}], "+", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c", "2"], "+", 
         RowBox[{"10", " ", "c", " ", "d"}], "+", 
         RowBox[{"30", " ", 
          SuperscriptBox["d", "2"]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
  "1"}]], "Output",
 CellChangeTimes->{{3.7534311967570734`*^9, 3.7534312173370523`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"32a9a321-7e3f-49f5-9eba-fdf30d9278c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond2", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "4", "]"}], ",", 
     RowBox[{"e", "[", "3", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7534312000292935`*^9, 3.7534312142283335`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fab4aec3-12ab-4e6a-9009-65dcd59f142a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"9", " ", "d"}]}], ")"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.75343122035595*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"39a3d727-befd-47d7-8315-bbb57c18a5fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond3", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "4", "]"}], ",", 
     RowBox[{"e", "[", "2", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7534312213234043`*^9, 3.7534312468691072`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"1a4eaa9f-5177-4be6-9481-96c5df816d6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "+", 
   RowBox[{"4", " ", "c"}], "+", 
   RowBox[{"18", " ", "d"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.753431247745723*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a294352f-b00a-4d1b-b1e6-c381a615ce11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond4", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "4", "]"}], ",", 
     RowBox[{"e", "[", "1", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753431249050234*^9, 3.7534312544727373`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ebb73112-4368-4e85-8de7-429fcd1eb653"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b", "+", 
   RowBox[{"2", " ", "c"}], "+", 
   RowBox[{"6", " ", "d"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.753431255456133*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c9cea929-ca0c-4bdc-87fd-90381f0bc181"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cond1", ",", "cond2", ",", "cond3", ",", "cond4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.7534312576991463`*^9, 3.753431285782064*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"15c8aa03-5689-4fab-85be-155822259696"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"b", "\[Rule]", "3"}], ",", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["3", "2"]}]}], ",", 
   RowBox[{"d", "\[Rule]", 
    FractionBox["1", "6"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.753431270978651*^9, 3.753431286402402*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"335ecd4e-cc31-4042-acfa-375689b4886b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "4", "]"}], "=", 
  RowBox[{
   RowBox[{"e", "[", "4", "]"}], "/.", "sol3"}]}]], "Input",
 CellChangeTimes->{{3.753431289636756*^9, 3.7534312920133705`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"a657acad-d092-44e9-90e9-8ae4f045ffb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"3", " ", "t"}], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["t", "2"]}], "2"], "+", 
  FractionBox[
   SuperscriptBox["t", "3"], "6"]}]], "Output",
 CellChangeTimes->{3.753431292450228*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"2716ebe0-1728-4995-86c2-443bec3a335d"]
}, Open  ]],

Cell["Rinse & repeat\[LineSeparator]We define our fifth new basis vector: ", \
"Text",
 CellChangeTimes->{{3.7534313050824313`*^9, 
  3.7534313144005184`*^9}},ExpressionUUID->"e50642cf-3b9a-4a1a-b710-\
bd482b920dca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "5", "]"}], "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"old", "[", "1", "]"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"old", "[", "2", "]"}]}], "+", 
   RowBox[{"c", " ", 
    RowBox[{"old", "[", "3", "]"}]}], "+", 
   RowBox[{"d", " ", 
    RowBox[{"old", "[", "4", "]"}]}], "+", 
   RowBox[{"e", " ", 
    RowBox[{"old", "[", "5", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7534313198410034`*^9, 3.7534313434598284`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"720f2b3b-07fc-44ac-9db2-d7a2864b0faa"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"b", " ", "t"}], "+", 
  RowBox[{"c", " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{"d", " ", 
   SuperscriptBox["t", "3"]}], "+", 
  RowBox[{"e", " ", 
   SuperscriptBox["t", "4"]}]}]], "Output",
 CellChangeTimes->{3.753431344805231*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"cad3915d-1fcf-4e95-b200-82d223ab45cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond1", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "5", "]"}], ",", 
     RowBox[{"e", "[", "5", "]"}]}], "]"}], "\[Equal]", "1"}]}]], "Input",
 CellChangeTimes->{{3.7534313498358054`*^9, 3.75343135724198*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"527b0155-06c9-4617-a4df-e57c487f73aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], "+", 
   RowBox[{"2", " ", "a", " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", 
      RowBox[{"2", " ", "c"}], "+", 
      RowBox[{"6", " ", "d"}], "+", 
      RowBox[{"24", " ", "e"}]}], ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["b", "2"], "+", 
      RowBox[{"6", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{"c", "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{"5", " ", "e"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c", "2"], "+", 
         RowBox[{"10", " ", "c", " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{"6", " ", "e"}]}], ")"}]}], "+", 
         RowBox[{"30", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["d", "2"], "+", 
            RowBox[{"14", " ", "d", " ", "e"}], "+", 
            RowBox[{"56", " ", 
             SuperscriptBox["e", "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
  "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.753431358728006*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"c90254db-0a84-493a-badb-49b81c4da7d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond2", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "5", "]"}], ",", 
     RowBox[{"e", "[", "4", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753431360445459*^9, 3.753431383089046*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"855a5377-437f-4388-a228-25409135f88f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", 
   RowBox[{"(", 
    RowBox[{"d", "+", 
     RowBox[{"16", " ", "e"}]}], ")"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7534313857372427`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"22167423-34ed-43fd-b9ec-8c8e06b07fa7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond3", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "5", "]"}], ",", 
     RowBox[{"e", "[", "3", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753431386418464*^9, 3.75343139332626*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"49938862-d0ac-4922-be81-0970d06f015a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"9", " ", 
      RowBox[{"(", 
       RowBox[{"d", "+", 
        RowBox[{"8", " ", "e"}]}], ")"}]}]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.753431394512585*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"52057a03-89ad-4acc-981a-16c832bbc350"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond4", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "5", "]"}], ",", 
     RowBox[{"e", "[", "2", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753431395404625*^9, 3.753431400836221*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"7e069ace-0390-4e5a-8c46-5e40e45a2436"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "+", 
   RowBox[{"4", " ", "c"}], "+", 
   RowBox[{"18", " ", "d"}], "+", 
   RowBox[{"96", " ", "e"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.753431401903372*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"53158c38-a334-4099-b384-f4aad3f685fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cond5", "=", 
  RowBox[{
   RowBox[{"inner", "[", 
    RowBox[{
     RowBox[{"e", "[", "5", "]"}], ",", 
     RowBox[{"e", "[", "1", "]"}]}], "]"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753431402902197*^9, 3.7534314079142866`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"fa5c2405-7610-4078-b49e-a1cdd9415846"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b", "+", 
   RowBox[{"2", " ", "c"}], "+", 
   RowBox[{"6", " ", "d"}], "+", 
   RowBox[{"24", " ", "e"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7534314088092995`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"41d7fc6f-e533-4202-8e6d-5d311f01eb7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol4", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cond1", ",", "cond2", ",", "cond3", ",", "cond4", ",", "cond5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], "]"}], "//",
    "First"}]}]], "Input",
 CellChangeTimes->{{3.753431411586832*^9, 3.753431427568061*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b7f87ce6-8ae9-428c-b8f9-8de6309d9b2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", "4"}]}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["2", "3"]}]}], ",", 
   RowBox[{"e", "\[Rule]", 
    FractionBox["1", "24"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7534314237532167`*^9, 3.753431427982318*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"45542b2b-5cae-41a1-9eeb-0a9e49a24ff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", "5", "]"}], "=", 
  RowBox[{
   RowBox[{"e", "[", "5", "]"}], "/.", "sol4"}]}]], "Input",
 CellChangeTimes->{{3.7534314309665155`*^9, 3.7534314338603697`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"7fdfac20-2d30-4347-bcda-3836698beedb"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"4", " ", "t"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["t", "2"]}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["t", "3"]}], "3"], "+", 
  FractionBox[
   SuperscriptBox["t", "4"], "24"]}]], "Output",
 CellChangeTimes->{3.753431434349118*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b10b7e8e-2c0d-43a3-a033-5195fb1dde78"]
}, Open  ]],

Cell["\<\
This is quite tiresome. Now we\[CloseCurlyQuote]ve found all the coefficients \
to numerically define our new basis. 
Our new basis looks like:\
\>", "Text",
 CellChangeTimes->{{3.7534314408753195`*^9, 3.7534314695706806`*^9}, {
  3.7534315034711285`*^9, 3.7534315038823977`*^9}, {3.8361582788332133`*^9, 
  3.8361582849945507`*^9}},ExpressionUUID->"72333fc4-d15c-4d5d-ad95-\
91fc8950a865"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", "[", "1", "]"}], ",", 
      RowBox[{"new", "[", "2", "]"}], ",", 
      RowBox[{"new", "[", "3", "]"}], ",", 
      RowBox[{"new", "[", "4", "]"}], ",", 
      RowBox[{"new", "[", "5", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], ",", 
      RowBox[{"e", "[", "2", "]"}], ",", 
      RowBox[{"e", "[", "3", "]"}], ",", 
      RowBox[{"e", "[", "4", "]"}], ",", 
      RowBox[{"e", "[", "5", "]"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.753431531566191*^9, 3.7534315672604914`*^9}, {
  3.753431635953642*^9, 3.753431642572172*^9}, {3.753431712749934*^9, 
  3.753431714414319*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"594aa1dd-bf0a-47e3-94cb-8cac6633c9e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "t"}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{"4", " ", "t"}], "+", 
      SuperscriptBox["t", "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"18", " ", "t"}], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      SuperscriptBox["t", "3"]}], ")"}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "t"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["t", "2"]}], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["t", "3"]}], "3"], "+", 
    FractionBox[
     SuperscriptBox["t", "4"], "24"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7534315595857067`*^9, 3.7534315678998647`*^9}, 
   3.7534316431125402`*^9, 3.7534317151541567`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"6002f56a-a668-441b-9a55-6a051f57bff6"]
}, Open  ]],

Cell["We can check our answer using Orthogonalize[]:", "Text",
 CellChangeTimes->{{3.7534315863811913`*^9, 
  3.7534316121711693`*^9}},ExpressionUUID->"00b7b13c-59cc-4f14-87af-\
60132eee8cf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "=", 
  RowBox[{
   RowBox[{"Orthogonalize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"old", "[", "1", "]"}], ",", 
       RowBox[{"old", "[", "2", "]"}], ",", 
       RowBox[{"old", "[", "3", "]"}], ",", 
       RowBox[{"old", "[", "4", "]"}], ",", 
       RowBox[{"old", "[", "5", "]"}]}], "}"}], ",", "inner"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7534316177745314`*^9, 3.7534316334315643`*^9}, {
  3.75343168951908*^9, 3.7534317186970415`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ffe45db3-f8f8-4164-a8f2-833bbceaaf11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "t"}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{"4", " ", "t"}], "+", 
      SuperscriptBox["t", "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"18", " ", "t"}], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      SuperscriptBox["t", "3"]}], ")"}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"4", " ", "t"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["t", "2"]}], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["t", "3"]}], "3"], "+", 
    FractionBox[
     SuperscriptBox["t", "4"], "24"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.753431624928071*^9, {3.753431703628045*^9, 3.7534317204249907`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"85082eab-fe41-4fbf-9437-856b6434a2b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"inner", "[", 
     RowBox[{
      RowBox[{"new", "[", "i", "]"}], ",", 
      RowBox[{"new", "[", "j", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.753431733476178*^9, 3.7534317665500727`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d8da93ab-1fe2-4819-a470-59e96871b4ba"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0"},
     {"0", "0", "1", "0", "0"},
     {"0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753431757915805*^9, 3.7534317702229137`*^9}},
 CellLabel->
  "Out[51]//MatrixForm=",ExpressionUUID->"5dac8265-c17c-4022-bf97-\
c8e44412a89b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P7 .5 .5\nf(x) =",
 Cell[BoxData[GridBox[{
    {"0", 
     RowBox[{",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "<", "x", "<", "0"}]}]},
    {
     RowBox[{"-", "1"}], 
     RowBox[{",", 
      RowBox[{"0", "<", "x", "<", 
       RowBox[{"\[Pi]", "/", "2"}]}]}]},
    {"0", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "2"}], "<", "x", "<", "\[Pi]"}]}
   }]],ExpressionUUID->"df1546f6-fa5e-469e-84b0-e705a1afe82a"],
 "    is periodic with period 2 \[Pi] . Construct the Fourier sine-cosine \
series ( first 5 or so terms for each function) and plot f(x) and the Fourier \
series  approximation . I used Mod[x,2\[Pi],-\[Pi]] ( look it up) to make a \
function periodic over the interval -\[Pi],\[Pi]."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7492622377114296`*^9, 3.749262468782919*^9}, {
  3.7492624998797555`*^9, 3.7492625305013914`*^9}, {3.7492626736257677`*^9, 
  3.74926267452785*^9}, {3.7492627258663397`*^9, 3.7492628101381845`*^9}, {
  3.7492628511180115`*^9, 3.749262851503537*^9}, {3.7493154745733624`*^9, 
  3.749315513986229*^9}, {3.7494774070072036`*^9, 3.749477486882025*^9}, {
  3.7494775391571627`*^9, 
  3.7494775593568707`*^9}},ExpressionUUID->"2c3dc8de-5abe-4f36-ab08-\
740bac827457"],

Cell["First, plotting our function using Which[]:", "Text",
 CellChangeTimes->{{3.7534319534978743`*^9, 
  3.7534319651400766`*^9}},ExpressionUUID->"e927b056-6395-488c-8baa-\
7701d11cb3fc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "<", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", 
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"-", "\[Pi]"}]}], "]"}], "<", "0"}], ",", "0", ",", 
     RowBox[{"0", "<", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", 
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"-", "\[Pi]"}]}], "]"}], "<", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "2"}], "<", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", 
        RowBox[{"2", "\[Pi]"}], ",", 
        RowBox[{"-", "\[Pi]"}]}], "]"}], "<", "\[Pi]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"funcplot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"func", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.753431967258252*^9, 3.7534321068417826`*^9}, {
  3.753432234987129*^9, 3.753432235472475*^9}, {3.7534323235726213`*^9, 
  3.753432325931119*^9}, {3.7534331887211285`*^9, 3.753433190348736*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"6bc27b68-fc79-4b65-b9b3-e8d2a5b71701"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$136684#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-1., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7534320818049293`*^9, 3.753432107447164*^9}, 
   3.753433190975063*^9, 3.753433270545328*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"3e5c0ee2-02fd-406d-8c3c-b19ef7b871a9"]
}, Open  ]],

Cell[TextData[{
 "We can symbolically define our Fourier Series. We will adopt the linear \
combinations of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "[", "n", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "x"}], "]"}], " ", "and", " ", 
    RowBox[{"B", "[", "n", "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "x"}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "95616bb1-b1ac-4b9a-b96b-970f0c239468"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "[", "n", "]"}], ",", 
    RowBox[{"B", "[", "n", "]"}]}], TraditionalForm]],ExpressionUUID->
  "3e5b4459-b1bc-47f1-bdde-6a8c4ff885c3"],
 " are the coefficients. "
}], "Text",
 CellChangeTimes->{{3.753432133940898*^9, 3.753432140634766*^9}, {
  3.75343223444238*^9, 
  3.7534323121123886`*^9}},ExpressionUUID->"85da05fe-9ad9-47f2-9083-\
19bb14bc5cd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "10"}]], "Input",
 CellChangeTimes->{{3.753433009007595*^9, 3.753433010917477*^9}, {
  3.7534332653243184`*^9, 3.7534332657960577`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"cf4feac6-d8ec-4ac7-b793-8b449efa1440"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.753433011968673*^9, 3.753433270666005*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"f5e7ff28-62c1-4600-aa10-fe082fdbff44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourser", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", "i", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"i", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"B", "[", "i", "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"i", " ", "x"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "nterms"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534323164321127`*^9, 3.753432370645567*^9}, {
  3.7534330142375746`*^9, 3.753433016398799*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"8d7e05e4-8739-4cad-a7ed-e3b85a8d3cb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "[", "0", "]"}], "+", 
  RowBox[{
   RowBox[{"B", "[", "1", "]"}], " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "2", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "3", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "4", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "5", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"5", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "6", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "7", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"7", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "8", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"8", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "9", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"9", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"B", "[", "10", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"10", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "1", "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "2", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "3", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "4", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "5", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "6", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"6", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "7", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"7", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "8", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"8", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "9", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"9", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "10", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7534323722572594`*^9, 3.7534330171218634`*^9, 
  3.7534332707168694`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"2ed8ee3d-05b2-43f5-a79c-6fc993c5d811"]
}, Open  ]],

Cell["\<\
We can now define 4 functions to represent the left-hand side and right-hand \
side of the equation after we take the inner
product of both sides and then integrate.
NOTE: \tThis is unlike how we usually define just the 2 functions because we \
are doing a basis of both Sin[] and Cos[] so we need
\t\t2 functions for each basis. 
\t\tAlso keep in mind of orthogonality, we must confirm that whatever\
\[CloseCurlyQuote]s inside the Sin[] and Cos[] ought to match our
\t\tsymbolic Fourier Series\
\>", "Text",
 CellChangeTimes->{{3.753432597444532*^9, 3.753432627756466*^9}, {
  3.7534326718050833`*^9, 
  3.7534327679111853`*^9}},ExpressionUUID->"792be7b6-c2ee-4982-a699-\
f4224691f826"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sinlhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"func", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sinrhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"fourser", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7534326297940073`*^9, 3.753432669549114*^9}, {
  3.753432714786209*^9, 3.7534327201907215`*^9}, {3.7534327716491857`*^9, 
  3.7534328335805707`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"88897631-b849-46d6-aed0-a73122bfd796"],

Cell["Now for the Cos[] basis: ", "Text",
 CellChangeTimes->{{3.7534328400831833`*^9, 
  3.7534328440685606`*^9}},ExpressionUUID->"eed7c344-6688-49af-a102-\
ed535f3a350b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coslhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"func", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cosrhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"fourser", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.753432846222801*^9, 3.7534328803774586`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ac872f4b-173d-416a-9dfe-d7ccec0975c3"],

Cell["\<\
Now we use Table[] to create a list of a bunch of equations that we can use \
to solve for the coefficients. 
We can do them individually, Sin[] and Cos[], then use Join[] to combine the \
2 lists of equations. \
\>", "Text",
 CellChangeTimes->{{3.7534328970120177`*^9, 
  3.7534329826560493`*^9}},ExpressionUUID->"4c35aed7-59bb-43b8-b4dd-\
b344fa850c38"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sineqs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sinlhs", "[", "i", "]"}], "\[Equal]", 
      RowBox[{"sinrhs", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "nterms"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "sineqs", "]"}]}], "Input",
 CellChangeTimes->{{3.7534329863002815`*^9, 3.7534330342650347`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"1e6ed0d3-578a-451c-bde5-f67fcaccd470"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {
      RowBox[{
       RowBox[{"-", "1"}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "1", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "1"}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "2", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "3", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "4", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "5"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "5", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "6", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "7"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "7", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "8", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "9"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "9", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "5"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"A", "[", "10", "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7534330279220004`*^9, 3.7534330615829964`*^9, 
  3.7534332830917845`*^9},
 CellLabel->
  "Out[96]//TableForm=",ExpressionUUID->"622b2064-71ae-488c-80b4-\
2541839db341"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coseqs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"coslhs", "[", "i", "]"}], "\[Equal]", 
      RowBox[{"cosrhs", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "nterms"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "coseqs", "]"}]}], "Input",
 CellChangeTimes->{{3.7534330357001934`*^9, 3.7534330550953465`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"459fa69e-c04f-4429-aa3d-4e8d05c6810f"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"B", "[", "0", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "1"}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "1", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "2", "]"}]}]}]},
     {
      RowBox[{
       FractionBox["1", "3"], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "3", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "4", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "5"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "5", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "6", "]"}]}]}]},
     {
      RowBox[{
       FractionBox["1", "7"], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "7", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "8", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "9"]}], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "9", "]"}]}]}]},
     {
      RowBox[{"0", "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"B", "[", "10", "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7534330585750384`*^9, 3.7534332954716864`*^9},
 CellLabel->
  "Out[98]//TableForm=",ExpressionUUID->"7ede4f5e-9a8b-4bc1-8b87-\
87c36acc7009"]
}, Open  ]],

Cell["Solving for both coefficients A[n] and B[n]:", "Text",
 CellChangeTimes->{{3.7534332257231646`*^9, 
  3.7534332334096146`*^9}},ExpressionUUID->"221dbf6b-d636-43f4-b97a-\
92f3277383df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"sineqs", ",", "coseqs"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"A", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nterms"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"B", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nterms"}], "}"}]}], "]"}]}], "]"}]}], 
    "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.7534330623120937`*^9, 3.753433159583023*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"2e911fff-2284-4919-a1ef-0fdd025570f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "\[Pi]"]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "\[Pi]"]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "3", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"3", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "5", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"5", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "6", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"3", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "7", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"7", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "8", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "9", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"9", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "10", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"5", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "\[Pi]"]}]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"B", "[", "3", "]"}], "\[Rule]", 
    FractionBox["1", 
     RowBox[{"3", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"B", "[", "5", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"5", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "6", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"B", "[", "7", "]"}], "\[Rule]", 
    FractionBox["1", 
     RowBox[{"7", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "8", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"B", "[", "9", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"9", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"B", "[", "10", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7534331543609514`*^9, 3.7534331602113104`*^9}, 
   3.7534332955973606`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"80f91c6c-ef53-4cca-8cd6-2cb010869684"]
}, Open  ]],

Cell["Plugging in our solution:", "Text",
 CellChangeTimes->{{3.7534332385648575`*^9, 
  3.7534332447154093`*^9}},ExpressionUUID->"1bd2c134-2d0f-4652-8cdd-\
c36fd64bf910"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourser2", "=", 
  RowBox[{"fourser", "/.", "sol"}]}]], "Input",
 CellChangeTimes->{{3.7534331642894373`*^9, 3.7534331673372574`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"eb51ceb3-f244-4419-9b23-bcae4b2f24bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], "-", 
  FractionBox[
   RowBox[{"Cos", "[", "x", "]"}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"5", " ", "x"}], "]"}], 
   RowBox[{"5", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"7", " ", "x"}], "]"}], 
   RowBox[{"7", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"9", " ", "x"}], "]"}], 
   RowBox[{"9", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"5", " ", "x"}], "]"}], 
   RowBox[{"5", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"6", " ", "x"}], "]"}], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"7", " ", "x"}], "]"}], 
   RowBox[{"7", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"9", " ", "x"}], "]"}], 
   RowBox[{"9", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"10", " ", "x"}], "]"}], 
   RowBox[{"5", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.7534331679675736`*^9, 3.7534332956472173`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"9e3b71e0-27bf-4c64-8f5e-eb443da59b8b"]
}, Open  ]],

Cell["Plotting our given function and our Fourier Series:", "Text",
 CellChangeTimes->{{3.753433250692438*^9, 
  3.7534332599676495`*^9}},ExpressionUUID->"37b99898-8907-4445-abc1-\
44f53cf2310a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fourplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"fourser2", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"funcplot", ",", "fourplot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7534331706843104`*^9, 3.7534331997954807`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"8eeaeed4-b9bf-4376-b7b8-8d7ba8fa091f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$136684#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
ZTb/u4b+B/ADj14=
        "]]},
      Annotation[#, "Charting`Private`Tag$215857#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-1., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7534331783388453`*^9, 3.753433200545475*^9}, 
   3.753433295775873*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"d2575d9a-997a-42fd-b988-90bdb2fd2293"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"173b55c1-76b2-45b6-bba9-3a342134173c"],

Cell[TextData[{
 "\n\n\n",
 StyleBox["Week 5 Homework: ",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.753433377146365*^9, 
  3.753433382732393*^9}},ExpressionUUID->"78221de6-6c71-4000-b047-\
c14d29bdf3aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P7 .5 .11\nConsider the periodic function  f[x] = ",
 Cell[BoxData[GridBox[{
    {"0", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "<", "x", "<", "0"}]},
    {
     RowBox[{"Sin", "[", "x", "]"}], 
     RowBox[{"0", "<", "x", "<", "\[Pi]"}]}
   }]],ExpressionUUID->"142ac95f-b7cc-4c78-8d97-27567a4c8c2b"],
 "\nMake a plot of the function. Find the Fourier series for the function \
using any convenient tools, and make a plot that shows the comparison."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7498468960016766`*^9, 3.749847020718941*^9}, {
  3.749847066707362*^9, 3.7498471107646523`*^9}, {3.749848575866005*^9, 
  3.7498485821242714`*^9}},ExpressionUUID->"34fd7e4a-815f-4944-8671-\
97d0946de9c2"],

Cell["We can start off by defining the given function: ", "Text",
 CellChangeTimes->{{3.753433902682498*^9, 
  3.753433915149169*^9}},ExpressionUUID->"3c57aab1-1e1a-4132-9663-\
284fa1115ac6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "<", "x", "<", "0"}], ",", "0", ",", 
     RowBox[{"0", "<", "x", "<", "\[Pi]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"func", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.753433916397834*^9, 3.753433941566543*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"292226c5-4f0b-4fcb-ac5d-1251d7bd731e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQ7eXJ5/xbkfMAAxRYb635wCGH4Osovp4rJoXg8/08
/sNQCMG/uKJxXQYTgh/B8VXy2iMOOD/9+O0PGxYj+C2uK+elqSL4hVd+CU0W
ZofzT8VKvXgizAbn/923aoOVJCuc/3jTx4mBnCxwvtlCtiu93Mxwvo3SJb3u
H4xwvkw1X23PKwY4/8Icw4i0u//3w/jnMzY/N939F85fpnnRImDvbzjfYNaF
gqKTP+F8RQPbW2Krv8P5r3a5srJt/ArnS2fvTizv+Qzn/zsltPRD4Uc4v9ie
JyTz+zs4f4fx2QNft76C89cLHtsgvvcZQr3VTGa7/EdwvlVrvMeLrDtw/vuM
P/31HVfg/OYjs63sfxyH86/ttjmyinkDnC9TmXTvE896OL+nyttkgtA6OD+7
VvbBKdk1cL5W80FzB5MVcP7KPs7nWokL4PxJ5tlbTmQmwPkAvZqcWw==
        "]], LineBox[CompressedData["
1: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
X/7b/geGp77J
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$215903#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{-Pi, Pi}, {0., 0.9999998592131705}}, {{-3.141592653589793, 
    3.141592653589793}, {0., 0.9999998592131705}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7534339421380124`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"6d0d1240-51da-4c00-b847-403104b971a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourser", "=", 
  RowBox[{"FourierSeries", "[", 
   RowBox[{"func", ",", "x", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753434378154499*^9, 3.7534344168020597`*^9}, {
  3.7534345433502626`*^9, 3.7534345446109834`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"637568ea-d556-4de0-b62d-dd3fcab764b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]]}], "+", 
  FractionBox["1", "\[Pi]"], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "x"}]], 
   RowBox[{"15", " ", "\[Pi]"}]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}]], 
   RowBox[{"15", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{{3.753434393467125*^9, 3.7534344207716246`*^9}, 
   3.7534345461663733`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"2b56f371-e918-492a-95d2-21d6474a8fc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourtrig", "=", 
  RowBox[{"ExpToTrig", "[", "fourser", "]"}]}]], "Input",
 CellChangeTimes->{{3.7534344108070717`*^9, 3.7534344241530924`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"d7864855-b6de-41d3-972b-0adbfe41dd11"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], 
   RowBox[{"15", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.753434424956809*^9, 3.753434547819341*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"387e5b98-09b2-4b90-a01b-7ca03c1d3f83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"fourtrig", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534344297325134`*^9, 3.75343443792409*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"09623766-7d9a-4419-8cc0-161595f74151"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
f47OWQ9Y5rn9wd9znSusJa7oqXwki5JVP6L7rcXux/fX0FDBnht3+5GhAk1G
8Qe+L0/G5Fld6UfEyJ8cy5I+aD4hwST+KI67k13Orfggxy3p31iHfyO6/pR0
si8Fvewpo/ww/I0Mc1qdDYL8UexJ5QcDWjjevHM4heGPUGClwprSbxSXunj7
2pUARLhQPXF872+krXNd5z5LIHLPaNIK7qKjKb3nB78WBiLyywGemzp0FLen
/VzajmCU1mk6bqNMR5Ip1AKGfDD6Lj3yxVcS68sfn682DkabhyaelWyjI+vV
addDecFI4O3kRwjvQ0LBuhHaWiHI4NqsoY1dHwps6vw+ZBeCYjgWdyTq9CHr
UOPyjcgQJGTNZMe+vQ/F+cbXvusPQYeVeU/Xef9C2rzRRelPQpHpv10j6ya/
0FTRoCd3QChKe7f3jaQKjr/ZETvwMRSJ7zyyGkL4hUg8WyzaGKFI8s8Z2i2n
XtRYO0J6axaGbKhKNn56vUi7tij7smcYyrl8/kCZXC/idlN8oxcfhuTyNDyE
Z3pQ1qXe814dYUje857asHkPmkr5W8eqEI6+L75IvnsZxyPiPIeuhiN9i2jm
tqM9yHrIx1TyYTh6dq2rpHz8J7KeyhuYCAhHrN8Wdp+u+4mmbgQfuJcYjoLl
+RwyM34iwsvfNSc+haMs4WtSUZY47vc0ZrgrHEGYjf8OrZ/I8OXTR3Wj4aie
M3DM+wRmPfM/m1fC0TijNtluqhsRQ3cc8dlNRS7GY8xjjd2oMfpq6NcjVLS5
Y5Ph/exuJDSdM39djoqOlKkKaNpifcnFQWNNKvokZeLwRQfrBQL4+25SkUqy
e6u8TDfKyhWnJD+gopZdCVLZPJjVBELzLanIyI/mf2SuC0lOf/fa6khF0xu/
xmJau5D2e/7CDyQqIj1dU+PN70JTf/Vf+JP/9/dBwRTfMKwXMpTIC6Ci2Fvy
LEz2XYjbxE1QMJyKjtXrGzrc6EJZo9Hx5VFUVKLsUDpxsgvRogT4UuKoSD0/
TOABfxdqTF1q/JpERV2ieQ7dC52IsLNJ/EAaFZlFN7dqd3Yia2h//uk9Fc1v
n5b6VtiJpjz6hdzSqcjTfXuAYmQn4s5ztHHPoCLehWPjuU6dSDu15nsh5kRz
jUvit7C+rsxTCLP0L/OUOHnM+f+Yij5QUflVHxZ+Qewf3hBFekdF2lWphq9X
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
///HIypcjGw6opEF/we0EM+Y
       "]]},
     Annotation[#, "Charting`Private`Tag$220820#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.023123633686430722`, 
     0.9880750645209913}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.023123633686430722`, 0.9880750645209913}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7534344388731527`*^9, 3.7534345498047905`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"91a9752e-8e36-48fe-ab24-5577cc642d02"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P7 .8 .13
Find the complex exponential series  for f[x] =2-x -2<x<2  , periodically \
repeated. Explicitly calculate the integrals that define the coefficients for \
every exponential term.  You can check your answer with the  FourierSeries  \
function. Consult the Handbook Fourier series notebook for guidance on how to \
do this. Use ExpToTrig to show that the complex exponential series is a \
conventional trigonometric series in disguise. Make a graph of several \
periods of f[x] and compare your complex exponential series to it.  
Recall that Mod[x,per,off] is a convenient way to generate periodic behavior. \
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7498386400091085`*^9, 3.749838753248191*^9}, {
   3.7498388453679786`*^9, 3.7498388852758245`*^9}, 3.74984238356509*^9, {
   3.749842848725953*^9, 
   3.749843018052079*^9}},ExpressionUUID->"7822fdfd-549a-45ef-be77-\
41917bd62f23"],

Cell["\<\
Defining a variable to represent our function.
We use Mod[] to graph several periods. \
\>", "Text",
 CellChangeTimes->{{3.753455599166499*^9, 
  3.7534556279505424`*^9}},ExpressionUUID->"433b7c3e-b465-4b40-a24a-\
c03d014bfd0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"2", "-", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "-", 
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "4", ",", 
      RowBox[{"-", "2"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.753434670624398*^9, 3.753434706389779*^9}, {
  3.7534348234617157`*^9, 3.7534348770304976`*^9}, {3.753454890343891*^9, 
  3.753454905289895*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"10c3fbe9-0348-4454-aa7c-38f13b953919"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAfedN8v//I8D0nTfJ//8PQOZ7FvXb
/CPAmO9Z1G/zD0BOEN/3t/kjwDhBfN/f5g9AIDlw/W/zI8CA5MD1v80PQMKK
kgjg5iPACCtKIoCbD0AILtcewM0jwCC4XHsANw9AlHRgS4CbI8BQ0oEtAW4O
QKsBc6QANyPArAbMkQLcDEAFZUcyGV0iwBSUHclkdAlAE9jFbKKRIcBMYBez
iUYGQFLDmmMpyiDASA1rjqUoA0B77z1skOMfwOy997BBjv8/uHeaaq9PHsDg
3mmqvT75P06SVSD+mRzAOElWgfhn8j9Hnb1OSOwawDjq7HVCYuc/8I3c/ATm
GsCAb+TmJzDnP5p++6rB3xrA0PTbVw3+5j/sXzkHO9MawGD/yjnYmeY/kiK1
vy26GsCQFKn9bdHlP96nrDATiBrA8D5lhZlA5D92spsS3iMawLCT3ZTwHuE/
IKO6wJodGsAAGdUF1uzgP8mT2W5XFxrASJ7Mdru64D8cdRfL0AoawOCou1iG
VuA/wjeTg8PxGcAgfDM5OBzfPw69ivSovxnA4NCrSI/62z+mx3nWc1sZwGB6
nGc9t9U/mTJ2Q6lUGcCQKWM3lErVP4ydcrDeTRnAwNgpB+vd1D9yc2uKSUAZ
wCA3t6aYBNQ/PR9dPh8lGcDQ89Hl81HSP9R2QKbK7hjAgNoOyFTZzT/H4TwT
AOgYwOA4nGcCAM0/ukw5gDXhGMBAlykHsCbMP6AiMlqg0xjAAFRERgt0yj9r
ziMOdrgYwGDNecTBDsc/AiYHdiGCGMBAwOTALkTAP/WQA+NWexjAQD3kwLjV
vj/o+/9PjHQYwAD6/v8TI70/ztH4KfdmGMCAczR+yr25P5l96t3MSxjAQGaf
ejfzsj+M6OZKAkUYwAAjurmSQLE/flPjtzc+GMAAv6nx2xuvP2Qp3JGiMBjA
ALIU7khRqD9XlNj+1ykYwIArSmz/66Q/Sv/Uaw0jGMAApX/qtYahPzDVzUV4
FRjAADDVzUV4lT8jQMqyrQ4YwABGgJRlW40/FqvGH+MHGMAAWKwaf4x/P7I+
NNaHBhjAAMj60Fgfej8DIIiq
        "]], LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAATsHLKXj5F8CcgpdT8PIPQO/ru2aD
8xfA3td3zQbnD0DiVrjTuOwXwMStcKdx2Q9AxyyxrSPfF8COWWJbR74PQLqX
rRpZ2BfAdC9bNbKwD0CsAqqHjtEXwFgFVA8dow9AktiiYfnDF8AksUXD8ocP
QF6ElBXPqBfAvAgpK55RD0DOP/YHeKIXwJx/7A/wRA9AP/tX+iCcF8B+9q/0
QTgPQCByG99yjxfAQOQ2vuUeD0DiX6KoFnYXwMS/RFEt7A5AZjuwO15DF8DM
dmB3vIYOQG7yy2Ht3RbA3OSXw9q7DUB+YAOuCxMWwPzABlwXJgxAAC0fv0OF
FMAAWj5+hwoJQNqLmYer1RLAtBczD1erBUAcCmip9EIRwDgU0FLphQJAazUq
BdscD8DWalQKtjn+P2M33qjDwwvAxm68UYeH9z8qeDr/bqQIwFTwdP7dSPE/
od1TxHlBBcCEdk8R5wXlPzLkMvrUNAXAyJDL6FPT5D/E6hEwMCgFwBCrR8DA
oOQ/5vfPm+YOBcCY3z9vmjvkPyoSTHNT3ATAqEgwzU1x4z+yRkQiLXcEwMga
EYm03OE/xK80gOCsA8AgfqUBBGfdP1W2E7Y7oAPAqLKdsN0B3T/mvPLrlpMD
wDDnlV+3nNw/CMqwV016A8BAUIa9atLbP03kLC+6RwPAaCJnedE92j/WGCXe
k+ICwLDGKPGeFNc/54EVPEcYAsA4D6zgOcLQPwp9r++TCgLAUOh7fZ9U0D8u
eEmj4PwBwOCClzQKzs8/dm59CnrhAcBg59anoBfOPwZb5disqgHAYLBVjs2q
yj8kNLV1Ej0BwEBCU1sn0cM/SC9PKV8vAcCA9PKU8vXCP2wq6dyrIQHAwKaS
zr0awj+0IB1ERQYBwEAL0kFUZMA/Qw2FEnjPAMBgqKFQAu+5P2YIH8bEwQDA
wAzhw5g4uD+KA7l5EbQAwEBxIDcvgrY/0vns4KqYAMBAOp8dXBWzP2LmVK/d
YQDAgJg51Wt3qD+G4e5iKlQAwIBhuLuYCqU/qtyIFndGAMCAKjeixZ2hP87X
IsrDOADAAOdrEeVhnD/y0rx9ECsAwAB5ad4+iJU/Fs5WMV0dAMAAFs5WMV2N
PzrJ8OSpDwDAAHSS4clTfz9jfWisDw0AwADG+tBYH3o/PueXmA==
        "]], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAOQUvp+Dl/7+cgpdT8PIPQEp1ff8f
zf+/pbq+/4/mD0CRa7FmubH/v8i1WLPc2A9AIFgZNex6/78QrIwadr0PQD8x
6dFRDf+/oJj06KiGD0CGJx056/H+v8OTjpz1eA9Azh1RoITW/r/njihQQmsP
QF4KuW63n/6/L4Vct9tPD0B844gLHTL+v75xxIUOGQ9AupUoRehW/b/dSpQi
dKsOQAhb52MBPP2/hK3zsQCeDkBWIKaCGiH9vysQU0GNkA5A8qojwEzr/L95
1RFgpnUOQCnAHjuxf/y/FGCPndg/DkCY6hQxeqj7v0x1ihg91A1AdT8BHQz6
+b+6n4AOBv0MQDDp2fQvnfa/mPRs+pdOC0BEutsJ/VbwvyLd7YR+KwhAcKmv
+BET479c6it+xMQEQFZmI6HSfMm/ZTYSKs2XAUDHzNmKM1PIP2fGpI6Z9fw/
Oi3BslCX4z9jaZ+mVzT2PwJ2FdxkGfA//BPVRzbN7z8HDFCBYu72P/LnX/06
I+I/WCdawDYJ9z9QsUt/ku3hP6pCZP8KJPc/rHo3Aeq34T9OeXh9s1n3P2QN
DwWZTOE/luageQTF9z/UMr4M93XgPybB8XGmm/g/aPs4OGaR3T9FdpNi6kj6
P+wmsnVW3NY/lpGdob5j+j+ouYl5BXHWP+isp+CSfvo/YExhfbQF1j+M47te
O7T6P9BxEIUSL9U/1FDkWowf+z+wvG6UzoHTP2QrNVMu9vs/cFIrs0Yn0D+D
4NZDcqP9P+j7SOFt5MI/3rlLbXi8/T8QMaKVPBzCPzqTwJZ+1f0/MGb7SQtU
wT/wRarpigf+PwChW2VRh78/Xqt9j6Nr/j8gSiUIx0W5P7qE8riphP4/YLTX
cGS1tz8VXmfir53+P7AeitkBJbY/zBBRNbzP/j9A8+6qPASzPzp2JNvUM/8/
wDhxm2SFqT+WT5kE20z/P0AN1myfZKY/8SgOLuFl/z/g4To+2kOjP6jb94Dt
l/8/ABYJwp8Emj8EtWyq87D/PwC/0mQVw5M/X47h0/nJ/z+A0DgPFgOLP7pn
Vv3/4v8/AEaYqQIAfT87BS+n4OX/PwDF+tBYH3o/3sGcpQ==
        "]], LineBox[CompressedData["
1:eJwVzH9QkwUcx/GHRxYrNh4E2QBbInFTwgtCZ+Co7/fklPASgSl1gEITiMCw
Mn6MBQ0DciTjsBknMxiTA8XJBmcG/WFDaAeby51T1xmLhQgEaI9sRWJlT398
73uve999NkqPZhaSBEG8ytz/v6CmWE9xCTx7vE1CL1OonlVnnHyRwCNhpf3H
JincKdlXRMUReFVvPEPfoJD+/ln5qSQCA/HP+vdHKezYMtYSkkqg1CH+YOEK
hY9ZicPrpQT6rZp3z3xNYc9HHltHGYHZzZz4d1op3D91aXqjnEB9RKbgl3oK
jUORnM1qAtNTXB5nKYVFpZy8bWYC29UerTWRwlv2Kd+9L/ngltiIJ4O3A9Co
aUyvXfbB9AKZoY4bgNbgxjmKIFG0JAuln3Jx9ouG2i4uieEfV9cdWubi85/U
68c2kzjzmVwidnLxRO5xtn8eiVXnala8Wi7mC2pNbVYStdN1ULyNi4Gd5XED
3WuQzm+6kZbDwaO6gsCZLBa2HtT8vv7Cc3iopF3weR0bdacLp6tq/VCZUZG4
9aw/VvYrzdcP+6LvutOzn64G4N+LJWEKlg86rQ10PbUWu+3zry2NPIEDcun2
9tEg1AdVCNseeeGI/2Lkj9nrUNvdO6+KfgAbLpq/emYhBNm9llSrwQ37O4eG
LXQI5rPE8X0yNzR92TepWglB4+GL4cpkN3jlqkg+i4cmDHU290+B5c2s/k0R
PMzfqglv+McFFQ/v//BGFg+1oV1dxzR3wfYK64+mazyMu6c3pDsdQApX+Psm
eOjubFYElDogIfy3HcF2HipyyzKu/3sTdKRNoXEx/XasJ0V4E6ocao7+L6aP
D26HcjtElUdF2V7moyLnQ3mO0ALZ7/FSWkV8NN2KFzj3TkDLQXbJgSQ+RqR5
r2aWj8PqriWDK5XpWEnuGTODnXdZ/LCAj4SwRpkgHQX5ULKE0vARf10bG5M0
DPG5djqvi9n3zFvXnP8WFp7mqoy9jFmm4sngK5CdUjGRcZlxdJmueXEQghbJ
d3XfMRbvgqK3BsCiavH1mJh9TcJQTaMBdtw5D2ob43vqGLfoAizLRK4ZB2O/
5MJWbg/0Ca5Vi+4yjnnUsfO+DqQjaaGNbsYdrw/MyTohrPDnb+7MMp5rj9oT
fQbs7GLJpgeM41ba9D+dghN6L13pYUz38F4IVELaiDW66jHj8VX72xuq4T9T
O4HZ
        "]], LineBox[CompressedData["
1:eJwVzHlIk3Ecx/FpMdA2HxJZzzP3pGu2UNJ5TDs2/X2FJEnNnJnFgnK5FCvK
rHUq4llklI5prE28WpZJ2uEy7QBn2cwjdGY5u53lippHmSX2648vH9684MtX
HJQpnRkMhgjf/70VIR4qZpKgy6tI/DFJQLpkVdp9FgmBZ5uDztkIGM6DGjlF
wpa5nLboHgKMS7PIymASyqxUX4eWAJVoeLFASYJHdfzP1lACAgZSa7L2kVC3
I6yN9CXApnIgUyYJYnc69xiPgKSHrqeUOSRsy59wCV1EgDgu3HG1goRLykK6
qd8NpjJqRlebSeD6tW0w7HODQ4b9LWEiCrxvC9Vl1Wx40+epcQujYMPuLssH
NRvifpuzbFIK9rIzyJAiNvjF+gaVb6LgRlqjfiCDDZ8cYw0zSgrW8sT1HmI2
JIfvqr6jo0BWGPmg/AkLIgYTSoJduVCQvHNca18CLOc1ioAxLnz+UyqpDXWF
qANbNX5qHqhWJluuv2IC2UofjPJZDv3nTfyjxkVQdvhMaeBLL7Byv1srExgg
K4r317d4w6GefA0nZg75yQuS6rL50CQcTRx1n0ZDNpcaddIKqCpLedtpmEC9
irFIdy8BgCGxw0hb0fvFV2c1KwTwbo+XHRpH0LQh/SYlFEAu3+5ulo4gym7n
8f2x6/IUVvlrlJo1+Uskwa5udnLSDqO5/IXGuGQBPM4lYBPHgoRXKO7ZC9hb
yk+00s/Ruo0j/Sw19qCAZ93SbhT7RVd8sVwAjMZO8o3cjDL9vWcq9Nhrp43O
2i7UflfYb2jAXir7GcPpRLInIUWmp7hf8mztdDtSps9Io7vx/56Ywvfy++i4
q3Gquxe76aQPU3sP6TevTxmwYG8eVsRz7qLPQyD98BE76fuog76B5o47TynH
cTOL51naesT2NF37MoF76pNkG+cKCt61cZnDgVsXmfmC1qEoJ5feIzO4VfPf
9nA0aHutuWB2FnfVYctXugRlRJVITv/F3TSoFyw/jbLH4yYXFnAzGMyg1MsR
/wDXOEKV
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$271294#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 3.999999591836735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7534348776518745`*^9, {3.7534548913940725`*^9, 3.753454906069827*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"24ec729a-1c24-4709-b4aa-9e4db06899d9"]
}, Open  ]],

Cell["A orthonormal complex exponential basis is given by: ", "Text",
 CellChangeTimes->{{3.7534349600721617`*^9, 
  3.7534349714681635`*^9}},ExpressionUUID->"0be91306-6393-48c0-bc51-\
bc5ab32c8231"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cexp2L", "[", "n_", "]"}], ":=", 
  FractionBox[
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "n", " ", "x", " "}], "L"]}], ")"}]}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", "L"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.753434974964278*^9, 3.7534350026517277`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"a6439311-27c0-46e8-afad-c3a4d3f03112"],

Cell["We also define a Hermitian inner product to be: ", "Text",
 CellChangeTimes->{{3.7534350258314934`*^9, 
  3.753435033464808*^9}},ExpressionUUID->"f3563108-2ba0-409d-b8ef-\
e612bf683aa6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hip2L", "[", 
   RowBox[{"f_", ",", "g_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", "/.", 
       RowBox[{
        RowBox[{"Complex", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], "\[Rule]", 
        RowBox[{"Complex", "[", 
         RowBox[{"x", ",", 
          RowBox[{"-", "y"}]}], "]"}]}]}], ")"}], "*", "g"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753435035655781*^9, 3.753435070861568*^9}, {
  3.7534550561137776`*^9, 3.7534550595535574`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"ab3c0170-d428-4713-9ca0-1ee774772af4"],

Cell["\<\
Now that we have our basis and its proper inner product, we can construct our \
Fourier Series, however
unlike how we usually define the symbolic Fourier Series first and then solve \
for the coefficients A[n].

In this case, the prompt tells us to adopt complex exponentials as a basis. \
We can generate the basis functions using
cexp2L[] and also we have to take the Hermitian inner product because complex \
inner products obey different axioms. \
\>", "Text",
 CellChangeTimes->{{3.753435098264258*^9, 3.753435122286914*^9}, {
  3.753435284051508*^9, 3.7534353263360815`*^9}, {3.7534354989734235`*^9, 
  3.753435503218382*^9}, {3.7534562882463207`*^9, 
  3.7534563405474987`*^9}},ExpressionUUID->"431cc71c-0384-4769-b70f-\
35a9e55572e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "5"}]], "Input",
 CellChangeTimes->{{3.7534356165053864`*^9, 3.7534356183636074`*^9}, {
  3.7534550211093884`*^9, 3.7534550215352416`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"86ca73cc-ea9d-4392-b6d2-2d08baa24497"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.7534356190945015`*^9, 3.7534550227469935`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"7a96e4aa-78c8-42e9-b583-df3dcaf86602"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourser", "=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cexp2L", "[", "i", "]"}], "*", 
      RowBox[{"hip2L", "[", 
       RowBox[{
        RowBox[{"cexp2L", "[", "i", "]"}], ",", "func"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "nterms"}], ",", "nterms"}], "}"}]}], "]"}], "/.", 
   RowBox[{"L", "\[Rule]", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.753435228147396*^9, 3.753435228619157*^9}, {
   3.753435488545271*^9, 3.7534354949193144`*^9}, {3.7534355695677624`*^9, 
   3.7534356089290853`*^9}, 3.753454920096306*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"acde8e1d-9a8e-4ae2-97fb-7b7e2d7e37f7"],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      "x"}]]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], "\[Pi]"], 
  "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]", " ", "x"}]]}], "\[Pi]"], 
  "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      "x"}]]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], 
   RowBox[{"2", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], 
   RowBox[{"2", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["5", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      "x"}]]}], 
   RowBox[{"5", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
   RowBox[{"5", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{
  3.753454869965496*^9, {3.7534549216371837`*^9, 3.7534549473114777`*^9}, 
   3.75345502870004*^9, 3.7534550639138956`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"39471743-bd91-4f34-9068-da01a4bf749a"]
}, Open  ]],

Cell["In Trig. form our series looks like: ", "Text",
 CellChangeTimes->{{3.753455190833338*^9, 
  3.7534551984273524`*^9}},ExpressionUUID->"9dcecdea-1eb2-4592-866a-\
3ede64fe583b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "fourser", "]"}]], "Input",
 CellChangeTimes->{{3.7534552011959443`*^9, 3.7534552040472918`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"1462daeb-9d99-46f4-a9ae-fef49c9cd3c0"],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "x"}], "2"], "]"}]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "x"}], "]"}]}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
   RowBox[{"5", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.75345520454895*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"14576947-3633-4ab4-acd6-42bf77c2177b"]
}, Open  ]],

Cell["Plotting our series: ", "Text",
 CellChangeTimes->{{3.7534555775652494`*^9, 
  3.753455579757436*^9}},ExpressionUUID->"6228a6f6-6e20-498b-b776-\
ff6eee314127"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"fourser", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753455582430278*^9, 3.7534555899960585`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"7a0ac8b7-a03c-4e90-ae26-dc81573d2a9a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
jO4JZmsnhddye3/DOITG4gj5UxtJdR/5pvwwDlj/9emdP9lGarU1ro7BOCzm
ukVGfyvJY5hdYxxjDosOF/bHraQifnmj/+8/Ruy/FOzI1UqyVY2uo8OYa6Ux
qflbC+lApfurCkw+qkg/T+lMC4nlw+vskxjz+NfURQ03k16uGHm4YfZfG+oM
r3o0k0TZKh2vYf7yCZatX+FrJi1feWk80I+D2JHjLPlZTaQYVb2j+D4cCHwr
Ehc410T6EGBo+6sbB3Eu6kfdxxtJUf/ioqg7cSB8PE+/x6uRRNc596O+FQfx
DMqWmkKNpLkYfzGhJhyItmS6xec0kHxx8SHDdThIfKcQumvQQPrAFssnWoUD
rfrLZ/60/SOtKNGhqr84OHXT4KEP4z+SdLLWbM9vHOgsn0k4CfWkOeHWJ5dy
cXD2hVY13aM60hERzzyFDBzoCWiuVKXXkk5YbPdZpuFA/6uKWFBfDWlcyuPD
cgIODEFRV5+zhqQf9P1odzQOLluLv296UkU6zrE+luyNg4AHTv7hPytJNV0r
twtdcPD7yd/7F8gVpM6IFj45Oxzsi7h1rMmsnOSwdmqD1QgHxvHZEuExZSS4
GP7X9yQW73Q884XGUpL47UeLhkdwsEhK7m488Zf0QskzfZMPB5I1SyWv3EtI
Vzr/WvQQcXC1TeuT4Y8/pKKlin7hdWrAnjWujRLFpOh4r+MNLdQgclhHLom9
gPQ8pUzC6gU1PD8zQdnjk0famJWx+eVIDTNm/lXvl3NIA3+HeqNvUENBUKX1
+/Zs0lsREcPVg9TwtfbViePqn0kWxdHfedqoYD4m1nIh1pHk6Wd4OZaDCp7g
IstOqV5FLecyJ24t7SKFN7cquFSeonw5k9DYP7vI6HBHod/xSNTf/Lfiiuku
emBtO1kamYpyhpTKqd/uoKSj+/XKMtPRlVvt20dsd1AL0/S3svovSJHBanJD
fQfFXVVWu+WbiaxD5U6a9W8jKqqfu7eKclFPATFZ98A2ip3kOjiil49UtM2t
PWi20aHmhxaW3QVIyf5ezaeeLWSZqlRmuf4beZi7yUqEbKHt0MjVET8S0uX9
+9Pvzhaq0aBEZAUUI4to4TUmbUxe8lrZIf4SdPK96LW0nU2kKMjQ5zhQgraX
GFtqejfRNmvBatbHv+jWqMMnxaJNFL3BL31YpQzZSZ+tafTeRBbkKnDaLkN0
fLYR3Lc3kcKw29Xs0nKUNFzyNV1vE1XUdgYcNqpEKxrH1yoEN9Ed166K6/ur
0BP/X4KP8ZuIuK+b4IuvRqvu+0PyZigo/V/38S/d1Sh9T7zDs3YKOuve49mS
XYNcv7am1P2loCnJ3l9bgbVIsY74700mBQU29a7vs6xDUPD26mAiBcl59imf
06hHENHgFvuKgmpl+h0fcf1DmRW2ygU+FGTX2v/93cw/1JCqc/eoCwX5gcOq
hUUDsrTpbGC0o6DL0fNcLvUNSONWMIuEBQVJzTgcDlRrRBPqvD9drlLQ+vEF
w4TURrT8JshwxZCCKl8/cMjmaEIrZVecQ3QpKGZ2IaTCswlNay+VHzpFQXe0
HL92TzUhzklrQuNxClKNXayZu9yMOvEeAleOURBxznEK/7cZcTCmymepU1CH
9hKR70ALmjV9ll7///3IN05Scm9bULvlxvkYVQp6PL90EuhaETFzS4dyBJuf
Uw8tLzq1oksvPhzqx1ggbtn7Tn8rKgsfO3gQk59aePj+iW4b6jB6i+/CuOD0
Cikstw0dsl9l/ovpD3j3qC9FvB1RZyLHVjUKura0spUX2o78H7SIUDB/9p9x
FqzbbEd8USaD/JoUtBW/enTwdgd65yLpJoz5X7vsbLzS3IF2f75Nn8U47uya
Mz10oqmKYr3/zyftEl2ihL90Ik6tTKvXGGusrmUf5OtCcW8ZDmthzKTn2nTS
twvdUD1y3Bzr3/N+ff7qfBeyKw580qFBQV/XXFntTbpRUIK0VjTmn+e5DXnv
ym50a+iVsy82Xv1kN71opR4UlzcXFHKYgkQ2Nmw+Jfagnb1T7xMVKIis//hl
EVMvaozkePFRmoKKUigfm1x7kUJcfXPYHgoKoTwuHxvpRXUbOctn+SnI1GBz
hGLQh/bPm6qVsVLQgVR3POvvPjS/4TI+R6Agqq3NPeIy/Uji5aljhesbqMHw
CRyJ6kfiUybBQtMYG3l+/0A1gA5MvFIn9GygPM+iou8qAyjuukzz7ZoNlJi+
U5dvN4Bir0swaeZvIP+WY71/kwbQjnVu6+MPG8hh13OmrmMAVbpUmfKHbSBj
WdJmO8sgknr7WpjDbQPBpV2GIe1B1H/RqM3MfANJP0MCM48HUXJ5deLOyQ20
0UpSpRofRAfJrC8kmTbQEBWVDoPwEMpcUI39NrOOqvfDFS6jIYTTXvz6vGYd
vfEqfiRNGkLHxjym5H3XkfcXqueHVoZQcjozLb3pOrJph0iN/cOI56k23WmV
daQm/yfL4PUwarHd68kytIaUW9qii6qGUalUiOn3vDWk6D7zWG5rGBHFhDIY
Q9aQZBWvFvHmCMrVf8oirryGOK3sm0myo+jxw15nZedVNBMnuKxQNIaozPWb
/zQuo3Gtgx1x82NoeC+q3HizjIamThUyiI+j4hHlvau3llGnqqPv2Itx7Ll0
833YyhIqb6nkijecQNU/02Q+8i+hBCZnZebRScRmklMj67qA3mQH8rvzTqHk
K0yDaacXUPS199sTZ6aQXWr+gaN8Cygorbas9NsUEmJobWovnEcvzg+lHxqc
Qo5pYQLEV/PIe3UtOJFzGgUU+N0JsZ5Hrtril5+4TiOWsaJLHdzzyGlaVW3q
0zTyf3u+2L5/DtmH64sY906jxGE2i1PRc8hqwG3s8IkZ9Pg3ofQN8xwyfxFa
/f7hDNrN/xBwrJ6MTBQ+fGP9OIOcfqhVngknowtPGpynGWdR+Q0/89p9ZHRO
fOza1WOzqCXOuNx4aRbpVG8eq3CYRUcD7N47l80irQfs4srJsyj/PZuT7NtZ
dIxPii65dRYxdMhrOz/E5Ega02xEMvIKSoy/ajiLlKwv/PNUI2N5JeXfeHAW
KTLfyZ6xI6Nq7xnPDu5ZtP+Hx+trCZgfS1ku1tszSPJ6hHtlIxk9cUjpdZiY
QXtx6WYqhDmUF1odMdU2g4TTi7RSVOYQU7ri+t/KGcRn0CLFcXcOTUlkTkz9
nkGca5OMz97OoX4m+6qzOTOIJX53brZuDr1rWgqqzZxBvkkMU/JU86jpAaHo
csYMwjlz91jyzyPPv3SBdVj7NfNPTXlK88hMvIw7BOufdRZVMRnMo6SxHyoP
imYQg3ILydx2HrkzOUWcrZpBFqJ3c378/z+x5L3J//0roN/5QkyaR/p2Z/eL
jc8gjuXwZJPf8yjyXUHiz40ZZNMn9SajYx5djIwlPmSZRSWVhWGE5Xkklm70
e4/ELBLINnxhzLqAiDqPur01Z5HjuzGPL7IL6MZdfZurV2bRXkc224s3F9C7
ln8hViGzyEfQ8mRK/QKaUR6KicWRUQ/Nhvr65ALqSiRXXhQlI6X54EN6NIso
7LEpq7k6GQV17ZVJFFtEbudENh0vk9FIaa7osvoiMj6os6rtQEYa3/V4dK4s
osaiHY9gfzKKjB1kinNcRIsundcIWJxmfJzx88GLSJ6xsPNmNhlp2zNStNIX
EVF3gWBWRkZxxonzr0sX0byWRe/PFjJaPqE8Pt2/iKh8/0TsGSQjPfnqXrS5
iFLvef8xnSKjFF6zlgieJaRy/uH7/fNktEW9XD1+cAlFrnac1lkko4sz/n/U
zy2hb6H1nc5Y+5c24bzQO0sImkb+umP9CX+yvg37LKGkpp9zwgNYfn8+/eFI
whI6pHJ9XRLLox9RPW8DC5bQFEfsjVu/yYjp2YPw/tYlFGcV8zMphYytw7Qv
Dy8sIY4Kxt5cPzIqvPj26QumZSQ5FCvhdouMuJCic7fUMnomYuNdjOWxnUyZ
3QGtZWRAlZlly0RGZZzXbvmYLqPGIQEbk45ZJLJDvtrutozq55adXeNnkfOE
j8H+qGXEErQymm46i+qb+E4/zVhG1D1+4v18s0jy91fN5ppl5OLrIsBYN4M8
P55QkhpfRmYWa+cl3GdQ26t2WXfcCgp8V7ElIz6D/Kyp+cSPrqCXtHQpm+bT
qM8gmsXl4goqG3+l27k6hVTU99PU3F9BA5O8QyV+U2iM9dKiY+oK0l2u5+eI
mkTHKJMT5X9WUF3EiFsG5ySKHvHsF+hdQdoVD87WBk2gU/lptSWcqyjop+1Z
ifvjKD5Z8y/PgVXkne7u+7djDK0GN+XbnF1FF/4dk3+vOYZSLbZSObxWkci7
4SYOygiiYzLwsiCvojzj2DvxJ4eQsdS1YhX6NfRN44KGSuQg+nTCcpdh3xri
GZw/6j8wgPTdXD2yr64h//xzV16N96HosUQ3QtkaOuVEd2FKpBNNUH/O6+hf
Q+P/7lhRvrQjNeGfa18oa0hHe1W7TaMN9RlVPbqkuI702mSeeFg1I8k/Cw9S
364jhwNyJKkJrI7r2cx4nLOOzh/6yt5uVIWq12jm9RvXketWSEBnYzmyVxCw
X6PdQBOCY7p3mEpQ8Zl9X2v2bKAfj6osH8aSEIeVwkyCxgYyUOLLbjj3C+W8
PWGj47iBwsbs4nzNsxExVy9dKHgDKVoXK14K+o6uNV2emP+4gVS3SyW0etLQ
l1lzqbISbN0s0tbpzE1CO0Rb69hebF0txKUt6r5BBvsefbiHresZYRvtedfC
UBJ6OnKck4KKr7vud03xRNVMW/lFclgdoP15tvCcFjrpHGExpUNBz1oy43nE
XUjRr969L7qFyWurjpQN+pImvnwcCPfE2HifzaELgSS1ykzR27FYf9qiKNq6
EFLQ8C9T9R8Y7yv9/lwzlNS3U/aO9d//8rcOsYQFkRQFGnqGJykIxP/1SWb5
kbyVuwTzCJvoWeSb5zwS7qQWg5FrQaKbiEqx3uIx5wmSpB051lwNa3dmP897
0wO5vljvULqEtZ891sK6Hoaqk3B89A6bKPEirUnJxTgkVMR0pTdgE5nbFxm2
5Kcg+06e6MwPm6hB/+3FT3JfUPGyWOvz4k3kwOPUbH0iC3Gw7ee61r2JOqjT
lEYGc5DlfmUjhdVN5J/odf/mChaPUygcx76FHJQGfROLihHR4kxj2/4tlHHk
ytfOwr/omocR2+dTW0huJob++ko5+hJz4/zTm1tIaPTtPP2darSTfTvE6MkW
2mIH3iyuemTw70Gd1Gtsn+JVW+S93YCWafx0G2q30HpLbP7jo63o1J6wgJTx
LUSrulxd4NWOYjTeVLnitpHY3Wn5H6OdSMPp2+k9qtsoTNN9U3a3D/kMtGk5
Jm8jRkama3NKo6gvX/eeayHWfv7l9Y0PY0gtojjas3UbybwnporsmUDzJz9N
BtDtoIf33YhuStPI9LNHaDK2b2vjdi8YGppHas77ulsO76KIpSVWceF1FH0+
ltCtt4smt4Int1k30II0i8Kg1S5K8X3TmITVj2nda89mX+8igeLvm+cXNxHP
8RpJ2q1dRFXCGKrZsYs2aI7mC1pQgT5/s9BSNR5SHZfq4u2pYNX5rX+WFgEu
9n8d2uNOBQR16oNXfxEgI28vk3QkFWQ6RAqOpNKAtS2TmVI5FaRr304ot6UD
ro5yp9wmKuCRWj8X0UEHJdpe/mr9VJBcf7vKWosIwiKrmbBOBZUW8j9JHPTQ
0tBPOCdLDZZv/CULohjAW/MNf4MKNZTaHvdUnWcAxU8XFYy0qKFWmmOKTYcR
An2qrlw1oYZxGYeBoDlGUJ33seu5Qw2r6pREdsQEYybHvMweUYNxtehMViAT
nFDJ/mQVQg3Xcu9LCwgxw3zSPdLEG2rgOXw/pNqMGeJZpVtsP1LDh4NV9naJ
zLAxEbf9oJgaPKOmcq35WCD10hWOlVpqWIr1VM4+zwIXS9ilXDupIT3Oy7jT
hwUy3voZeC5SQ73kAF/aEAvUcPqNs1LhgAFdf/iXjRXGAp97vmfGgX7ZpquE
OitQE55zHxbEwaiQ3N+Gm6wg9MT3S6k0DjJYAsOqfFnhyLKP1mUVHKRZehZw
p7DCBTufrnEtHJAlxr4Xkljh3oj3AzdDHFgyr9yraGcFfxNvIqMZDniND7vC
DCskt3glxNnhYOZF5r/D26xQpOelovAYB1di8x5eoWGDztJndaQXOPihQnPB
nIENljWeWRpG4UDX9mx8ITMbsP58ujmUhMl33NvziJUNZOWfhj/MwMETJ8dT
ERif/OApQ1uEg7l3k1x7WNjAXNiz+HUNDqpFeGRlGNnAPcrjikwnDnLdyzJz
aNkgmtmDXDCGA6eLI6atVGyQ+fzJc71lHDzk+1Cxd4kVarfdhfqo8fDVdL2F
PMgK44/cs++z4uHeKVc+mXpWwJEfn6UWxsPAa8GImVxWELZ+PBguiwfndgn8
pQRWUO1zc92nigcv+bEmT2z+jC67seacxMOr80p0L26zgn29a+ppIzw8upUj
H6jDCilFLi029nhYrHtQuUtgBZKKi+2WOx7u/jlv8XWABbq+OeNCXmK/A4bb
3I0FLMCW8EgxMwWzl1AStmbDAvt5H1WcyMLDsGL6oupxFjgV+tC0hYSHP0mS
Hvd4WODJU6egtS48qE2Of5ArYoYJswcTmuwEGB8ztTKlZQZ8h8PTfyIEeKHw
515kOxOIGDjw3JQjQFuZRe23NCa4CPe1fU8ToNPyChuVLhMUi91LrPYgwK4q
G/dGOCN0x9gdMQkkQE+VlbSaNSOsstnVz8YQgEvI/L6sGiPIUdtusf0gwGl2
5lm7EQY47WYTkfSHAFEqL7PGChjAYuGurNI/Amyb9+SZhjNAzOAd4ytTBJC5
UuETpM0A2VfvzE2sEYDfwH3YXJQB6htv+z2moQHhUY4Mh016IJRY/3gnRgMv
S799c8ylB1E1a90DCjSQyfBp1O01PahlWQ0Vq9OAfVFO6JgrPdxPsmQbuUwD
pfN3y5mAHkLcYuNCbtGAZ4KBna8UPXwzqJc+6kAD+mht7BQbPdRL4X8OP6EB
Ud3hW5cpRCDvHDke8pIG1HxCpH6MEoGlza5ONZoGJjL2hpk3EUH+6/urw0k0
IO+VyXe9mAh21xkdVQtpQOaZrLBSIhGCDsHOUCUNvNp/Sos5nAhf6B8FBLfS
wJmeW+Myz4lQO5DOozpEA8nGLy89dyPCdG5f0hCZBi46P+QUuE8EhlDOA8Gb
NCCwp2ds0IoIstY6v44QaUExgq2n9QYRzmp6nB7iooXe/at65MtEsOHKag7a
Qwt3xS9P7DUkQsD0mNkRBVo4q/gs30aPCJ9KBGcG1WhhkF5VsVCHCNWxBq5B
p2khOWxSmvkUESYdnhOOXKSF+uMiKxe0iUDUKQgbNKcF6qcKlt7Y81NadE4o
6B4tnOCVqQ3FWGdVPF3lMS143J7muI/J36kzVh70o4WWi5a5nJg+/5TgP4ER
tOB5YavLAbOX5l5yTiWRFrhihHTddIlQeWGtc+ALLQwl/wsQPU/Enqty1oH5
tBAs8qjnktH/9y1vLiqX04LXYR9dFmMiSHZEeQ400YKK4/kcNWz81n670coz
tDDzKMww5w4R/G4oiQ+s00LkONvPCXsipCrd/R5AQwdZTv+CLz0iwuhQU0W/
CB3QjfmMp3gTgVBAdzFgPx30FJrl2Lwkwr5XGgNKqnRgk9yadjCMCJYodf2l
IR2EftThCHxHBF+ebl8lUzoYyDgogEshQsosK3u/DR08yIh11fpEhNJS7Xcv
XeggO2Fd9EQGEYbfusko+dKBztqJSws/iYBz+vazL4wOPn/0z9X+RYS9Z4eP
v3xHB3YCOqcVsfw5sYev/vAnOqg1eHAvrZQIFut61/py6EDAlhuXVEkE739e
Y/5/6eCNEOkCRy0RklJzHA830MFilYP0XD0RSjymd3p76EBe72SdQiMRBi+K
BfpP0kFDaAZ7JZavVHKXeA+v0sFDvxuGWf/fr8QHJPfiiBC856PLKMbQVXTA
n5UIm+c+4a9hbJ659OuQEBEqZOcY6bH+z/yldXqliRC29vH4zD8iJJrdaHmh
TISH7r5L25g/xSrh5odOEKFjgo/taBUR+pkrZnr0ifDVr10qFhvPzsim64vr
REj+EmcvQCKCSKEizSEsbk7DtYX5eUQ4FmH1quchlueIJuxhJhFMbd4Iv/Ai
wm89U8Yz6ZhfnfT1C8FYXn9oWrbCfl8xZ9w8Td4Q4WXS5erkaCIo5U8oVKQS
ITxU5zUuiAiN0sb9B7OJcN15e8v7GRHsYypC4zC7dGTRg5KYHQbiEaDD/P5x
9cfmrDURtMe53/eMYH73ZB9fOUOEgcvPDU8vEKGpATjU1YjgUb5MnbWNxaXv
oHCWDBFyPjRbvOChB3oZh7OnaIkgY/lq3yEdeujOPFadhMWtvJmqNe4iPeRd
XnRmeE8HFloOz+lu0sOAX8OelgA6iNt7fqzHjR6irzYFfzWhA5ZBprQXn+lh
+kbuXlsKLSzf8N/fy8IAevdkPO9K0kJY3Vr3aUEGsKsxiFVjpAV5zdtBWVIM
ALVeRnTzWD0kdGr2BTBAluWDgsJ8Gujswn8/5MgAYfVXWTL1acD5rJPZO08G
uCChxu6mRAMcBUOsxEAGMLGStQ4UoAG92D8OvckYH/KPzRonQNGVp4f8WxlA
gIPQsuRHgOsV5KHFQQbgYrDJWb9PgHUV04gbZAZYk2gc9btKgIM8msuH6BhB
tvZH6RUFAtQ//5LyjpMRTjE0/fjATwCbFcFLRDFG2CqssougIUBKC+Vnryoj
zBwf7jDrxwNo21jrnGQEg5XII6fq8NCb3cmTbcgIJXo637t/4YEnIs/F34YR
xGWO4kTe4iEbJy295MwI53JeZdUH4sHA8XXHDR9GSIjO2afigYeXhs5HD8cx
wnBSXcR+CzyE18rafUlnhNKnRRVZF/EQd7o/XiKXEY4eS+xk08HW3ZKIxvhS
RlCmG+XX1sBDhqYOga8J85+aS/HsQTwU5G2pvOpnBJFVC2ExKTyUHs68yzDL
CA8F61AJVifUf7OK86EwQv/+lEty3HjokBH4t0XHBH9SYryuMuNhKKWe2pmb
CUhpyue1afEwI+qjNLeXCZ5k1+aO7eJg9c2R23cUmSBps1ZKjYIDKp6Z2EFN
JtDj8vY9soLVda8Sa69h67ICt/Kh9nkccDFd2m02ZoJvep8F2GdxIPKC/tA5
ayaI19jO7pnEgTSuyLLcCVvHrYrpDo7j4JCH42vkxQQBcp4FhFEcaKxLVueF
MMG+2Qec+sM4OOXUvXUwjglyxf0J+CEcGJBDD3xOZ4JFi5hD/IM4uHZX22Jf
LhOc/Ny8/f/7XS1H1iPflTLBZLh5wDGM7c2+VvA0MQFXuEjV/+ejLl03KaH9
TGD19eUza4yfXeKRp59lgpupuZdIGAc0VJt5U5jAovp2qwqmP1L3afgmHTMo
OYh4/ME4vvxw2UNuZuBRPFn6//3LtOMTa7N7mSFhSEdiCOOswjjZ24rMcOrx
N8mbmP+FRwxvDGgyA2crr2UZxuVZNGFXdZnhy8+Dr/EjOGiQLyhpMmaGD1K+
iWwYd6XZr+haM0PFF5GwQUx+RFxcuswJs5fJ/80WY3J8+7VjXswgMTbmnYLZ
W+cPCs4NYQY4b9PvhfmHi4JixThm+L3cOrLRjwMmtpXF9HSs7rI6wfT/eShP
YLqEeC4zBFrvyEd240CM1tQ4rpQZdkzD/FM6cCDrxRHI3cQMqhaWFftbcaC0
Vf47pJ8ZYvv30O9txMExF/d5ullsX3A1ZfRpLQ50Fg+Ie1GYobss3OlYBQ4u
3Bu5RKFjgQn3V+eu/MGByUSMvxM3C5ymMLwuLcCB1a1zv2b2ssBnqiAqr2ws
Pn3UZCtFFkga/V7z4jMOXK/miPVrssCW8Zv6Fqzu9m6xMTLWxfYdIlvOlrE4
CDov6tdozAJfPiTWHg7FQXR1c95ZaxZgKvB2Al8cJJ70n/7rxAIK09Zf/V2x
ul59wSAnhAUY+F22KkxxUJTzwedAHAvw61ZmFhngoPLgtZy0dBb4CEfU5o/j
oEfqr+DbUhY4LEvdSb8XB2NJLvpcTSzgFbf9bJUNB/PCcl7B/SxwsOaSoNQu
NRC4osaeUligfPRj8y1sH8RB9mThoGOFgXOOfC3l1LCn8o5KCicrNPcz2mVk
U8OxJxp+lXLYPsdccao4kBrcRoYl2M1YgX6PRGO/MjWQfxyySvrLCiPPl7l5
XKlgO0QoWKmBFViNSB3aZlTAdJf2Z3kPxpOuOYanqEBGuIswvcIKE62lijJc
VJBVAk38XGzgvP15X4TZLpqRnXhgcYoNfkX8HWDp3UbLvL3PP+th+xzFt0X3
vm+jTUJT7PIFNigOfCAb672NGPp//fEzY4OtNxM1wfu3EXttRus/KzZQ25cQ
/IB6G/Hlf5jks8P2LcMbQ5c7tpBURCj7Z1c20Jw+smT0cgspPPOVWPbE9jk5
aunPbm0hlXtuRzWfs4H1x4tdHce2kPbpWzf/vWKDAZ+MYbmNTaSnZPyIL4YN
2I6Kqx3p2ERGe869vBnPBvUS77Zf5m0ii02VzKVPbLCt9JRDyGMT3Z3YX6aR
yQYjPe+LLG5uIodWsc7nuWwQd/TdC6rTm8i1hHu2/jcb+NX7lq/Kb6Kn3xmo
+UrZYDaKbvgkzybyi9vlulmN7dt2mi/M7lJQyMtl6U8NbBBYnhA7PUVBcbf6
DDR6sf7mPTRDpRSUYtBs+XyYDSaZBL2bsinos2ala/0kGzhUPnnBkEJBWbK/
g3jn2eApy/dVnygKKuDNSjRfZYNbt5ZrjvhT0B/Cxx/pW2xAlIoSF3lCQZUL
bysXcewgJDJ1TOEBBTX0hfWo07MDb/T2S9PbFNRe83zel5UdXqaQ3qeYUlDk
sXcnL/Gwg/1v49LrlynoQuaPNxLC7NCcmrCrcZ6C2PbVzq2Is4N5h4KA6hkK
qo8e1i6XZYd96pYT6toUFES/GRt9kB2qGn5dVQEKOvuEY85alR2IyhN+XJr/
n3/KaB9B7HDCJL64RI2Cym8ej6U7xQ6dFvQJckcpyLfFmNyuxw7fCrrYNVUp
6MRpB600I3bo8Z1y6DtCQVQFL2Jcr7HDlsP14P/PQ4vkEmZ1brLDOxblv48x
+ScJOSf477DDJaHbjDqYPjWO+teT9uzARivNoovZW/cdncl/hI3fJVHZTp2C
cta2jgc8YYfNhNbiCA0KemjD9fqaDzvQxvxtS8f8PdS7f0Y2gB2ucsXGRh+j
oPnzWsc3w9jh70satROIgr6VXIuuec0OpvkBDFH/n38qO06/jWcH9diScBeM
ZdNegt0HdvgcEJDUhPWfEHgfpfGFHQQ7CFahmP7U4LwppmzMn6CbTv/fH7Wk
akC9+ezA0mQ23oKNZ6/TeOTXYnaQPuZ275AyBQ2M7kx6VLBDXFja5beKFBRv
zIP069mBvuZ3+qYsBZnUyEeKtLLDyV8HlWAfBQkcOzlJ7mYHZ2fbN5eFKKgj
w+QYaYgdBt7b3JbnpKBo8YcRoZPswN1UJfiDSEEXowMnzOYx/4uZNLq3NhAH
fbKm4ho7mEQomEbObaAG94Jwqh12CKOxUmka2EAh5MbxBgIHtPxmTvZv2EB6
Nyc13jNyYPXir9wvRRuIoYUq/AEHBwjtXK9Q+ryB/PIPaHCIcQDDAf5og6cb
SFvu9KshSQ7Qlvn0vN16A+ESTMey5DngktvjvjS9DeTpGxxmpM4B5S+7z4hx
biCNtZRR8RMcEH+LlFi6tI4odwvVlnU4wBF3nfy9aR05n58eibzMAR+c697e
DlxHSiU4NasbHED95FmiptU6WlQSCFW25IA9370G72muI3uBM0fbHmD6DSVr
dyfWkPVoajBvMAfcXjn9Q0phDe0zLhoaj+AAlv4rm/itVTRU3Xok7w0HsA+w
0CZVriLTDMKQcRoH/HrtoWpvuoouuVuovPmL9Y959TnQcwVFv+OiXavigJRo
idpAnRXURipvNWrggLaYS8NMHCvoMmH/I+ZebDyGV8JGkpeRcfBS9rNVDpjR
OPwJypZQzPcPPr1bHBA9FOTzNngJdTReMVLDcwLzjpPJvstL6CpP4eISKyc8
T506zz+xiK4l+B68LcMJMY/65TbZF9GbPyrUpQc4oaSwwFqxbwF1D080iKlw
QsbVU1HHPy8gE+lzDl0nOOGFV/wNHZ0FFHd2Fx05wwkzJd59lnwLqMcukzXy
PCfQ/FSi+Tw5j25kcn8/Z8IJi1dONlJC51F8c4XnJwtOiPqm1ChhNY/6Vtz0
6e5ygsnLXfbf6vPIVK1vtvgRZv/aX3xz1xyKNwn7LfyEE663uBUdfDWH+j1P
BD/25oSgOUH/xrNzyPxvqpxSKCeMnBhllKwko8RR462wKE6IfNrAshNIRoN0
jLWzbzmB4d+HsBtGZLRX9vfbs0mcMP3kp5GBCBlZ6N23/ZjGCecplan9M7Mo
yX6POuE7Jxwihl3lIM2iobBmhps/OaGDLjlrJnIW7c1+3vX7FydI/xS/7WA/
i261HvkkUMIJA68JkXG6syhlbdLNpZIT7F138u7JzaIR/rgzLfWccFtU7Wcv
2yzap6HPf7CVEyjvssuG12eQpSnVZHA3JxD0rz9/ODKDUp5l5U0NckLDhzWy
V/MMGk2y9D89gekbqzLfLJtBkmU8xilkTpgLX31f92sGWY9XSlGvcEKIb+bk
0I8ZlErvvnZjkxNiL8pN7M2cQeP75SsKqLlAIF+70TFjBknr90fzErng7KW5
Oz+zZtAdh1fWD1m4gGh5jb0mdwalhWupNHJxAe5lSder/99/+2OFRkGQCwx3
FiNHq7D+7R9bA/ZwwTt0dyihbQbd3bj6YVyKC4S0OM/FjM6gT4JMj7QVuCBI
O94kZXUGTWkWab9X4oIuYd1vr+lnkay5A9eOGheESmmwaIvMIhvvvSPXjnPB
ZPyBcDelWfQppSU79zQXUL2J+UmrN4umy/18uPS5IDqFziXPchbZMU7vrb/G
BZIuczy5MVi7WwGB8SYX3JomN7BmY/omXo6dvs0FIiwGzVl1s+h2mfSnP05c
oBJWP0ONJ6Oxw+uBO25cYLPkF39cmIwskyruqT/jgocB/WxLKlg+PLU++DOI
C3xlcxLqb2P5M6vMuRjOBRkxOtoBnmRkbkKzohDLBYtiP6m6I8iov7qlzTaB
C7RkbjMHfCQj06MpeWkfuGC+SZPjZj4Z9X50ejP6mQui3jafla0iIxMerSd7
s7igY672U0YbGXX5cpia5XGBgQ8frniQjK4uDaK4Ikx+P9MeiSky6riZuaez
lAtMyDpbX+fI6HLDMzxPDReMLRo0yCySUesxg9ELjVywwV2gfXeBjC5+Fa0I
beeCkJXxkGOzZNQsOJdW28sFnx1UIz1GyehCQFEA/QgXHKoMZtzqJKPG9WC7
U1NcUFe7J/5VNRkZ3L6h7zOPzXdtMB1fLhn9a5VTLF7lApZzS0q2CWSkr73F
vr3FBX6bB2/d9SGj2qyapaN4blD7zquxZEFGunvetjrTc4NGrcvitCYZVYfa
5GazcgNnP++No1xkpLNzNHaemxsEW8zYSkdnUYUdvbu8EDdUVxY6u2TNolPd
HSY2e7mhgi91/PjjWVR2Ju3YR2lueLyi9JtLcxZp57mIjShwA18YujNCmUEl
kqdxe5S54VDcpHda9gw6HsUzckOdG/aR4gav355BxfixsjfHuWFYzyRpi3sG
HXP8+bH9NDe8Db+jFkSaRhrnL9oaXuQG23YtUgh+Gv36LX4u5Bo3XPchfuWO
n0JqcksKNebc4B/e7p19eAodoQ9f1L7HDY7kZ2e9DSbRob//3FT9uMFiga74
ktE4yjyYcP1REDdUjt55b1k1hhQT7TWzwrnB8vDWYW/1MSTvwUwtl8ANUxy2
v1K5RpH0EV1/0TxuOHWb645b4hAS/VweTTvFDVlSAUkJ37rQxYS8/Op5bhBa
lghwUe1EARGfekLWuAF+CIge+tuOlt1D9vLS8EBWBbl4sK8FVetd/iYlxgOC
0ZGDxPB6RHVcp3Fakgfi95CKdMdrkLKy2vJ3eR7wlDH+p3OuCiUKi6ipqvPA
SUancCWjUtTGznZj6zgPpHjYtxLW/iBGWtyzYh0ekL5GsEu0JiFn8miZzmUe
KJyUu05HyUFfhtonmG7wgGU/VZ6dUDYabKtibLzFA8WyOnd7tr8hnppfClE2
PKB4f/Oq3dk0pEf6anj1AQ+AtI9KoUQS8s5OeCjsivGx54mZ8rEo9+Or14Oe
PDDQ0sMcHh6CZt76FHx4zgNU1CKfXn97jPaGPeq9G4Sx683u8nItkrHvbSqF
CIx9Qp70izwmBbteFV+M5YFntjckfej9SCV2uqdyEjGuSzS8zRlEWjfXvPv4
I2ZPwubnOE8oSf7SgaBj3zB/DweoTe6EkCzO7PmO+4nxgy9mrrmBpBhNzqby
X5j+50o1bfLPSXUHaVYCSjB9aqEv2N47k3CSa7znq7D2Ow9CWRnOI1WBSTXO
Bqw9Mvyla4o3usfSfaO9DRvP3ypnFbsIlISre/a2lwfEJJLfH9NLQB2rRclm
I5g/s1cWatxTEfN0Rrn4NA80DPzWsjj6DZ3oT5ocX+CBO07uz80dspFrcyTT
l3UeCCswvp95NA99q/A74LDLA8aqDXoKbr/R8C/XC0q0vDC/m7Yb/foP4suw
ebTOxAuFHI8+TH4tRfopJjGFnLxg9y9C0W+3AvnG6P96JsALTCwW2meCalB+
EPRp7+GFYh/5hWWjf2jfo3376hR4oeOmcrR2VTO6dpfn9CtlrL3O2UyV0IZC
bxBtLmnwgiXVodCE6x2IcnLme+8ZXihNLSWqmPYiRbW+pvcGmH6nyGlNwgCy
UmhYsbrCC3X3xw5lWg+iBp4f6mRLXnA9ojpx9cIIomVMNc2y5YXytqx3E12j
SH33tZezIy+cWmj2e3x/HKWOu1fsPOWFPMcwP4FfU8g9T8uI9S0vnHjkoCI2
MY8OmTTMm73nhaIrIRHu5QtoatckJOMjL0wZfm32SsPqndPOVYY/eGFl0bDi
u/MyUmtLQ5F1vBBDk+Mkq7yO1peY5fip+ID1O/eDNWoqyHj9puouLR+8//lz
RvMZFdxRl7pdwMQHUuk3XljsUEGHNyRd5+cDY7UYqj8b1JDL7sQXf4gP+ov+
ZapO4sH5QAdB3IoPTvEcuGMaSgcKzZZJTrZ8YBvZ1Ri4RQdjzguo9AEfNMiH
Tn+9TYRLRQzuVp58oFSSuMfuCD0wWbzmy/HlAyuch1fHW3oopdmXQxvIB9UK
lvu7tulB6ZzmwsfXfBB/5iNJp4ABZuarQtbf8cGqSfJ2MBcjpEReljuTwgd3
Pk+r89sxAlfP/dtTGXwgE3EssoiDCWqfbhHUc/ngglcwdcFNJvAVf5kU+JsP
8tyRWNFXJliySeqVq+YDlaO9WhkazPCJ5YC7RwMfKKaqaL98ygwWWb/46tv4
oFspYRFIzCBwWSdHpJcPJqSOTv/bZIamjRaj+8N8oOCYyKSozAIB724ukCb5
IOF5pquJLQucOE4OYZvng8Di7EjDeBbI8qerztzigzEhd1IwhQVs5CJv4/D8
2Po6MNQszgp7G8RojOj5wVUwtHvgDCt0OX1NSmblhwl1hXO5dqzwilcNlrn5
QfGZBOf1IFbQ+VXeqy3ED34MCRqNaaxAZWbkHrWXH2o11+jESlghDzfANybN
D93aCb36HazgkGqXo3KAH9KUH521nmaFvn+CUSwq/ABTnaYpW6xwbqPaaUyD
H9hW5fjladigcO/jC0Va/GA12+ahy8AGsnoyB6PP8kPSvuvffjKzYXV1B6u9
IT/wO/F+fsjKBnQJL8gnjfnh3etLwv/fL3WuVKkTNuOH/lxHAz4WNhhZGP28
YsUPWTE/ZDkY2eCCYFRAnR0/VBs2SgTSssEfbe27H5z44ZCdwulQKjZQtF86
7fGYH5zp8g9cXmSF+NdJkpe8+OHXhXTV9gFWYPpjSCPvzw9P6jZeF9aywuMp
qhFCKD9Y/11k25vDChOcGSU9Ufzg4pQgs+8dK1zRNHv/I44fkhNL+Qa8WKHc
muVZUDI/tHiFZztZsoJS2G9Ty0/88Dlf+Pq2NiuwDQsKceXxw8epzgR7Klbw
ZKqhTBfxw7P2PPaobhaYVX7c+beMHwQGGzgP/GSBav+OaKdmfrAwejWtackC
qlkvHul28cNpDxfc0lEW+NitclF8kB9m3yXSxrGwgK9CFHszGZvvWd7YMz+Z
4ViLYdAhBgHYf/LBnPcmE3zZprJlYBeANFv5ltO1TCAolXFmiFcAnltZ+6zF
McG6GwtduIQAmIcm0r08xgRZojVeCyAA2ScZUq2fM4LYmcfmVacFQCfUgcPV
mBFCHWXQe30BOLPL/eaEHCPYlb3YMjARgPKbw4rGbQwgYavtkuEiALUyTf/e
qjBAZOTSJX9PAZiu3A6LYGcAXFGSkvlzARAkLEo1ztJDHxv1ImuEAGiZ6p87
94ke9NQyGsZjBWDYjmSfGEAPv26ZfSclCkCUbo2/hR09xOT8trv/TQDub/b9
01eiB9oBO93TPwVAqhRv5SNAD4/ohWRFCwUgafdeuTqOHkYO1RDXSgRATqSX
8HiaCBdMHo/XVwmA2NH0lWNtRCh+LlOe2iAAzGdOHgkoIcKB7x0pnu0CYFbs
o3ItgwjxHS98LvcJAN4hRulLAhGYcEcsFEYFoEu86dyTMCLku+CNxqYFwDml
RRLnQwTr2X9a8YsCYJgj82vWmQict+KULm8IwEjWUwNVO8xexx0JFipB4Ll3
Ur3Lggj39JV5ymkFYc/jrPHqa0QQKKWm82QWhHvJ+sNUF4lQfrR+TZlLECLU
F8Ye6BPB6fubiVkBQRiuVRzkOEvE1snbnR/2CMKX6+rUHaeIUPvmcPUNaUEQ
0mAt+aFNBDc2ql/cBwSh7izT6lstIkj61X6uUxaEGzKtTU8xbt6MiXuuIQim
6y7bhpj8swdWwZpaWP+J1mg8pk9+/KDnyhlBONEDOs91iNBlsmP/1QCzd/aU
QYUuEV40VZtZXREED7v40PzzRFDSeW0gbCoIX/+pROti/g/+vnW81VIQpo3O
Z9hdJULIYcVDwbaCcCQhcYnRjAjq6Vt7TzoKgoOojx6fFREmRKo4t10FQa+Q
OfCZLRGOM1is2PkJArXw7QJRNyKQnyqM7QvG5gfPfFjpGRHerFDaeiIEIcbb
q8DsBRGWByLy9N4Lws+Pgip5UUR4f9k8nZAmCI9w3PV/44igXyv3pvCbIMRd
lGhJTiZCWm6Zu1yhIGx/uJz5Hov3Jflwu5ESQdC4tv9PYg4RcMmmN+KqMC40
LlMpJMJ3vv36FxsEwf9AnselP0QwCVk7xtQuCMv3CYpzZUSgJ5QeKO0VhOPH
CjNWq4iQ4xYm9mREEAilL2zN6ohgMWfCrjQtCLJdgrbCDURgtZLBzSwIwhtS
tLlEExEKu1YWk9cFgXTgwie7ZiLcMSgZvr4rCJEHpK5NYsxdHtLCSSsEk/pi
6uEYl6hfL6thEgKX56/bTLH+9zOlcnw4hUD02G/X05h+IanlVHUBIagP8VM6
idmviit+vSQmBDpE6nFDzD9njmD/z1JCULbKoHanlAji/lfdbikIQcnV+6k+
RURo2JawEVQWAsnTVo8Sc4ng4bR4rVldCIy6Hf/8+k4E2cki3cATQsCk/cO5
OZUI7aaBGlpnhOD6wIsLY9h8+7Zckd88LwRNnYlDS6+IcPDsPpHsy0KQTfD2
2XpOhD7SPIvtDSE4q3HLlBqLb6Dy7929lkIg3+pjTcDir/r55XyXjRBoiM9e
IpoQITx6b9NZVyH4ttfu3R51IiCmuRLcUyEoFimVBBkizHj9yi54jo1/OH/u
AQ8RTt67GCUbIQSv7n3VlSHTwcPwX1T3Y4WgOT3tnlIXHaTk7rXLThCCAFUJ
t4AyOsDhFk5ofBGC+Mk2CaU3dFAcHTx/rgzTf8o+84YGHagVl+s+WBOCZ4wR
6yx2tHB3VD735zamb17fttOAFmIYovZS8MJgYTpp4KtMC2sXb214swlDSFSN
aOoODfyY3E2NlBGG0neKJ0+8ogEFzqO4vOvCUOiY0ZlTTIAbqon3tm4KQ7Pl
3AHDNAIE3aDrhDvC0CHtctc6jADTH1u/Vz0UBmbRmzkiFgQQqNMQZHEXBm6L
fIt/ugQ4u5jsd8FLGM5+2iPEo0KANA3HG93BwrDX5fjBJ0wErE7trBSNFIYn
wpupH9bxQPcClCzfCMPfz3zGbqN4sG5kYZxNFYYTOQO3FP7gIWr1kfPBr8Kw
sVC/w52Bh1LB3sFH2cJQezXuwo8EPIhbf87bIQnDvIipkJAXHi4EcuzTKhcG
+fvyleOOePDOcAt9USsMFZOaMfZWeMhsHaDUNAkDfar9zQxjPAxQTluzdQqD
QDKPyxc9PLCJfW+82C8Mk1PELzeP4wGd5NGMHRWGUflZo3oVPMSHjnDuXRSG
0KZPnaXieKj7ofvUel0Y7P3fLekI4mGrM2vq0w7G1gnbrpx4kNvlvzxHEAG6
ll6yARMeru/z+nOYUQRqdBj1a2nwEHBmQs6VXQSYX3Yp/X9eWmB/PqaQVwTk
z5OMYik4mIzIwVOLiIBB5sJK/woO+PKF75/cJwINtzNpfizgYOfWR0H2/SKQ
cv+MWfksDkZYDlb2HBSBFqWrRfZTOKjOL3iYpioCtKYUQso4DjIstfc8RCJA
oZL8bDKKg2jW+jp0SgR07X+X///9yScFVx4znhOBi0UdnP9/L9LCalCy3UgE
Tj65uK08iIPTbLbNSddEQOP96w9RAziQ+7X81P6mCPyeDpjTwpjD2lNO7Y4I
nH1a8EL5/+9tshE7ae6LQOu7N7OmGPf9evW88ZEI/FGeePID41JrwUPvnogA
w4Kwiyym/xP7h747PiLAZL3K9BPjsEKFQKUAEeCiXb6tg/njfDvvCNUrEeC+
PZ79//tqTThOjNS8FoHcADvpa5j/J37XhL2OF4GcxiscfzCWvnNJ89YHEZi4
xthLPYIDFs7+SYUvmL2Ur4LsGC//vhNNyRKBI6Zq4cOYfNedxRPl+dj8+Vsf
s8e4mPPJ3KtiEZhlNDRPxeylFtHE3agQgX0qG97/n5cG3Q3VkakXAf+sh74r
/Thw5OJfWW4RgamivnfrvTgwJiW9L+4WgQcfKDZe3Tg4ZiOnHzQkApF5Pgt+
HTjYx51DuTIpAsIXJdKoWnHAUIw+is+LQPonbo+xBhzM21QZza2KQJ6Dfo9i
LQ5auY2ofm2LQGWp6c+Ocixfinu++BFEIRDf9Ky9GAeJttZXLzCKwplAqZNS
BTjw45mnEeEQhejKK29LsnBg98cta5JPFBTRcFbKJxxcsMOb/RQVhcZ3dy5V
vceBKm8wo5ekKBw4Q5qUi8EB4V6iJZ+SKChP+6V88MbBFK8s+4iaKNxRKSfl
OOOgoST79/fjovBoSCZ/5y4O4vgqeE6fF4We69zah/Rx4P3X4C/HZVHoojJb
EEE4uGPfdb/PRBTa/BeytA/gQKl0tvKRjShc4i34ps2MA4H7Lo+OPxAF6Y56
bolNaqASoN7L7CoKwx8DR89OUEPtfS73lOeicHp26IdbMTXcElSXb04UBWvV
fzLEu9SgU17aGf9RFHz6RmOyDalB4YG+n803Udg5/+BCx1FqoJTf7KcuFAVj
Xpa0DCI1hDv6v1JsF4XanPy3qe+pgFL7Jc+/VxToZfsej/tTgYVUY//AsCi0
Png6unqfCg738Cu8mheFCxeqpD5oUsFU0qXRdYIYrNnWe3tk7CKRhvH1fUQx
SF+Wdhnx2EUXtt2YDBnF4FMpV/pj3V3060r84XR2MUDfmR56jO+gIKZxr6si
YmDnIRZTu28HFR91i3q+RwxMSlWo4le20bI1Y3rmPjGgrJ6Ik67YRiZ/DjTQ
7xeDnTP+71LttpG8s6tIwRExKBEtbW4o2UIWyQyHxtTEYF/1QaC82ULRDXEn
OY6JwcTNtO+nHm6hHdk/djbaYvDGMOT1fdktVN9P/0vAUAyKLjhFDn3YRDjm
uPpTF8XgDPVGGoP/JlJRUxhyvCIGZQkx7UG2myg+8gJ9zQ0xiJzRs0xX2URN
f0aE1szFYM+lbq1TIpuIds5ZUdwSsydHf+wE3Sa6f+btFXcbMcChkULDXgpK
cZa3/XhPDA7n8s2aVVNQRzLJs9lBDCxPrb4qyaMgpkbD8F0njLuvvn6YRkGw
M/xhv4sY0HDtrt6PpaCH+53zrzwWA8XtC4VfA/+r6MrjqVq7MCXkalJKqPZQ
rpIhmpSsRSoZCpUhlaGU6jZQyVhCJGNSSjQg1ZUyZEqZo0GmhA8JIcM528w5
R/j2/fP5vWu9z/Ostd792/8tATy3FP/q60Wg/hRHXOGqAJqvR7e+9iZQZk3S
0qoLApifvnakyZfAoMKzRnEnBaDXmicmHkBguv4lhQhbAbjOMZVbf5PAZtrA
OtJSAC+3/FKxDSHQ3MioNsZUAK0nLukGhxMYvLM4+6GhABbdETPPvk3gPuqK
S/BOAegX3T/ZcZdAkYGxzxa6AvDsV/KaH01gQM5I+aC2AFLl88K1Ytn+ZT0d
M9ASQNdukwTHxwQmKSmp7dsiANnL7VmR8QTy+sIa+ZsFsCfh4peCRAJbPakm
ZRb7VIv+5LwgUFVF6dmPTQLInLo3JJNM4Lugsb3j/+3XVFIS3ZFCoN6qtWGO
bPxyq/dLndIJ9n/05LflmgIw89+rHJtJYHGrjPF/+ykTrQZ25+Sw9827/3D2
VgHw1946/v0dy6/2uWMJq89ISN13MJ9AJ84ZYWKbAB5/q3k0p5jAE7FGX+ex
foYTL7xbXUrgPOUzK7+zeKf7ov/t+ERg2J59Q4dBANHGGaN25QRuUNfSvsdi
LmEudaWSwAdvTTc5sxhHxlSia1j/UI6NbH5kWZRh5ncCcVQwmcfy/Y7e7FjT
QCC9QOnIPFbPlrP/82OaCGxpdXj+lvUTquP+ROIngX4LpvxTNgqgbZFcnkI7
gZ8DOqTa1AWwvju3UbeTwPV671u0VARwI/fQ+JFuAqWHXwpnKLLzETq50KOP
fT8D9eRWSgCq9g/VohgCx7KCrhTKsvXeAMbpgwQyTX8JtkgJoE689WTlCIE3
hyeoB+ICWN3s7d83zvZT2HZb3SQfPF+T8WITBJ7erGzYNsiHKp+ifHqKQKFV
DovSOvhAmx9tBmESFZIyVKCODy6rRfjWIiT7Hbsn4l3Kh89/EqRdxUjsfcFp
+ieDD8uqdqhHSpBY9Ui0eSqOD+fju/akzCHR74TaQrUwPpS4BJwun0+i9Y8o
jwk3PiwxULzRvZDE/CWJ04eO8iFv4GQhIUvi8sWWX+rW8UGqRKJFaxmJr/JC
svoW88EhKklgSZB4l2EkwwU8kNTmatxSINEi5vGcoPc8sFkQapK8msSd+dbQ
FcODtA6VM5/WklhTuq/rf+48sAo6nyisQeIqs4MXHqrz4OWRBcXLNpK4sulQ
hockD4TU035qapIYbhi6XKJzHBIbhmWcgcRJ6VnehyPGYWTV5aB2QxLjk+r3
i/4cA33+kudTe0hMFTvRFvJ6DB6UZ5fImpFI1K80pa+Oge4FwaSZJYkN/FC9
DLkxCCvwOl98jMQWzU/tu4xGYY2134EELxIlGKPifx4Mg5VTppTINRKHTkgP
BNsOw42A7sqjfiSqNcvC6Kph6Ew3MqCDSDxlYOknnjYEjyWlIe4e67f4V790
zSBUULv+CMeQGOGTq7QvZhAmN7vl2D1i691Xqvv0xCAcdPihQSaSGGV3OqJD
eBCk854qPk4nccu3dXmKuwZAr7a+czqTxLTiXRtPyQ+Ac+/seJu3JIoWOPsX
d/VD1eKzy1YUkjhz4EXCYeN+mFr7uPFKCYnuCbzP20T7QXl7TVRLGYnqRfZr
RooYuHluo9TDCrYevx0LVfQZyLnuWDlZTeJqhd651fP/24cYHXz4O4kvfVNj
rv/gwuK08t3vG0jkyIQn7nvFhR0fp0SXNbP6Gi+ogi8XLraolXj+JNF15uiY
/iEuxI3YX2tuJ5ECHaezmlyolrijrdVFYn332cIXslwQIssmHvSQuEBRJ3Nw
mgOqm/jZExx23pijnzR7OHDEWMnFeoBEnQ2rSOc6DgQfPayRO0yi54LXkQFl
HMh1CxuQHWdxQEna0Xcc6A0rTHYXkHhTRfgL5w0HZBKHTzVOsv0SiubPSuXA
rnerFLcIU+jc9WBDWAoHXGosOu+LUKhaFGfnkM6BhO7AOL4YhXqzZ9jY53Dg
21SujdVfFKbS5vThIg7MkGbkc+ZSOCp3sWp1BQfUlIhGGSkKt51IqrjfzAEb
HbMoV2kKX/4w7PHgciDUwm9/gwyFEntsz8QIceHdmcwFm+UpPH4p2OCDNBf6
fLsrolZQyAmc2JC3lguy0bLB4xSFNjyDSqMdXNBPMdptoUAhdcm6bL0NFxKb
U4oXK1Notmf2r8V3uVA71O7tokZh4vjX9eFpXJg5W1q7ToPC6CGxB3aVXLDd
4JZ9ZwuFLeLnuibFGQgzTLo0uo1Cg57lDrCKgTy7H+oHdChUrGgOLUUGOJfn
DbzRo3AopOmmsTUDcqE6yYv0KVSZTjgRepEBg4QLpy4aUvi4IWvv9mAGXN8+
/bt2D4X6CxPzFOIYeFZV36FhRuFGg/DM4QwG6rpmx90+QOEMunHUoYyB0v2B
MTmWFB4ymQox+85AZpF41E9rCl1inPsLWxlIVLtxa5YNhVZTt82v9jBw96FY
sJI9haJePkoW/Qz4Swb4mzpQKCPm8veSIQZc3EWvXXakcLnGS7fQQQaOd1/3
iD3Nxhs39IVwGThgPsul+CyFsZrTs7o7GdAr8Tvf40Rh9sDzdU6NDKxXFzk9
7xLLF2LaPP2ZgZWPfR02uFI4tl3k/j9ZDCyaO9PW2oPC2l4JnYhHDIh4+hy8
doVCV4XYhXt8GRjpET7w7BqFFaXutVftGeiwuLb3qx+FZw8d7pm9jYHaD0IG
wwEU7o9TdqmWYqBEw1tvaRCFH5iey3m/uPDmybQ2hLL19lFqyX3NhYR5VzUd
blGYtl0zPsuFC5FeUxpBkRQuoKLa4zZzwa/PSyU1itWjNYNxGuXARatJxfpo
Cmfd/2wrn8yBfRv+LKOfUJic/KlwSJIDuvEeMrsTKFyyIpmzPKMP1BdMSJ17
RmFEbarU35Z9IMXli+Ums/NelPbvUGgvzLB2m9GWQqFcYNbXGqoXhj7y/oi+
Yedx/lyrj6k9UJMwPmj2lq3vn4eLDxR2Q5HUZY7rewo7nIgVCrrdkOY91vWw
gMKPe903eef9hohDo029pRQ+qd8re/rfLjBdNPzB5xuFbmfeWVH7O6DKl7mf
xqHw3lT8qwi9FigYPBPZ0E/hH7m61vKeZkix4YZODVH4+V+7D5yQJgjfyvE1
4FNoe684L/J7A+wd7jnTPotG/YObDA+7fANtu5OO4rNpfPEl9aKHQg2oVHbb
q0jS2PrMYdeupiqYm/Tbwl2KRrcEso6XVA4V9p06Uito1E42yTYxLIY2kWe8
OxSNarLBzp3tBTCS6Ph6qQKNH3UXLy1Qeg+iu9ccj11NY7kW9elLeTYs7euT
J5VpfOfyXUol+Q2sDUn+lqBGo2fZrIKl1SmgrXrupuJ6Gs/vn1Q86vYvmFar
6bzcROOAiQL+1R0Pxy4MjatuZfmeb7fW5TyAy9JvXqVrs3rfnC6pNb8FN7Mu
OWzSpdE7wiWpeZs3xFhtks/dQaPQZtXbXyvWw+sJXo32bhZr+DtZ8y7nF8W+
DSwyohGd8m+XhF7PrwVP3GnC5ldGqSmMB+X/bts2/mkfe56Uu8VWPixf4Dud
bGzB5heZFJZ1hebPUSg8Vn2QPbeqNpXAoHzio4/cgSM0FnQ2HtJe6Jevfkqv
psGOva/UNr3zvnP+DknRwEMObH6t1U2x28fA8lUZtDqy8f05K9ebBcApk8Cx
o/+wflT7f0g8vQteQwbJv8/RaOIj53Sw9AmER0oeO32BxpS5IVYt6i8gfmOF
bL8LjffM89dpfk2BzIawamd3Vs8Rgw0+VzPgo7vpjTEvGsPbTM+Kpr6FJvmF
4H6NxhjNjq30ugJg8mpHJ/1ofJyruqt4dzEI2d19ee0Gy3e8mnc8rhQUni6V
DQxj+QLvjykvrABNdigkb9O4yOTOMhvpajDqiQkIv8vqd8ufuIPfwEmZGI2K
pfHY9SlnqZF68KtsS5J7wvqptv8e4dEId53i7R8lsHpVKgvGiR/wLkOhKjGJ
Rt6zOKVHdm1QadHtv+Y12/+3OTZOP9uhnf9i26s0GiOMFet5pzpATFs5KSOH
xlsfM7bGvPgNZqUa/iVlrL/wodrBbAYcHEe19L/QWF24RkjVaABcJbKGv1TQ
aFyy1rINByF2zxa7b99p1K3q5C3aPAzddajV/ovGTBd5nvKBcRC4zhh2+E3j
Xw/fh+89xoM5ciUvenppLHLQj+i9xAd1m11LBgdp3F83M0jp0QTsEJ5dcXGU
Rp0pKe3lmX/AMv6zH49H4+0z+morKybh1I7grZ5/aBSV9h9u65oCr9/GQ9PT
NM6xsMyemJ6G/wMmqZEN
       "]]},
     Annotation[#, "Charting`Private`Tag$317160#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-0.015342667966324774`, 4.015345354039554}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7534555907191114`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"74d338d7-ba71-4dfd-9226-127095729fbb"]
}, Open  ]],

Cell["Checking our answer with FourierSeries[]:", "Text",
 CellChangeTimes->{{3.7534556497559443`*^9, 
  3.753455657681755*^9}},ExpressionUUID->"8e55b5cf-8fc5-44c6-ad4c-\
0647cba73f31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "=", 
  RowBox[{"FourierSeries", "[", 
   RowBox[{"func", ",", "x", ",", "nterms", ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534556591967382`*^9, 3.753455695843727*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"7f04993e-66bc-4de3-9b89-85584f287d92"],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      "x"}]]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], "\[Pi]"], 
  "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]", " ", "x"}]]}], "\[Pi]"], 
  "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      "x"}]]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
   RowBox[{"3", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], 
   RowBox[{"2", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], 
   RowBox[{"2", " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["5", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      "x"}]]}], 
   RowBox[{"5", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
   RowBox[{"5", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.753455696955758*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"fbcb0f29-a221-4963-bd5d-25dbd7e80d05"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P7 .9 .23
A violin string is plucked at time t=0 with a deviation from the straight \
line f(x,0)  as shown in the figure. To calculate the subsequent motion \
f[x,t], the displacement at time t at point x, we will see later that it is \
first necessary to expand f[x,0] in a Fourier sine series. Find the series if \
a string of length L is plucked at the center by a height h. Make sure it \
works by making a plot of the deflection for L->4,h->1.\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.74983410055758*^9, 3.7498341202838025`*^9}, {
  3.749834154340001*^9, 3.749834160125618*^9}, {3.7498342005664015`*^9, 
  3.749834274613371*^9}, {3.7498345140668693`*^9, 3.7498346266170154`*^9}, {
  3.749850325756261*^9, 
  3.7498503440551834`*^9}},ExpressionUUID->"18e00b9c-d24a-4fa3-bb41-\
82582bc42e22"],

Cell["Plotting our function: ", "Text",
 CellChangeTimes->{{3.753456581839348*^9, 
  3.7534565849470835`*^9}},ExpressionUUID->"a55d0bed-f8ac-4b1f-a528-\
44838d67849f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "x", "<", 
      RowBox[{"L", "/", "2"}]}], ",", 
     RowBox[{
      FractionBox["h", 
       RowBox[{"L", "/", "2"}]], "x"}], ",", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{"L", "/", "2"}]}], ",", "h", ",", 
     RowBox[{
      RowBox[{"L", "/", "2"}], "<", "x", "\[LessEqual]", "L"}], ",", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", "h"}], 
        RowBox[{"L", "/", "2"}]], "x"}], "+", 
      RowBox[{"2", "h"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"funcplot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"func", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "\[Rule]", "4"}], ",", 
       RowBox[{"h", "\[Rule]", "1"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.753456594643154*^9, 3.7534566610036983`*^9}, {
  3.753457073716935*^9, 3.7534570812761664`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"97d49185-f7b1-48d0-9d91-75bca22314d8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1X1UTGkcwPFbTUppRmHasSW1XkKIkiXr9yikF1FSWJJEGW8hLzk2DY0U
Kitpt9ihskjlZUqboVlaL21JiURmmEZGTfcpW0Zvc/c6nj/u+Zzv+d3fuc8f
zznXPnx74AZDiqJi2eerPhs0tfKPu+d+c8NcjufIaKUgCL45H1z+yMy+KYgg
BoFvdcONs4IYYgSEROju/CpIIMbAm6mJnicE6cQEkIxYciRZkEtMB5HpzfFJ
AikxF1asPF/U0VlBlII5I1rtNaqGWA5jA2jN/WP1xArY+2QWZHY1Eh+DtdRS
YWCgJNZAicqzqmaOilgH94Rnv1+pVRProXvcT7yCrR+IDWDYkz/0+7GtxFfg
xoSVLCvUEpugKsH1yYOJmKgEu7S2nst0B/EttOmUiufOn4gqyG29XclN+Y/Y
DFzbP7Fa3UVUw/FNxRslYz4TW+AzyldHHdQRP0DM9Aop//4XogaUhRXHau17
ia3QJ6zPmrC/j9gGk+aZ6Dfe7idqweuCfeR1az2RBtdM7rgHNnoiDaNT+tSv
7PVEGnpjn4dznPREGgoCkkJDkJ5IwzCDzuUDUXoiDcq18vneZXoiDVXLC4xC
y/VEGkp9f7+3s0JPpOHXmTEo+4meSMMCnuMcrNITaci/m+py2pwhYthru9bh
3WqGiCF8qXNw0zqGiMH/sEFyw0aGiGHcx5zO6miGiKFeqpGXJTBEDM5+O9em
X2WIGGwOep5Kvc4QMZjcGP4wuYQhYlBY35oikjNEDMeb+wa21jNEDPv41dM2
NTJEDOu9z22IUDBEDLOLUPUqDUNkz6eyNAhuZ4gYLEc0uwZ8YogY+r2kUX46
hohBs1+c7dXPEDG0Bk+KOk9RyCnw8tQ7egxhHcMM7YwohOxe9v3dg+FFUn9W
tjGFgrSDHj3owuD7w/sZI00pJPxrRvq/GINcVl1zxoxC8Uciwp62YnALLtk0
woJC6ctOOT1/j8EhKfHsUCsKydo7KhSvMWQ6RM9MGU6hp2V2J5tfYODKVtSa
W1NInei/RlOLoYeeYGxiQyGuw9XuzocYngZVbRkYS6Gw4MhxxlIMTtrl5g2L
KXRpfNDHgAgMpUF+5clLKZQWHClqDcXgecdj19xlFNov3i84vBLDqpSpr/NW
UMivWeIt9ceQ5Dw4P2Y9hehz7Zf5szC0xMh8rGIp5MpPFL62wCAZcEhenEsh
OaesLeIWez95HaYVvRR69c6O3mtGA6c8q+iHbAP0RfRIUvpQC5tdbzcO9jVE
E88k+Wk3tUG+d7jk7mdDdGWLe/khq1bobhs5tCXDCPEdK5UudRooXuZllD6f
gzJW7Ohp2PMBDi4S/yFt4SDD7d3yjOktYP/G52WO2BjdXSBcUtqlhtkzE9IF
0weh4yd1L6qymmH1qJoeg2eD0KL764b0r1RBd+UJVbTIBPGF6tmjBt5CJic0
JnCMKZK0J04p2aaEYYriC4YVpkia6Li7GzeB8S+ioFk7BiOteW/BSPdXQF0O
LVJZmSFqtdhjt7QBdv5edMLqnhn6MWPe42JdPdyZdNTUcps5GhKgfHPbqw4s
fXY6HeIOQfuKtmbTx2qgafLTZ7GyIWj0ybh102wq4do5GKMOtUDxZkYKhek/
sKbIzdJWb4G+E/vssebJIV58XtR0hYuoSx/ezwwshgKNbRbXj4fCWj2yneIu
wtGz4jCFPw9RS/ywy5iLEBHYPrYwgIfiby73cK/MAxuZ7NriELYPRGm8+XmQ
nPrzg+PhPCTnprhGFuZAlNtvnWax7L5LY9V5hQQcEoYvMrnIvq9T9E6OywD9
jwcsGi6xLe+UzKk8DY3tzXUX89n9JI6XL/80pIXcXLPwOrtvM/FUVOEpYCYG
7hLLeAih3ZNyFGnQVJt6zugZO7eyLnWOOwKlR3Trnz1nO3cOx58vhnT3tRNy
XrLtFr50c+Fh8M2bIvVQsN9bVaDJU8RD2b7qx6KP7Hxh4nS3uD2QMXlGaoCW
bWFdZXThLtihyg6yx2yn2q7PV0SDo98WpbyL7WuR4+fFbQSOQX1umo7tLwMh
JYoweFvsLgzrZTve0TIkLhhkwpypzgNsj76iPhS3EM7YmXczDNsUVff1//s/
kEylvw==
       "]]},
     Annotation[#, "Charting`Private`Tag$29010#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {0., 0.9998460703741947}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75345665449413*^9, 3.75345666158419*^9}, {
  3.753457076665408*^9, 3.7534571004653325`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"1146f02a-5899-412b-ba46-21194675d385"]
}, Open  ]],

Cell["\<\
Clearly a Sin[] basis would work out perfect in this case, thus we being \
grinding out our Fourier Series routine: \
\>", "Text",
 CellChangeTimes->{{3.7534568191514473`*^9, 
  3.7534568606435213`*^9}},ExpressionUUID->"5cb3dca1-eeb3-47c4-8988-\
e39ed0d70872"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "10"}]], "Input",
 CellChangeTimes->{{3.753456878621722*^9, 3.753456881563631*^9}, {
  3.753457097025505*^9, 3.7534570973536243`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"3b2cd20d-80e5-491e-a993-8c93a266757a"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.753456883079897*^9, {3.753457076733225*^9, 3.753457100530136*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"01547488-67b7-4294-a05d-72969b59245c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourser", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", "n", "]"}], " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nterms"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534569417878957`*^9, 3.753456969821931*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"4546fa76-21da-4b6e-863e-488479737945"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "1", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "2", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "3", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "4", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"4", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "5", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"5", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "6", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "7", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"7", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "8", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"8", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "9", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"9", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"A", "[", "10", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"10", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7534569703546534`*^9, {3.753457076760188*^9, 3.7534571005560656`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"83c2d401-de96-4512-965a-a105a37cbdee"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"func", "*", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "L"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"L", ">", "0"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"fourser", "*", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "L"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"L", ">", "0"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7534568846649413`*^9, 3.753456939233066*^9}, {
  3.753456979026044*^9, 3.7534569800339155`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5dfdffeb-659b-44a6-b556-2f06a7136daa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equations", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lhs", "[", "i", "]"}], "\[Equal]", 
     RowBox[{"rhs", "[", "i", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "nterms"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534569839441533`*^9, 3.753456996963145*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"e6a0d45f-5371-4abf-bc4b-d39a1f4ad8e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "h", " ", "L"}], 
     SuperscriptBox["\[Pi]", "2"]], "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "1", "]"}]}]}], ",", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "h", " ", "L"}], 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Pi]", "2"]}]]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "3", "]"}]}]}], ",", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "4", "]"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "h", " ", "L"}], 
     RowBox[{"25", " ", 
      SuperscriptBox["\[Pi]", "2"]}]], "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "5", "]"}]}]}], ",", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "h", " ", "L"}], 
      RowBox[{"49", " ", 
       SuperscriptBox["\[Pi]", "2"]}]]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "7", "]"}]}]}], ",", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "h", " ", "L"}], 
     RowBox[{"81", " ", 
      SuperscriptBox["\[Pi]", "2"]}]], "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "9", "]"}]}]}], ",", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", "L", " ", 
     RowBox[{"A", "[", "10", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7534570057260466`*^9, 3.753457084293066*^9, 
  3.753457133347678*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"18ed5dba-df39-4b6a-a1aa-90593bf97743"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Asol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"equations", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"A", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nterms"}], "}"}]}], "]"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.753457008813443*^9, 3.753457027199583*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"8f7f7812-36b2-4c89-9bb7-75f331024dc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", "1", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"8", " ", "h"}], 
     SuperscriptBox["\[Pi]", "2"]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "3", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"8", " ", "h"}], 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Pi]", "2"]}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "5", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"8", " ", "h"}], 
     RowBox[{"25", " ", 
      SuperscriptBox["\[Pi]", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "6", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "7", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"8", " ", "h"}], 
      RowBox[{"49", " ", 
       SuperscriptBox["\[Pi]", "2"]}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "8", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "9", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"8", " ", "h"}], 
     RowBox[{"81", " ", 
      SuperscriptBox["\[Pi]", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "10", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7534570228165293`*^9, 3.753457027625447*^9}, 
   3.753457084349945*^9, 3.753457133452362*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"73ead46e-7f5d-439c-b50b-62b7b9fb372e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourser2", "=", 
  RowBox[{"fourser", "/.", "Asol"}]}]], "Input",
 CellChangeTimes->{{3.7534570305909076`*^9, 3.7534570344815435`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"a857be96-f950-4e83-bb6e-7e2649c212ab"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"8", " ", "h", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "x"}], "L"], "]"}]}], 
   SuperscriptBox["\[Pi]", "2"]], "-", 
  FractionBox[
   RowBox[{"8", " ", "h", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
   RowBox[{"9", " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"8", " ", "h", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
   RowBox[{"25", " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"8", " ", "h", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"7", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
   RowBox[{"49", " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"8", " ", "h", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"9", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
   RowBox[{"81", " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.753457035147066*^9, 3.7534570843743963`*^9, 
  3.753457133497244*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"23192d1a-d277-4d39-bd46-a13f585ee6df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"fourser2", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", "\[Rule]", "4"}], ",", 
      RowBox[{"h", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534570492642746`*^9, 3.7534570880124416`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"80dcc49f-621f-4b32-83c7-fe48f70f9998"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
//d/9X/TWrFB
       "]]},
     Annotation[#, "Charting`Private`Tag$55130#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {0., 0.9596046683286145}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.753457064631652*^9, 3.7534570891134486`*^9}, 
   3.753457133737644*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"3553deb6-1649-41ac-83cc-c2f17bb43998"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P7 .12 .9
a) Find the  Fourier transform f(k)  for the function in the sketch. Make a \
plot of the Fourier transform as a function of k. \
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7498325335765743`*^9, 3.7498325889866285`*^9}, {
  3.7498625509079866`*^9, 
  3.749862569988822*^9}},ExpressionUUID->"bd329bd8-950c-40f4-8221-\
34e98f49f260"],

Cell["Defining and plotting our function: ", "Text",
 CellChangeTimes->{{3.7534572003373795`*^9, 
  3.7534572045731487`*^9}},ExpressionUUID->"5575f936-3732-42bc-9dd1-\
00baaecbe498"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"x", "<", 
      RowBox[{"-", "a"}]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "a"}], "<", "x", "<", "0"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "+", 
      RowBox[{"2", " ", "x"}]}], ",", 
     RowBox[{"0", "<", "x", "<", "a"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "x"}]}], ",", 
     RowBox[{"x", ">", "a"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"func", "/.", 
    RowBox[{"a", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.753457209524214*^9, 3.7534573842039266`*^9}, 
   3.753459530590605*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"7f403e19-8067-4ed1-81bd-5c8884264dd3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
sJHr5YaCCWzvRiM7ezb2P/8Znv8HN3xkgg==
       "]]},
     Annotation[#, "Charting`Private`Tag$58163#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {0., 1.9993842814967802`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.753457341918853*^9, {3.7534573744259477`*^9, 3.753457384767888*^9}, 
   3.7534595323299103`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"b3c60704-dd67-4e42-abf9-270203eac56a"]
}, Open  ]],

Cell["\<\
From the Mathematica Handbook, we can define a function to conveniently \
compute a
Fourier Series transformation: \
\>", "Text",
 CellChangeTimes->{{3.7534573959253035`*^9, 
  3.7534574240336304`*^9}},ExpressionUUID->"19683846-a3d9-47be-9b26-\
4c3443e36b81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourtran", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ExponentialE]", "^", 
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}], ")"}]}], "*", 
       "func"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"a", ">", "0"}]}]}], "]"}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", "\[Pi]"}], "]"}]], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.753458629815421*^9, 3.7534586334469075`*^9}, {
  3.753458673159601*^9, 3.7534587344041414`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"804099e1-5db9-4417-b5c8-1c77c06efdea"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}]]}], ")"}], "2"]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.7534587364671555`*^9, 3.753459542055907*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"71103bd0-7baf-41e0-8914-05c5367ca7a4"]
}, Open  ]],

Cell["In Trig. form our series looks like: ", "Text",
 CellChangeTimes->{{3.7534596184809933`*^9, 
  3.753459640971773*^9}},ExpressionUUID->"011d3526-32b0-4c2b-8a68-\
5a91b4ff1afa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpToTrig", "[", "fourtran", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7534596432436028`*^9, 3.753459652486824*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"4249f8bd-8ed1-4d07-98bc-73c5b2d5efbd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SqrtBox[
    FractionBox["2", "\[Pi]"]], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"a", " ", "k"}], "2"], "]"}], "2"]}], 
  SuperscriptBox["k", "2"]]], "Output",
 CellChangeTimes->{{3.7534596474295464`*^9, 3.7534596531759796`*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"22899b05-b6a8-4581-be3d-04245be1e743"]
}, Open  ]],

Cell["\<\
We can also compute the Fourier Series \[OpenCurlyDoubleQuote]by hand\
\[CloseCurlyDoubleQuote], we would have to break up the region of integration \
into 2 pieces: \
\>", "Text",
 CellChangeTimes->{{3.7534596819451046`*^9, 
  3.7534597086108093`*^9}},ExpressionUUID->"bb4f55cd-58b2-4409-a5af-\
811bb8d7b8fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"four1", "=", 
  FractionBox[
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "a"}], "+", 
        RowBox[{"2", "x"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"a", ">", "0"}]}]}], "]"}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", "\[Pi]"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.7534597117902746`*^9, 3.7534597927430763`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"2be01177-b300-4d32-bc14-8ec2c038d6d5"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]]}], "-", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "k"}]}], 
  RowBox[{
   SuperscriptBox["k", "2"], " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{
  3.753459745197953*^9, {3.7534597779985275`*^9, 3.7534597939289017`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"23bcbbef-d545-4721-b1c6-46cbe1409d88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"four2", "=", 
  FractionBox[
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "a"}], "-", 
        RowBox[{"2", "x"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "a"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"a", ">", "0"}]}]}], "]"}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", "\[Pi]"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.7534597984647803`*^9, 3.753459821578986*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"5500ec92-709e-4e93-a099-3dcc1682a77e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}]]}], "+", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "k"}]}], 
  RowBox[{
   SuperscriptBox["k", "2"], " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{3.753459822672056*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"d8126086-eceb-4539-b13c-67695fa80e71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourtran2", "=", 
  RowBox[{
   RowBox[{"four1", "+", "four2"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7534598260580096`*^9, 3.75345983395393*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"5195713c-0051-41a0-a5b1-76d6d75f8ff4"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}]]}], ")"}], "2"]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.7534598345592747`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"e9795c01-52d6-4506-9224-a2f65b236d61"]
}, Open  ]],

Cell["In Trig form: ", "Text",
 CellChangeTimes->{{3.753459854516963*^9, 
  3.753459856583392*^9}},ExpressionUUID->"16cee49c-a804-42b5-a859-\
1480d0c4d201"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "fourtran2", "]"}]], "Input",
 CellChangeTimes->{{3.7534598586937556`*^9, 3.75345986220636*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d63bcb62-0e0b-4a3d-86ef-6465b96095e4"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "k"}], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "k"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], "2"]}], 
   SuperscriptBox["k", "2"]]}]], "Output",
 CellChangeTimes->{3.7534598626781416`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"dd0ab59d-364d-4118-af35-4b474034386b"]
}, Open  ]],

Cell["We can check using FourierTransform[]:", "Text",
 CellChangeTimes->{{3.753459844755043*^9, 
  3.7534598743449426`*^9}},ExpressionUUID->"2ffb2561-6480-4648-bd3b-\
564a1d3b4843"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{"func", ",", "x", ",", "k", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"a", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753459876829302*^9, 3.753459895525284*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"d59864ab-f404-488c-a575-f345340978c2"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}]]}], ")"}], "2"]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.7534598975039907`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"54e17572-070f-4bd5-bd48-3a80ee5bd868"]
}, Open  ]],

Cell["\<\
NOTE: a is our given parameter whereas k is the Fourier Transform pair \
variable: \
\>", "Text",
 CellChangeTimes->{{3.7534599212216167`*^9, 
  3.753459934630761*^9}},ExpressionUUID->"e41b46d6-ab64-41e1-a006-\
1731ebbf4a65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P8 .11 .15 a & d\nCompute   a)  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], " ", 
     RowBox[{"\[Delta]", "(", 
      RowBox[{"x", "-", 
       FractionBox["\[Pi]", "2"]}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "40f2f68d-bfd9-4d84-9f0e-c6bcbe482a90"],
 "   and     d)  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     RowBox[{"Cosh", "[", "x", "]"}], "  ", 
     RowBox[{"\[Delta]", "''"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "f07becd9-3eb2-4071-8111-ea9d84c00606"],
 " . \nUse basic properties of \[Delta](x) to do the problem \
\[OpenCurlyDoubleQuote]by hand\[CloseCurlyDoubleQuote] , and then verify with \
DiracDelta"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.75036804150624*^9, 3.750368069670458*^9}, {
   3.7503701458007045`*^9, 3.750370323502014*^9}, {3.750370353670085*^9, 
   3.7503703593456326`*^9}, 
   3.753460590053385*^9},ExpressionUUID->"ae1fefc5-bf96-4b50-b733-\
5d601f050bad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "3"}]], "Input",
 CellChangeTimes->{{3.753460631479511*^9, 3.753460632461091*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e66d471e-0fba-4221-aadc-08e5b6e9faab"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.75346063352066*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"66d53017-f525-40a1-9626-56b5df5bc929"]
}, Open  ]],

Cell[TextData[{
 "The mechanics of how DiracDelta functions work is that they output 1 when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SubscriptBox["x", "0"]}], TraditionalForm]],ExpressionUUID->
  "315e660e-6871-4038-9ef9-cbfc5cf22b42"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "963306ff-de26-4a0b-9fab-a61842f3c26d"],
 " is the point of interest, and they output\n0 for every other x. \nBecause \
of this behavior, we can just take the Taylor Series approximation around ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"\[Pi]", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "a4314cc4-4974-4881-b525-7a160afc617a"],
 " for the function Sin[x] particularly. "
}], "Text",
 CellChangeTimes->{{3.7534610233534546`*^9, 3.7534610759381456`*^9}, {
  3.7534618383122797`*^9, 3.7534618816125555`*^9}, {3.7534621232336187`*^9, 
  3.753462124496276*^9}},ExpressionUUID->"83e7199b-0c98-4f18-8d33-\
8cf46092404c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approx1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        FractionBox["\[Pi]", "2"], ",", "nterms"}], "}"}]}], "]"}], "//", 
    "Normal"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.753460781792427*^9, 3.753460810518506*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"01637b6a-2934-4cb9-87e8-66837a54e09f"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.7534608042297516`*^9, 3.753460811158399*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"f3bf1c5a-60e7-40ab-8933-cf97ecf5b47f"]
}, Open  ]],

Cell[TextData[{
 "With the point of interesting being ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"\[Pi]", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "48abe11b-3a16-435a-a4a1-c1cc9f168823"],
 ", we should replace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     SubscriptBox["x", "0"], ":"}]}], TraditionalForm]],ExpressionUUID->
  "ed510fb3-dcb7-4bea-9b96-71afeb2cd8b4"]
}], "Text",
 CellChangeTimes->{{3.753462135737234*^9, 
  3.753462155526313*^9}},ExpressionUUID->"69076b66-14a3-43f2-a217-\
f4917b91936e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approx1", "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"\[Pi]", "/", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.753460833007487*^9, 3.753460836433877*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"b51be9b2-af80-4561-847f-bcc1318bfbd1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7534608375776644`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"7b5c06a4-7a28-4bec-b415-add0ef3d7a02"]
}, Open  ]],

Cell["We can check our answer by integrating directly: ", "Text",
 CellChangeTimes->{{3.753462160673561*^9, 
  3.7534621738004656`*^9}},ExpressionUUID->"8a9b4b8b-6897-435e-b34c-\
2bcb2c3b70d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"x", "-", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753460839516164*^9, 3.7534608533630943`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"2a46d1b9-9f80-4dc4-961a-a00276f3aafb"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7534608542364035`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"ce490f8f-8882-4c28-bf99-3fd73091c429"]
}, Open  ]],

Cell[TextData[{
 "We do a similar approach to finding part (d), however this time since we \
are given the 2nd derivative of the DiracDelta function\nwe take the 2nd \
derivative of our Taylor Series approximation and then sub ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "\[Rule]", " ", 
     SubscriptBox["x", "0"]}], "=", 
    RowBox[{"1", ":"}]}], TraditionalForm]],ExpressionUUID->
  "caf17373-2dd3-4b3b-bddc-c19c85dd2ce0"]
}], "Text",
 CellChangeTimes->{{3.75346217813587*^9, 3.753462225014534*^9}, {
  3.7534626307357936`*^9, 
  3.753462652981357*^9}},ExpressionUUID->"a3f50683-0aa6-4bd4-9352-\
79f9304439ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approx2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Cosh", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "nterms"}], "}"}]}], "]"}], "//", 
    "Normal"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7534626556073456`*^9, 3.7534626659067926`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"99765a48-c72f-45ad-86b1-c6696bfce539"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "1", "]"}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"Cosh", "[", "1", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   RowBox[{"Sinh", "[", "1", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
   RowBox[{"Sinh", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7534626665879693`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"d3e1232e-5b2d-42d4-8797-f134f22cfddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approx2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "n"], 
     RowBox[{"D", "[", 
      RowBox[{"approx2", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "n"}], "}"}]}], "]"}]}], ")"}], "/.", 
   RowBox[{"n", "\[Rule]", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.753462669505176*^9, 3.753462698374955*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"df4b91fd-852f-4ec3-9719-70531bf4d57a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "1", "]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   RowBox[{"Sinh", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7534627016382647`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"094a14eb-d8b1-4382-925e-1d47d97ae88c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"approx2", "/.", 
  RowBox[{"x", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.7534627038184457`*^9, 3.7534627077549076`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"7f305d57-d6f9-4954-8754-6644844dd425"],

Cell[BoxData[
 RowBox[{"Cosh", "[", "1", "]"}]], "Input",
 CellChangeTimes->{3.753589812380351*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"8e6804e6-f946-45d6-89ad-2f8275644fdf"],

Cell["Checking our answer:", "Text",
 CellChangeTimes->{{3.753462714599585*^9, 
  3.753462717228591*^9}},ExpressionUUID->"b49797ea-4a50-4b0c-b46d-\
c90662b91e7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cosh", "[", "x", "]"}], " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"DiracDelta", "[", 
       RowBox[{"x", "-", "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534627202774343`*^9, 3.75346273943119*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"48322d53-0f7f-468b-adf9-c1bba200a45a"],

Cell[BoxData[
 RowBox[{"Cosh", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.75346274018122*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"7102cddf-fb89-4487-aa19-27aab01ce6ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P8 .11 .21 a & b\nCompute  a) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "3"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", "x"}], "-", "2"}], ")"}], " ", 
     RowBox[{"\[Delta]", "(", 
      RowBox[{"2", "-", "x"}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "ed5d8b09-b1cf-41d3-849f-2299fa4d42a6"],
 "   and     b) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"\[Phi]", "(", "x", ")"}], " ", 
     RowBox[{"\[Delta]", "(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["a", "2"]}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "97378038-5925-4abc-83c5-fb1d57431adb"],
 "\nUse basic properties of \[Delta](x) and change of variables to do the \
problem \[OpenCurlyDoubleQuote]by hand\[CloseCurlyDoubleQuote] , and then \
verify with DiracDelta"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.750371249214645*^9, 3.7503713237770853`*^9}, {
  3.750371474951954*^9, 
  3.7503715794782743`*^9}},ExpressionUUID->"178bcc19-576a-42f0-9253-\
89c85d875f0b"],

Cell[TextData[{
 "A standard step to doing the problem \[OpenCurlyDoubleQuote]by hand\
\[CloseCurlyDoubleQuote] is to take the Taylor Series approximation of our \
given function\naround ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "839085e7-37c0-44cd-91d0-d376b105ed3c"],
 " and then subbing in the point of interest for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", 
    SubscriptBox["x", "0"]}], TraditionalForm]],ExpressionUUID->
  "fe09ad77-3e21-42a7-830b-3d730680289a"]
}], "Text",
 CellChangeTimes->{{3.7534628813982964`*^9, 3.7534629501055546`*^9}, {
  3.7534630015450325`*^9, 
  3.753463005000822*^9}},ExpressionUUID->"e4a064b0-454d-4f15-af70-\
4439711b4ada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "3"}]], "Input",
 CellChangeTimes->{{3.753462956019782*^9, 3.7534629567258835`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"091d6e0e-1351-465b-9b31-481ec0061dd5"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.7534629577641153`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"2c03c50f-5398-45b8-87d9-6473a36e2025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approx1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"5", "x"}], "-", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2", ",", "nterms"}], "}"}]}], "]"}], "//", 
    "Normal"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7534629594007373`*^9, 3.7534629799966774`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"2c625ed6-9a0e-49db-a007-559c782cfa35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "+", 
  RowBox[{"5", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.753462975779949*^9, 3.753462980571136*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"9196f0b6-c7cd-46b9-9750-03f2c0bde62d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approx1", "/.", 
  RowBox[{"x", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.753462984174533*^9, 3.7534629888240705`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"04cdf522-37e8-4c3c-913e-d1f98a80d4d6"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.7534629898523207`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"39e6e341-f2e7-4509-87cf-80310e7830dc"]
}, Open  ]],

Cell[TextData[{
 "For part (b), we can do a change of variables for the function inside the \
DiracDelta function: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"],
     FontSize->24], 
    RowBox[{
     StyleBox[
      RowBox[{"\[Phi]", "(", "x", ")"}],
      FontSize->24], 
     RowBox[{
      StyleBox["\[Delta]",
       FontSize->24], 
      StyleBox["(",
       FontSize->24], 
      RowBox[{
       SuperscriptBox[
        StyleBox["x",
         FontSize->24], "2"], "-", 
       SuperscriptBox[
        StyleBox["a",
         FontSize->24], "2"]}], ")"}], 
     StyleBox[
      RowBox[{"\[DifferentialD]", "x"}],
      FontSize->24]}]}], TraditionalForm]],ExpressionUUID->
  "2f53a0e5-8780-4f86-a643-1f945e4422a7"],
 ", we let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"g", "(", "x", ")"}], "=", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["a", "2"]}]}],
     FontSize->18], 
    StyleBox[",",
     FontSize->18], 
    StyleBox[
     RowBox[{
      RowBox[{"\[DifferentialD]", "g"}], "=", 
      RowBox[{"2", "x", 
       RowBox[{"\[DifferentialD]", "x"}]}]}],
     FontSize->18], 
    StyleBox[",",
     FontSize->18], 
    RowBox[{
     StyleBox["x",
      FontSize->18], 
     StyleBox["=",
      FontSize->18], 
     RowBox[{
      StyleBox["Sqrt",
       FontSize->18], 
      StyleBox["[",
       FontSize->18], 
      RowBox[{
       StyleBox["g",
        FontSize->18], 
       StyleBox["+",
        FontSize->18], 
       SuperscriptBox[
        StyleBox["a",
         FontSize->18], "2"]}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "bd947d75-2d0f-4147-8caf-95a5e1898f26"],
 "\nSubbing in our variables: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "\[Infinity]"],
      FontSize->24], 
     RowBox[{
      StyleBox[
       RowBox[{"\[Phi]", "(", "x", ")"}],
       FontSize->24], 
      StyleBox[
       RowBox[{"\[Delta]", "(", "g", ")"}],
       FontSize->24], 
      FractionBox[
       StyleBox[
        RowBox[{"\[DifferentialD]", "g"}],
        FontSize->24], 
       StyleBox[
        RowBox[{"2", "x"}],
        FontSize->18]]}]}], "=", 
    RowBox[{
     StyleBox[
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "\[Infinity]"],
      FontSize->24], 
     RowBox[{
      RowBox[{
       StyleBox["\[Phi]",
        FontSize->24], 
       StyleBox["(",
        FontSize->24], 
       RowBox[{
        StyleBox["Sqrt",
         FontSize->24], 
        StyleBox["[",
         FontSize->24], 
        RowBox[{
         StyleBox["g",
          FontSize->24], 
         StyleBox["+",
          FontSize->24], 
         StyleBox[
          SuperscriptBox[
           StyleBox["a",
            FontSize->24], "2"],
          FontSize->18]}], 
        StyleBox["]",
         FontSize->18]}], 
       StyleBox[")",
        FontSize->24]}], 
      StyleBox[
       RowBox[{"\[Delta]", "(", "g", ")"}],
       FontSize->24], 
      FractionBox[
       StyleBox[
        RowBox[{"\[DifferentialD]", "g"}],
        FontSize->24], 
       RowBox[{
        StyleBox["2",
         FontSize->18], 
        RowBox[{
         StyleBox["Sqrt",
          FontSize->18], 
         StyleBox["[",
          FontSize->18], 
         RowBox[{
          StyleBox["g",
           FontSize->18], 
          StyleBox["+",
           FontSize->18], 
          SuperscriptBox[
           StyleBox["a",
            FontSize->18], "2"]}], 
         StyleBox["]",
          FontSize->18]}]}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "b854d305-c541-46e4-822d-29304b87f0b8"],
 "\nSince the \[Delta] function picks out the value of the integrand at the \
value of the integration variable which makes \nthe argument inside the \
\[Delta] function zero ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"g", "=", "0"}], ")"}], TraditionalForm]],ExpressionUUID->
  "171d0ae2-727c-4b4b-8a42-f5523e42734f"],
 ". In this case, it is just ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "b4798fab-9469-4e8e-8385-4240da8c6ada"],
 ", so it\[CloseCurlyQuote]s as if we just plug in zero for g:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "\[Infinity]"],
      FontSize->24], 
     RowBox[{
      RowBox[{
       StyleBox["\[Phi]",
        FontSize->24], 
       StyleBox["(",
        FontSize->24], 
       RowBox[{
        StyleBox["Sqrt",
         FontSize->24], 
        StyleBox["[",
         FontSize->24], 
        RowBox[{
         StyleBox["g",
          FontSize->24], 
         StyleBox["+",
          FontSize->24], 
         SuperscriptBox[
          StyleBox["a",
           FontSize->24], "2"]}], 
        StyleBox["]",
         FontSize->24]}], 
       StyleBox[")",
        FontSize->24]}], 
      StyleBox[
       RowBox[{"\[Delta]", "(", "g", ")"}],
       FontSize->24], 
      FractionBox[
       StyleBox[
        RowBox[{"\[DifferentialD]", "g"}],
        FontSize->24], 
       RowBox[{
        StyleBox["2",
         FontSize->18], 
        RowBox[{
         StyleBox["Sqrt",
          FontSize->18], 
         StyleBox["[",
          FontSize->18], 
         RowBox[{
          StyleBox["g",
           FontSize->18], 
          StyleBox["+",
           FontSize->18], 
          SuperscriptBox[
           StyleBox["a",
            FontSize->18], "2"]}], 
         StyleBox["]",
          FontSize->18]}]}]]}]}], "=", 
    StyleBox[
     FractionBox[
      RowBox[{"\[Phi]", "(", "a", ")"}], 
      RowBox[{"2", "a"}]],
     FontSize->24]}], TraditionalForm]],ExpressionUUID->
  "d2330988-accd-4597-bcaf-bbdc522bedcb"]
}], "Text",
 CellChangeTimes->{{3.7534630111872845`*^9, 3.7534630139339533`*^9}, {
  3.753463936027684*^9, 3.753463953892572*^9}, {3.753464015747749*^9, 
  3.7534640178518143`*^9}, {3.7534640876454477`*^9, 3.753464202565158*^9}, {
  3.753464345878007*^9, 3.753464346634983*^9}, {3.753464504873037*^9, 
  3.753464532639801*^9}, {3.7534646444065204`*^9, 3.753464664178053*^9}, {
  3.753464853447401*^9, 3.75346487045568*^9}, {3.7534862364974155`*^9, 
  3.753486286489857*^9}, {3.7534863261863365`*^9, 3.7534863309146957`*^9}, {
  3.753486418773819*^9, 3.753486536218031*^9}, {3.7534865992653294`*^9, 
  3.7534867989648776`*^9}, {3.753568930664666*^9, 
  3.7535689314076777`*^9}},ExpressionUUID->"5e1a1a38-ec2a-408c-8050-\
3c968288d4f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "P8 .3.11\nSolve y\[CloseCurlyQuote] +y Cos[x] = Sin[2 x]\nUse the standard \
formula for the first order linear equation ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "=", 
   StyleBox[" ",
    FontWeight->"Plain",
    FontSlant->"Plain",
    FontTracking->"Plain",
    FontVariations->{"CompatibilityType"->0,
    "Outline"->False,
    "Shadow"->False,
    "StrikeThrough"->False,
    "Underline"->False},
    FontVariations -> {"Masked" -> False},
    FontVariations -> {"RotationAngle" -> 0}], 
   RowBox[{
    StyleBox[
     RowBox[{"h", "[", "x", "]"}],
     FontWeight->"Plain",
     FontSlant->"Plain",
     FontTracking->"Plain",
     FontVariations->{"CompatibilityType"->0,
     "Outline"->False,
     "Shadow"->False,
     "StrikeThrough"->False,
     "Underline"->False}], 
    StyleBox["+",
     FontWeight->"Plain",
     FontSlant->"Plain",
     FontTracking->"Plain",
     FontVariations->{"CompatibilityType"->0,
     "Outline"->False,
     "Shadow"->False,
     "StrikeThrough"->False,
     "Underline"->False},
     FontVariations -> {"Masked" -> False},
     FontVariations -> {"RotationAngle" -> 0}], 
    RowBox[{
     StyleBox[
      RowBox[{"h", "[", "x", "]"}],
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontTracking->"Plain",
      FontVariations->{"CompatibilityType"->0,
      "Outline"->False,
      "Shadow"->False,
      "StrikeThrough"->False,
      "Underline"->False}], 
     StyleBox[" ",
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontTracking->"Plain",
      FontVariations->{"CompatibilityType"->0,
      "Outline"->False,
      "Shadow"->False,
      "StrikeThrough"->False,
      "Underline"->False},
      FontVariations -> {"Masked" -> False},
      FontVariations -> {"RotationAngle" -> 0}], 
     RowBox[{
      UnderoverscriptBox["\[Integral]", "0", "x"], " ", 
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"-", "w"}], "]"}], " ", 
       RowBox[{"f", "[", "w", "]"}], " ", "dw"}]}]}]}]}]],
  CellChangeTimes->{{3.485441652757153*^9, 3.485441874095813*^9}, {
    3.4854419771847095`*^9, 3.485442076521391*^9}, {3.485442109850297*^9, 
    3.4854421254971924`*^9}, {3.4854424133826585`*^9, 3.4854424362779675`*^9},
     3.4854424986375346`*^9, {3.485442537668767*^9, 3.4854425380427885`*^9}, {
    3.4854425831693697`*^9, 3.4854427196291747`*^9}, {3.485442753715124*^9, 
    3.485442855938971*^9}, {3.4854432686215754`*^9, 3.485443461121586*^9}, {
    3.4854435755111284`*^9, 3.4854436941419134`*^9}, {3.48544375702251*^9, 
    3.4854437974838247`*^9}, {3.4854438730701475`*^9, 3.485443876547346*^9}, {
    3.485444388107606*^9, 3.48544439901823*^9}, {3.4854444552344456`*^9, 
    3.485444500577039*^9}, {3.485444762485019*^9, 3.4854448023913016`*^9}, {
    3.4854448794827113`*^9, 3.4854449503777657`*^9}, {3.48544766581608*^9, 
    3.485447673391514*^9}, {3.4872669465775595`*^9, 3.4872669804404964`*^9}, {
    3.4872670177716317`*^9, 3.4872670484143844`*^9}, 3.4872687616363754`*^9, {
    3.4872689018823967`*^9, 3.4872689066006665`*^9}, {3.4872689592296767`*^9, 
    3.487269113738514*^9}, {3.487269158005046*^9, 3.4872695072040195`*^9}, 
    3.4872695773020287`*^9, {3.487269753265093*^9, 3.4872697579263597`*^9}, {
    3.4872698093883033`*^9, 3.48726982629327*^9}, {3.487270292143915*^9, 
    3.487270457894396*^9}, {3.4872708032801504`*^9, 3.4872708082304335`*^9}, {
    3.4872724508213844`*^9, 3.487272611911598*^9}, {3.487272743331115*^9, 
    3.4872727686085606`*^9}, {3.487272805352662*^9, 3.4872728538444357`*^9}, {
    3.487272909835638*^9, 3.487272917986105*^9}, {3.4872729688090115`*^9, 
    3.4872729786525745`*^9}, {3.4872735657211533`*^9, 3.487273590916594*^9}, {
    3.4872736361871834`*^9, 3.487273691417342*^9}, 3.487273732446689*^9, {
    3.48727376550858*^9, 3.4872737756881623`*^9}, {3.4872744965883956`*^9, 
    3.487274694677726*^9}, {3.487275206027973*^9, 3.4872752085541177`*^9}, {
    3.4872753230336657`*^9, 3.4872753394966073`*^9}, {3.487275379514896*^9, 
    3.487275434493041*^9}, {3.4872768432966194`*^9, 3.487276889055237*^9}, {
    3.487277028788229*^9, 3.487277040005871*^9}, {3.4872770992362585`*^9, 
    3.4872771032984905`*^9}, {3.487277346499401*^9, 3.4872773624293127`*^9}, {
    3.487277420993662*^9, 3.4872775523661757`*^9}, {3.487277585397065*^9, 
    3.487277612526617*^9}, {3.4872776492397165`*^9, 3.4872776582682333`*^9}, {
    3.487277811922022*^9, 3.4872778903115053`*^9}, {3.487277993668417*^9, 
    3.4872779953795147`*^9}, {3.487278098467411*^9, 3.4872781296511946`*^9}, {
    3.487278229624913*^9, 3.487278238088397*^9}, {3.4872782984278483`*^9, 
    3.487278344950509*^9}, {3.487278611620762*^9, 3.487278735617854*^9}, {
    3.487278942141667*^9, 3.487278990660442*^9}, {3.4872790397992525`*^9, 
    3.4872791292293673`*^9}, {3.487279164295373*^9, 3.487279186642651*^9}, {
    3.4872792515933666`*^9, 3.4872793046674023`*^9}, {3.4872793347871246`*^9, 
    3.48727935341119*^9}, 3.4872793964466515`*^9, {3.4872794303595915`*^9, 
    3.4872795203887405`*^9}, {3.487279859157117*^9, 3.48727993142025*^9}, {
    3.487336468890749*^9, 3.4873364706278486`*^9}, {3.4873365372936616`*^9, 
    3.4873365534575863`*^9}, {3.487337321642524*^9, 3.4873373698252797`*^9}, {
    3.4873374801595907`*^9, 3.4873375070461283`*^9}, {3.4873418095552177`*^9, 
    3.487341822326948*^9}, {3.4873423222265406`*^9, 3.4873424646876893`*^9}, {
    3.48734847255532*^9, 3.487348506325251*^9}, {3.48734857047292*^9, 
    3.487348684204425*^9}, 3.4873487549444714`*^9, {3.487349181185851*^9, 
    3.4873492037991443`*^9}, {3.4873496324996643`*^9, 
    3.4873496525118093`*^9}, {3.48734981861831*^9, 3.487349844648799*^9}, {
    3.487350004735955*^9, 3.487350029310361*^9}, {3.487350118830481*^9, 
    3.4873501596108136`*^9}, {3.4873501917776537`*^9, 
    3.4873504129463034`*^9}, {3.487350619411113*^9, 3.4873506209482*^9}, {
    3.4873509324360166`*^9, 3.487350961448676*^9}, {3.487351447353468*^9, 
    3.487351488274809*^9}, {3.487353389167534*^9, 3.487353406105502*^9}, {
    3.4873548923735123`*^9, 3.487354898887885*^9}, 3.487363703103965*^9, {
    3.4873638988221593`*^9, 3.487364052223933*^9}, {3.4873641238010273`*^9, 
    3.4873641353396873`*^9}, {3.4873642828901267`*^9, 3.487364290610568*^9}, {
    3.487364516664498*^9, 3.487364563665186*^9}, {3.4873647466366515`*^9, 
    3.4873647614865007`*^9}, {3.4873650100937204`*^9, 
    3.4873650761865005`*^9}, {3.487365148167618*^9, 3.487365155528039*^9}, {
    3.4873652361796513`*^9, 3.4873652760369315`*^9}, {3.487365326395812*^9, 
    3.487365328477931*^9}, 3.4873653928626137`*^9, {3.4873654818697042`*^9, 
    3.487365519853877*^9}, {3.487365669477435*^9, 3.4873657290438423`*^9}, {
    3.4873657667549987`*^9, 3.4873657696311636`*^9}, {3.4873658484476714`*^9, 
    3.487365871084966*^9}, {3.4873661827957954`*^9, 3.4873662681246758`*^9}, {
    3.4873664049135*^9, 3.487366433008106*^9}, {3.4873664773486423`*^9, 
    3.487366497605801*^9}, 3.487366529335616*^9, {3.487366722610671*^9, 
    3.4873669240851946`*^9}, {3.4873677499214296`*^9, 
    3.4873678092448225`*^9}, {3.487370406636385*^9, 3.4873704319288316`*^9}, {
    3.4873704998877187`*^9, 3.4873705270562725`*^9}, 3.4873705684266386`*^9, 
    3.4873706025135884`*^9, {3.4873706751907454`*^9, 3.4873706776388855`*^9}, 
    3.4873708948643103`*^9, {3.487370949517436*^9, 3.4873709524606047`*^9}, {
    3.4873709865585546`*^9, 3.4873710045955863`*^9}, {3.4873710371374474`*^9, 
    3.487371040593645*^9}, {3.487371177602482*^9, 3.487371226190261*^9}, {
    3.4873723576709776`*^9, 3.4873723798332453`*^9}, {3.48737242537585*^9, 
    3.4873724324622555`*^9}, {3.487372504353368*^9, 3.4873725050644083`*^9}, {
    3.487372560062554*^9, 3.4873725607755947`*^9}, {3.4873726060171824`*^9, 
    3.4873726142766547`*^9}, {3.4873726956593094`*^9, 3.487372715306433*^9}, {
    3.487372753267605*^9, 3.487372779253091*^9}, {3.487372841758666*^9, 
    3.4873728539753647`*^9}, {3.4873730358327665`*^9, 
    3.4873731626260185`*^9}, {3.487373722389035*^9, 3.4873737240681314`*^9}, {
    3.4873741749209185`*^9, 3.4873742382145386`*^9}, {3.487374396310581*^9, 
    3.487374400273808*^9}, {3.487374451269725*^9, 3.487374495018227*^9}, {
    3.4873746272767916`*^9, 3.4873746565994687`*^9}, {3.4873748583840103`*^9, 
    3.487374966135173*^9}, {3.4873751592462187`*^9, 3.487375232822427*^9}, 
    3.4873752841783648`*^9, {3.487375328615906*^9, 3.4873753368863792`*^9}, 
    3.487375389756403*^9, {3.487375447956732*^9, 3.487375449007792*^9}, {
    3.4873759224648724`*^9, 3.4873759544157*^9}, {3.487375991683831*^9, 
    3.48737599515703*^9}, {3.487376047220008*^9, 3.48737611317178*^9}, {
    3.487376145547632*^9, 3.487376157458313*^9}, {3.487376398474098*^9, 
    3.4873765289105587`*^9}, {3.4873765751192017`*^9, 3.487376582021597*^9}, {
    3.4873767573116226`*^9, 3.487376763851997*^9}, {3.4873768517450237`*^9, 
    3.4873768777225103`*^9}, {3.487377176885621*^9, 3.4873771801208057`*^9}, {
    3.487381944500313*^9, 3.4873819773341913`*^9}, {3.4873820303282223`*^9, 
    3.4873821065975847`*^9}, {3.487382335407672*^9, 3.4873823504545326`*^9}, {
    3.4873824490511713`*^9, 3.487382555169241*^9}, {3.4873827505874186`*^9, 
    3.4873827719126387`*^9}, {3.4873828251416826`*^9, 
    3.4873828313450375`*^9}, {3.487382871790351*^9, 3.487382872593397*^9}, {
    3.4873829110715976`*^9, 3.4873829146698036`*^9}, {3.4873829523669596`*^9, 
    3.4873829680288553`*^9}, {3.4873831195005193`*^9, 3.487383120283564*^9}, {
    3.4874309701610003`*^9, 3.4874309721540003`*^9}, 3.487431411708*^9, {
    3.487431913955*^9, 3.487431928542*^9}, {3.487432155118*^9, 
    3.487432202534*^9}, {3.487432572707*^9, 3.487432576347*^9}, {
    3.487432626436*^9, 3.487432673875*^9}, {3.4874338658050003`*^9, 
    3.487433866347*^9}, {3.487433978304*^9, 3.487434027521*^9}, {
    3.487434064715*^9, 3.487434065301*^9}, {3.487443137465*^9, 
    3.487443167631*^9}, {3.487443272106*^9, 3.487443336574*^9}, {
    3.487443514543*^9, 3.487443522705*^9}, {3.487446078744*^9, 
    3.4874461532139997`*^9}, {3.487446730917*^9, 3.487446780691*^9}, {
    3.48744686058*^9, 3.48744687015*^9}, {3.4874473181210003`*^9, 
    3.487447326347*^9}, {3.4874473923059998`*^9, 3.487447427453*^9}, {
    3.487809807126*^9, 3.487809815698*^9}, {3.487809847185*^9, 
    3.487810116731*^9}, {3.487810302975*^9, 3.487810399958*^9}, {
    3.487810484638*^9, 3.4878105120360003`*^9}, {3.487810660648*^9, 
    3.48781067049*^9}, {3.4878107068199997`*^9, 3.487810789178*^9}, {
    3.487810828*^9, 3.487810851663*^9}, {3.487810971299*^9, 
    3.487811004116*^9}, {3.4878110653190002`*^9, 3.4878111022390003`*^9}, {
    3.487811148513*^9, 3.4878112262650003`*^9}, {3.4878112963050003`*^9, 
    3.487811298113*^9}, {3.487811342822*^9, 3.487811345072*^9}, {
    3.487812109722*^9, 3.4878121127390003`*^9}, {3.487812150079*^9, 
    3.487812168311*^9}, {3.4886415190245476`*^9, 3.4886415238875475`*^9}, {
    3.488641719567548*^9, 3.4886417673145475`*^9}, {3.488642051544548*^9, 
    3.488642056527548*^9}, {3.4886421242345476`*^9, 3.488642125782548*^9}, 
    3.4886423379365478`*^9, {3.509907683278*^9, 3.509907683679*^9}},
  ExpressionUUID->"70ffd42d-2dc9-4989-8064-62ffda99262a"],
 "  with ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"h", "[", "x", "]"}], "=", 
   RowBox[{
    SubscriptBox["C", "1"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      RowBox[{
       UnderoverscriptBox["\[Integral]", "0", "x"], 
       RowBox[{
        RowBox[{"p", "[", "z", "]"}], " ", "dz"}]}]}]]}]}]],
  CellChangeTimes->{{3.485441652757153*^9, 3.485441874095813*^9}, {
    3.4854419771847095`*^9, 3.485442076521391*^9}, {3.485442109850297*^9, 
    3.4854421254971924`*^9}, {3.4854424133826585`*^9, 3.4854424362779675`*^9},
     3.4854424986375346`*^9, {3.485442537668767*^9, 3.4854425380427885`*^9}, {
    3.4854425831693697`*^9, 3.4854427196291747`*^9}, {3.485442753715124*^9, 
    3.485442855938971*^9}, {3.4854432686215754`*^9, 3.485443461121586*^9}, {
    3.4854435755111284`*^9, 3.4854436941419134`*^9}, {3.48544375702251*^9, 
    3.4854437974838247`*^9}, {3.4854438730701475`*^9, 3.485443876547346*^9}, {
    3.485444388107606*^9, 3.48544439901823*^9}, {3.4854444552344456`*^9, 
    3.485444500577039*^9}, {3.485444762485019*^9, 3.4854448023913016`*^9}, {
    3.4854448794827113`*^9, 3.4854449503777657`*^9}, {3.48544766581608*^9, 
    3.485447673391514*^9}, {3.4872669465775595`*^9, 3.4872669804404964`*^9}, {
    3.4872670177716317`*^9, 3.4872670484143844`*^9}, 3.4872687616363754`*^9, {
    3.4872689018823967`*^9, 3.4872689066006665`*^9}, {3.4872689592296767`*^9, 
    3.487269113738514*^9}, {3.487269158005046*^9, 3.4872695072040195`*^9}, 
    3.4872695773020287`*^9, {3.487269753265093*^9, 3.4872697579263597`*^9}, {
    3.4872698093883033`*^9, 3.48726982629327*^9}, {3.487270292143915*^9, 
    3.487270457894396*^9}, {3.4872708032801504`*^9, 3.4872708082304335`*^9}, {
    3.4872724508213844`*^9, 3.487272611911598*^9}, {3.487272743331115*^9, 
    3.4872727686085606`*^9}, {3.487272805352662*^9, 3.4872728538444357`*^9}, {
    3.487272909835638*^9, 3.487272917986105*^9}, {3.4872729688090115`*^9, 
    3.4872729786525745`*^9}, {3.4872735657211533`*^9, 3.487273590916594*^9}, {
    3.4872736361871834`*^9, 3.487273691417342*^9}, 3.487273732446689*^9, {
    3.48727376550858*^9, 3.4872737756881623`*^9}, {3.4872744965883956`*^9, 
    3.487274694677726*^9}, {3.487275206027973*^9, 3.4872752085541177`*^9}, {
    3.4872753230336657`*^9, 3.4872753394966073`*^9}, {3.487275379514896*^9, 
    3.487275434493041*^9}, {3.4872768432966194`*^9, 3.487276889055237*^9}, {
    3.487277028788229*^9, 3.487277040005871*^9}, {3.4872770992362585`*^9, 
    3.4872771032984905`*^9}, {3.487277346499401*^9, 3.4872773624293127`*^9}, {
    3.487277420993662*^9, 3.4872775523661757`*^9}, {3.487277585397065*^9, 
    3.487277612526617*^9}, {3.4872776492397165`*^9, 3.4872776582682333`*^9}, {
    3.487277811922022*^9, 3.4872778903115053`*^9}, {3.487277993668417*^9, 
    3.4872779953795147`*^9}, {3.487278098467411*^9, 3.4872781296511946`*^9}, {
    3.487278229624913*^9, 3.487278238088397*^9}, {3.4872782984278483`*^9, 
    3.487278344950509*^9}, {3.487278611620762*^9, 3.487278735617854*^9}, {
    3.487278942141667*^9, 3.487278990660442*^9}, {3.4872790397992525`*^9, 
    3.4872791292293673`*^9}, {3.487279164295373*^9, 3.487279186642651*^9}, {
    3.4872792515933666`*^9, 3.4872793046674023`*^9}, {3.4872793347871246`*^9, 
    3.48727935341119*^9}, 3.4872793964466515`*^9, {3.4872794303595915`*^9, 
    3.4872795203887405`*^9}, {3.487279859157117*^9, 3.48727993142025*^9}, {
    3.487336468890749*^9, 3.4873364706278486`*^9}, {3.4873365372936616`*^9, 
    3.4873365534575863`*^9}, {3.487337321642524*^9, 3.4873373698252797`*^9}, {
    3.4873374801595907`*^9, 3.4873375070461283`*^9}, {3.4873418095552177`*^9, 
    3.487341822326948*^9}, {3.4873423222265406`*^9, 3.4873424646876893`*^9}, {
    3.48734847255532*^9, 3.487348506325251*^9}, {3.48734857047292*^9, 
    3.487348684204425*^9}, 3.4873487549444714`*^9, {3.487349181185851*^9, 
    3.4873492037991443`*^9}, {3.4873496324996643`*^9, 
    3.4873496525118093`*^9}, {3.48734981861831*^9, 3.487349844648799*^9}, {
    3.487350004735955*^9, 3.487350029310361*^9}, {3.487350118830481*^9, 
    3.4873501596108136`*^9}, {3.4873501917776537`*^9, 
    3.4873504129463034`*^9}, {3.487350619411113*^9, 3.4873506209482*^9}, {
    3.4873509324360166`*^9, 3.487350961448676*^9}, {3.487351447353468*^9, 
    3.487351488274809*^9}, {3.487353389167534*^9, 3.487353406105502*^9}, {
    3.4873548923735123`*^9, 3.487354898887885*^9}, 3.487363703103965*^9, {
    3.4873638988221593`*^9, 3.487364052223933*^9}, {3.4873641238010273`*^9, 
    3.4873641353396873`*^9}, {3.4873642828901267`*^9, 3.487364290610568*^9}, {
    3.487364516664498*^9, 3.487364563665186*^9}, {3.4873647466366515`*^9, 
    3.4873647614865007`*^9}, {3.4873650100937204`*^9, 
    3.4873650761865005`*^9}, {3.487365148167618*^9, 3.487365155528039*^9}, {
    3.4873652361796513`*^9, 3.4873652760369315`*^9}, {3.487365326395812*^9, 
    3.487365328477931*^9}, 3.4873653928626137`*^9, {3.4873654818697042`*^9, 
    3.487365519853877*^9}, {3.487365669477435*^9, 3.4873657290438423`*^9}, {
    3.4873657667549987`*^9, 3.4873657696311636`*^9}, {3.4873658484476714`*^9, 
    3.487365871084966*^9}, {3.4873661827957954`*^9, 3.4873662681246758`*^9}, {
    3.4873664049135*^9, 3.487366433008106*^9}, {3.4873664773486423`*^9, 
    3.487366497605801*^9}, 3.487366529335616*^9, {3.487366722610671*^9, 
    3.4873669240851946`*^9}, {3.4873677499214296`*^9, 
    3.4873678092448225`*^9}, {3.487370406636385*^9, 3.4873704319288316`*^9}, {
    3.4873704998877187`*^9, 3.4873705270562725`*^9}, 3.4873705684266386`*^9, 
    3.4873706025135884`*^9, {3.4873706751907454`*^9, 3.4873706776388855`*^9}, 
    3.4873708948643103`*^9, {3.487370949517436*^9, 3.4873709524606047`*^9}, {
    3.4873709865585546`*^9, 3.4873710045955863`*^9}, {3.4873710371374474`*^9, 
    3.487371040593645*^9}, {3.487371177602482*^9, 3.487371226190261*^9}, {
    3.4873723576709776`*^9, 3.4873723798332453`*^9}, {3.48737242537585*^9, 
    3.4873724324622555`*^9}, {3.487372504353368*^9, 3.4873725050644083`*^9}, {
    3.487372560062554*^9, 3.4873725607755947`*^9}, {3.4873726060171824`*^9, 
    3.4873726142766547`*^9}, {3.4873726956593094`*^9, 3.487372715306433*^9}, {
    3.487372753267605*^9, 3.487372779253091*^9}, {3.487372841758666*^9, 
    3.4873728539753647`*^9}, {3.4873730358327665`*^9, 
    3.4873731626260185`*^9}, {3.487373722389035*^9, 3.4873737240681314`*^9}, {
    3.4873741749209185`*^9, 3.4873742382145386`*^9}, {3.487374396310581*^9, 
    3.487374400273808*^9}, {3.487374451269725*^9, 3.487374495018227*^9}, {
    3.4873746272767916`*^9, 3.4873746565994687`*^9}, {3.4873748583840103`*^9, 
    3.487374966135173*^9}, {3.4873751592462187`*^9, 3.487375232822427*^9}, 
    3.4873752841783648`*^9, {3.487375328615906*^9, 3.4873753368863792`*^9}, 
    3.487375389756403*^9, {3.487375447956732*^9, 3.487375449007792*^9}, {
    3.4873759224648724`*^9, 3.4873759544157*^9}, {3.487375991683831*^9, 
    3.48737599515703*^9}, {3.487376047220008*^9, 3.48737611317178*^9}, {
    3.487376145547632*^9, 3.487376157458313*^9}, {3.487376398474098*^9, 
    3.4873765289105587`*^9}, {3.4873765751192017`*^9, 3.487376582021597*^9}, {
    3.4873767573116226`*^9, 3.487376763851997*^9}, {3.4873768517450237`*^9, 
    3.4873768777225103`*^9}, {3.487377176885621*^9, 3.4873771801208057`*^9}, {
    3.487381944500313*^9, 3.4873819773341913`*^9}, {3.4873820303282223`*^9, 
    3.4873821065975847`*^9}, {3.487382335407672*^9, 3.4873823504545326`*^9}, {
    3.4873824490511713`*^9, 3.487382555169241*^9}, {3.4873827505874186`*^9, 
    3.4873827719126387`*^9}, {3.4873828251416826`*^9, 
    3.4873828313450375`*^9}, {3.487382871790351*^9, 3.487382872593397*^9}, {
    3.4873829110715976`*^9, 3.4873829146698036`*^9}, {3.4873829523669596`*^9, 
    3.4873829680288553`*^9}, {3.4873831195005193`*^9, 3.487383120283564*^9}, {
    3.4874309701610003`*^9, 3.4874309721540003`*^9}, 3.487431411708*^9, {
    3.487431913955*^9, 3.487431928542*^9}, {3.487432155118*^9, 
    3.487432202534*^9}, {3.487432572707*^9, 3.487432576347*^9}, {
    3.487432626436*^9, 3.487432673875*^9}, {3.4874338658050003`*^9, 
    3.487433866347*^9}, {3.487433978304*^9, 3.487434027521*^9}, {
    3.487434064715*^9, 3.487434065301*^9}, {3.487443137465*^9, 
    3.487443167631*^9}, {3.487443272106*^9, 3.487443336574*^9}, {
    3.487443514543*^9, 3.487443522705*^9}, {3.487446078744*^9, 
    3.4874461532139997`*^9}, {3.487446730917*^9, 3.487446780691*^9}, {
    3.48744686058*^9, 3.48744687015*^9}, {3.4874473181210003`*^9, 
    3.487447326347*^9}, {3.4874473923059998`*^9, 3.487447427453*^9}, {
    3.487809807126*^9, 3.487809815698*^9}, {3.487809847185*^9, 
    3.487810116731*^9}, {3.487810302975*^9, 3.487810399958*^9}, {
    3.487810484638*^9, 3.4878105120360003`*^9}, {3.487810660648*^9, 
    3.48781067049*^9}, {3.4878107068199997`*^9, 3.487810789178*^9}, {
    3.487810828*^9, 3.487810851663*^9}, {3.487810971299*^9, 
    3.487811004116*^9}, {3.4878110653190002`*^9, 3.4878111022390003`*^9}, {
    3.487811148513*^9, 3.4878112262650003`*^9}, {3.4878112963050003`*^9, 
    3.487811298113*^9}, {3.487811342822*^9, 3.487811345072*^9}, {
    3.487812109722*^9, 3.4878121127390003`*^9}, {3.487812150079*^9, 
    3.487812168311*^9}, {3.4886415190245476`*^9, 3.4886415238875475`*^9}, {
    3.488641719567548*^9, 3.4886417673145475`*^9}, {3.488642051544548*^9, 
    3.488642056527548*^9}, {3.4886421242345476`*^9, 3.488642125782548*^9}, 
    3.4886423379365478`*^9, {3.509907683278*^9, 3.509907683679*^9}},
  ExpressionUUID->"a7d4dcab-0b36-48f7-b5bd-22875aac8d37"],
 "  and check your result with DSolve."
}], "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7504318429983115`*^9, 3.7504318787253866`*^9}, {
  3.750432242026122*^9, 3.7504323141660147`*^9}, {3.7504324107770123`*^9, 
  3.7504324393165474`*^9}},ExpressionUUID->"393b6fd7-da52-45f8-97a0-\
d3df366665d4"],

Cell["Defining a variable to represent the given ODE: ", "Text",
 CellChangeTimes->{{3.753487019203418*^9, 
  3.7534870254028635`*^9}},ExpressionUUID->"394fa69a-10d1-49d8-a3ae-\
33f5cae302ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7534870277165337`*^9, 3.7534870393860617`*^9}, 
   3.7534888665006714`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"ae8ef567-f920-412e-b114-bdffe62c4c6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.753487040829191*^9, {3.7534888491322145`*^9, 3.7534888681223297`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"0f9e3dec-e767-4630-8de9-7e8730e8a2c3"]
}, Open  ]],

Cell[TextData[{
 "Before we attempted to define a function to \
\[OpenCurlyDoubleQuote]conveniently\[CloseCurlyDoubleQuote] compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "[", "x", "]"}], TraditionalForm]],ExpressionUUID->
  "736e571a-aa2d-4cd6-ac41-c82efe01a3d6"],
 " however things got too complicated.\nInstead we can straight up plug \
everything in: "
}], "Text",
 CellChangeTimes->{{3.753488170855389*^9, 
  3.753488211789955*^9}},ExpressionUUID->"3bae0894-118c-45b6-b49e-\
1766390dd969"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x", "]"}], "=", 
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"(", 
    RowBox[{"-", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "x"}], "}"}]}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.753488672030677*^9, 3.7534886907386513`*^9}, {
  3.7534888006886168`*^9, 3.753488801154377*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e4911954-425c-4eb9-b531-90a9c8edb206"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   RowBox[{"Sin", "[", "x", "]"}]}]]], "Output",
 CellChangeTimes->{3.7534886913909063`*^9, 3.7534888021699142`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"23e12e97-35f8-4849-b940-221448aff12c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], 
     RowBox[{"h", "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"h", "[", "x", "]"}], "*", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[ExponentialE]", "^", 
         RowBox[{"(", 
          RowBox[{"Sin", "[", "w", "]"}], ")"}]}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "w"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "0", ",", "x"}], "}"}]}], "]"}]}]}], "//", 
   "Expand"}]}]], "Input",
 CellChangeTimes->{{3.7534878622909126`*^9, 3.7534879048770638`*^9}, {
   3.7534880753232975`*^9, 3.753488077096363*^9}, {3.7534881571147375`*^9, 
   3.7534881649055943`*^9}, {3.75348822384472*^9, 3.7534882700801516`*^9}, {
   3.753488322182819*^9, 3.753488519251129*^9}, 3.7534885638927794`*^9, {
   3.753488614799673*^9, 3.7534887069782305`*^9}, {3.753488740789261*^9, 
   3.7534888053421745`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bb5fe55d-dfe8-43f8-b7a5-b768f9ddaab2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"Sin", "[", "x", "]"}]}]]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"Sin", "[", "x", "]"}]}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7534883807494183`*^9, 3.753488519966319*^9}, 
   3.753488564568969*^9, {3.753488615709242*^9, 3.7534886337589874`*^9}, {
   3.7534886952087*^9, 3.753488707422043*^9}, {3.753488744989937*^9, 
   3.7534887712953625`*^9}, 3.7534888065001893`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a16a8d1a-044c-4b7c-b7f0-ad2c6aeddf83"]
}, Open  ]],

Cell["Checking with DSolve[]:", "Text",
 CellChangeTimes->{{3.7534888169252496`*^9, 
  3.753488820149592*^9}},ExpressionUUID->"e69d3958-4a20-4b31-9ded-\
c2178b59d452"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"eq", ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.753488821773286*^9, 3.7534888297832017`*^9}, {
  3.7534888887696342`*^9, 3.7534888893397303`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"7fa1faed-ecf5-4ef2-bbc1-07fb1003862f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "x", "]"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.753488826586376*^9, 3.753488870184816*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"0894c25f-a9ba-411d-a6c9-a9fb2c44fa9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P8 .5 .1
Solve y\[CloseCurlyQuote]\[CloseCurlyQuote]+y\[CloseCurlyQuote]-2y=0 . Do \
this by explicitly substituting a exponential trial solution using Function \
to convert the DE to an algebraic equation . Solve the algebraic equation and \
use the results to construct the general solution of the DE.Use Function to \
plug in your general solution into the DE to make sure that it works.  Check \
with DSolve.\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7504353908460393`*^9, 3.750435533644379*^9}, 
   3.750436021350568*^9, {3.7504360580607214`*^9, 3.7504360752574463`*^9}, {
   3.7504362012653327`*^9, 3.7504362247272844`*^9}, {3.750454396103174*^9, 
   3.750454397374276*^9}},ExpressionUUID->"f07c4d21-56d9-4d90-903f-\
23e4fd822ec6"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7534893718956456`*^9, 3.7534893781788034`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9c04d222-b408-41ec-9da3-dfa1eeb29b09"],

Cell["Defining a variable to represent the given ODE: ", "Text",
 CellChangeTimes->{{3.7534888919497604`*^9, 
  3.753488898895186*^9}},ExpressionUUID->"5c0c472f-b297-4612-a2f1-\
90177fcef3c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
    RowBox[{"2", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7534889006335397`*^9, 3.7534889105280848`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f7a97e86-c038-4942-b74d-f6a6caa5a60f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.7534889112322006`*^9, 3.7534893906004505`*^9, {3.753582218717125*^9, 
   3.753582242662676*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"50953181-c90b-4dfd-b6ea-1048fb6f895e"]
}, Open  ]],

Cell[TextData[{
 "We employ an exponential trial solution to convert the given ODE into an \
algebraic equation \nby subbing in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{"r", " ", "x"}], ")"}]}], ":"}]}], TraditionalForm]],
  ExpressionUUID->"fdfd7e1e-6ae7-4ca5-ae71-478fe2923a87"]
}], "Text",
 CellChangeTimes->{{3.753488936668204*^9, 3.7534889499028196`*^9}, {
  3.753488981396612*^9, 3.753488983141985*^9}, {3.753489555867606*^9, 
  3.7534895700397234`*^9}},ExpressionUUID->"89fd8aa3-b9e5-486d-979e-\
39ec7fc316e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", 
  RowBox[{"eq", "/.", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{"r", " ", "x"}], ")"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7534889853889465`*^9, 3.7534890001655364`*^9}, {
  3.7534892466933393`*^9, 3.753489248928363*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"40c0763b-eca9-4139-96f5-328deb24a13d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "x"}]]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "x"}]], " ", "r"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "x"}]], " ", 
    SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.753489000989232*^9, 3.7534892570725813`*^9, 3.7534893906493177`*^9, {
   3.7535822187430515`*^9, 3.7535822426850843`*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"9dac94c9-3ff4-431d-9f3a-e0dc196f7ad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq3", "=", 
  RowBox[{
   FractionBox["eq2", 
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{"r", " ", "x"}], ")"}]}]], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7534892243962965`*^9, 3.753489303917611*^9}, {
  3.753489349067633*^9, 3.7534893545958543`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e89c81c6-d162-4fc5-944a-05ef8a8856a2"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "r"}], " ", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"r", " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "r", "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], "\[Equal]", "0"}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7534892335923586`*^9, 3.753489304586182*^9}, {
   3.7534893501138287`*^9, 3.7534893552181845`*^9}, 3.753489390700349*^9, {
   3.7535822188946466`*^9, 3.7535822427101173`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"138c39fe-3731-46f1-b237-3bc68863acbe"]
}, Open  ]],

Cell[TextData[{
 "Simplifying the equation, we can see that the solutions are the roots to \
the polynomial: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["r", "2"], "+", "r", "-", "2"}], "=", 
    RowBox[{"0", ":"}]}], TraditionalForm]],ExpressionUUID->
  "f84e6b47-92f1-49a4-9c9b-2b61fd593bb2"]
}], "Text",
 CellChangeTimes->{{3.753489577635415*^9, 
  3.7534896072941103`*^9}},ExpressionUUID->"1f92d79d-c542-464c-aadd-\
c88f5482e76b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "+", "r", "+", 
     SuperscriptBox["r", "2"]}], "\[Equal]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753489365613393*^9, 3.7534893675335283`*^9}, {
  3.7534894145768147`*^9, 3.7534894231524224`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b6f849b4-d38a-4a21-b357-aebb1e182722"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7534893682174644`*^9, 3.75348942384765*^9}, {
  3.7535822189804173`*^9, 3.7535822427349153`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"f29edf7c-a706-4c3e-9180-b0c79f2c841a"]
}, Open  ]],

Cell["Creating a general solution:", "Text",
 CellChangeTimes->{{3.753489613316059*^9, 
  3.7534896178459067`*^9}},ExpressionUUID->"79de6f58-81fc-4b50-9b2b-\
0373877556d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trialsol", "=", 
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"(", 
    RowBox[{"r", " ", "x"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7534894298459864`*^9, 3.7534894366254454`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"cefa7319-39af-4e18-9fdb-277be71ec005"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"r", " ", "x"}]]], "Output",
 CellChangeTimes->{
  3.753489438408635*^9, {3.7535822190003643`*^9, 3.7535822427569075`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"8ce524c8-52f8-4ef7-b74d-18c04df622da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"homosol", "=", 
  RowBox[{"trialsol", "/.", "roots"}]}]], "Input",
 CellChangeTimes->{{3.753489439695193*^9, 3.753489446236739*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7da7e591-3878-4dd2-a8e0-8cd575f80a71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "x"}]], ",", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7534894467433505`*^9, {3.753582219023301*^9, 3.75358224277931*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"d9a034c4-8ab2-4394-bb1d-407cbf366758"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gensol", "=", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], ",", 
       RowBox[{"C", "[", "2", "]"}]}], "}"}], "*", "homosol"}], "]"}], "//", 
   "Total"}]}]], "Input",
 CellChangeTimes->{{3.7534894480522175`*^9, 3.753489468838277*^9}, {
  3.75358222573667*^9, 3.7535822278907075`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5fef7c11-dec2-469d-8131-b68ec07aaa26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "x"}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"C", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.753489465135223*^9, 3.7534894694466515`*^9}, {
  3.7535822190442476`*^9, 3.7535822428012695`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"6f3ba56b-34a1-4d73-9a2d-f412c8e26f2e"]
}, Open  ]],

Cell["Testing our trial solutions:", "Text",
 CellChangeTimes->{{3.7534896227100086`*^9, 
  3.7534896272926445`*^9}},ExpressionUUID->"bf151547-0d4d-4e5a-8e6c-\
4bdfe36a9359"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "/.", 
  RowBox[{"y", "\[Rule]", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "x"}], ")"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.753489476901727*^9, 3.7534895318069315`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d8bf9899-9497-4d4c-af3e-c23efb38369c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.753489491437019*^9, 3.7534895375146704`*^9}, {
  3.7535822190662146`*^9, 3.7535822428243237`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"aaf33f26-0699-47c2-aafa-2c132670df93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "/.", 
  RowBox[{"y", "\[Rule]", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", "x", ")"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7534895386536236`*^9, 3.7534895435874677`*^9}, {
  3.753489628937255*^9, 3.753489639365408*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"13514f30-415a-44ce-8ff2-5c2ccb2f0832"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7534896351478405`*^9, 3.75348963972747*^9}, {
  3.7535822190851374`*^9, 3.7535822428481417`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"82c51ca1-6743-4de6-b0ae-fc3b335dc494"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq", "/.", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "x"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "x"], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7535822309283924`*^9, 3.753582247830195*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f34d2559-a4ee-4225-96d4-67410d9656f6"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.753582239016418*^9, 3.75358224837374*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"99e22b0b-08b1-4ef5-96e0-e0006de7ac23"]
}, Open  ]],

Cell["Using DSolve[] to check our answer: ", "Text",
 CellChangeTimes->{{3.7534896528663163`*^9, 
  3.7534896587176332`*^9}},ExpressionUUID->"57474f5c-f561-454a-873e-\
403a5902959b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"eq", ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.753489660872865*^9, 3.7534896655653243`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"f4962477-80f0-4000-a1c2-776c5693c49e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.753489666120838*^9, {3.753582219185874*^9, 3.753582242894168*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"0895c54d-ad02-4d01-bd01-5d1ffb2c93c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535823631357174`*^9, 3.753582375790921*^9}, {
  3.7535825175762815`*^9, 3.753582517911353*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"73f0d5a2-5a9c-47f5-8b35-0632d9b64550"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[ExponentialE]"}], "\[ExponentialE]"]], "Output",
 CellChangeTimes->{{3.753582371332568*^9, 3.7535823836079836`*^9}, {
  3.7535825185612926`*^9, 3.753582525542712*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"cfdb8f81-d12c-49a8-badb-93d1737dc49f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7535823802708406`*^9, {3.7535825135596056`*^9, 3.753582515404422*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"2dccea1b-252a-4b9a-b0de-168d61b8bd21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "\[ExponentialE]"}]], "Output",
 CellChangeTimes->{
  3.7535823807996674`*^9, {3.753582519776472*^9, 3.753582526363744*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"b828ab09-45ec-464f-83d6-a3eb97e00441"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[ExponentialE]"}], "\[ExponentialE]"], "==", 
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[ExponentialE]"}]}]], "Input",
 CellChangeTimes->{{3.7535823905021424`*^9, 3.7535823944314127`*^9}, {
  3.753582528239971*^9, 3.753582534415419*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"86f73bc3-bf64-4dba-bf86-42bb6c9b7d12"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.753582394992222*^9, 3.7535825351192293`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"157a98e3-2454-4d58-8f8c-fab202e30a60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535841498338604`*^9, 3.7535841658669605`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e690815f-24f5-4285-989f-905b92e89fa4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "-", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "4"],
    SeriesData[$CellContext`x, 0, {}, 1, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 6]}, 1, 4, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7535841554487443`*^9, 3.753584166330731*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"e33163e5-f543-4986-9b3e-ec395966b345"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", "x"}], "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535841926180596`*^9, 3.7535841999867263`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"3d62e696-540d-41f6-9a4d-a0aa018c7634"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox["x", "2"], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "8"], "-", 
   FractionBox[
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "16"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "4"],
    SeriesData[$CellContext`x, 0, {}, 0, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 
    Rational[-1, 2], 
    Rational[3, 8], 
    Rational[-5, 16]}, 0, 4, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.7535842004512324`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"c7d0c96f-6cc5-4bd1-b827-a206c4b871f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
P8 .5 .3
Solve y\[CloseCurlyQuote]\[CloseCurlyQuote]+2y\[CloseCurlyQuote]+2y=0 . Do \
this by explicitly substituting an exponential trial solution using Function \
to convert the DE to an algebraic equation . Solve the algebraic equation and \
construct a general two parameter family of solutions of complex \
exponentials. Find an equivalent two parameter family that is manifestly real \
 ( see Eq. 8.5.16) ; use  Function to plug it into the DE to verify. Check \
with DSolve.\
\>", "Subsection",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7504353908460393`*^9, 3.750435533644379*^9}, 
   3.750436021350568*^9, {3.7504366346060705`*^9, 3.7504366647279806`*^9}, 
   3.7504367736855793`*^9, {3.7504368235006104`*^9, 3.7504368786014233`*^9}, {
   3.7504377470776587`*^9, 3.7504377470932846`*^9}, {3.750437971863961*^9, 
   3.750437976333035*^9}, {3.750438145964856*^9, 3.7504381470728455`*^9}, {
   3.750439014201287*^9, 3.750439026209868*^9}, {3.7504391190310345`*^9, 
   3.7504391372117605`*^9}, 3.750439332346902*^9, {3.7504442088530364`*^9, 
   3.750444236558653*^9}, {3.7504445543265343`*^9, 3.7504445708227262`*^9}},
 CellTags->"P852",ExpressionUUID->"f9c8ad6b-c28d-4102-b968-289bf02ade05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"2", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"2", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.753489900712646*^9, 3.7534899107770014`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"98c895ea-7765-4d7a-ac6a-7864262c1b43"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7534899115766015`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"2e6fea97-45d7-4de3-98db-bfce82eb95e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", 
  RowBox[{"eq", "/.", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{"r", " ", "x"}], ")"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.753489915805047*^9, 3.7534899282809525`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"341537fa-868b-4434-9f5c-7e90df02e56c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "x"}]]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "x"}]], " ", "r"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "x"}]], " ", 
    SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.753489928843438*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"9dab8b4a-9ef7-4c25-9d44-127931b554bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"eq2", ",", "r"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534899325238276`*^9, 3.7534899405285835`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"bd931881-0acd-41ca-8f44-8bed7205b1f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.753489941445878*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"46934bc7-2629-4246-930c-d225b62e850d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trialsol", "=", 
  RowBox[{
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"r", " ", "x"}], ")"}]}], "/.", "roots"}]}]], "Input",
 CellChangeTimes->{{3.7534899540490503`*^9, 3.7534899653679557`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"d525cdf8-6d2c-4674-83b7-aa99fa26e592"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", "x"}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", "x"}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7534899659801493`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"7b85cf25-ee51-4a8c-a6c5-e236aadc69d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gensolimag", "=", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], ",", 
       RowBox[{"C", "[", "2", "]"}]}], "}"}], "*", "trialsol"}], "]"}], "//", 
   "Total"}]}]], "Input",
 CellChangeTimes->{{3.7534899708824487`*^9, 3.7534899827543516`*^9}, {
  3.753490040443115*^9, 3.7534900411245*^9}, {3.753490135975709*^9, 
  3.753490136279953*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"3d702f1a-c316-4b46-bea4-e6581e793cb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", "x"}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", "x"}]], " ", 
   RowBox[{"C", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.753489983545189*^9, 3.7534900416767726`*^9, 
  3.753490136925171*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"cf34d47a-2b5b-4233-98fc-5f61991800a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"famsol", "=", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7534900163654923`*^9, 3.753490024659277*^9}, {
  3.7534900744112577`*^9, 3.7534900910398417`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"050bfa3b-43b2-434f-9b64-46c22ed31770"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", "x"}]], " ", 
     RowBox[{"C", "[", "1", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", "x"}]], " ", 
     RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7534900439157853`*^9, {3.753490074885989*^9, 3.753490092425095*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"b09ac482-2256-4b99-9e37-6b7449185ff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq", "/.", 
   RowBox[{"y", "\[Rule]", "famsol"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7534900507168064`*^9, 3.753490081865556*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"0a866458-ee40-4819-b568-661c3c394ef0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7534900536268873`*^9, 3.753490093906133*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"3e2cab69-9814-45c5-9e36-41050ce1d2ff"]
}, Open  ]],

Cell[TextData[{
 "We can use the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", " ", "x"}], ")"}]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Beta]", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"C", "[", "2", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", " ", "x"}], "]"}]}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"769b6991-4aa5-4fea-a973-30f8c9abf943"],
 " to generate a real solution: "
}], "Text",
 CellChangeTimes->{{3.7534901394882774`*^9, 
  3.753490177839744*^9}},ExpressionUUID->"e419a98d-4f64-4617-a679-\
19133def8434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gensolreal", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", " ", "x"}], ")"}]}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"C", "[", "2", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Beta]", " ", "x"}], "]"}]}]}], ")"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.753490179528225*^9, 3.7534902737639637`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"cf07c1ef-378b-414b-9548-196bbdd47f43"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.753490225597052*^9, 3.753490255155712*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"f7b6d7d6-2bf1-4144-aa39-6dd6269c3632"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq", "/.", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{
          RowBox[{"C", "[", "2", "]"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], "]"}]}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.753490228930554*^9, 3.7534902414945517`*^9}, 
   3.7534902844385896`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"9725cc7c-364c-4260-9c13-2dccf613da44"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.753490242259506*^9, 3.7534902852542443`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"efd71deb-d9bb-46db-a0d8-50a237b5ca86"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"a24acc76-50fe-4a1e-a99f-d953fe2165f9"],

Cell[TextData[StyleBox["In-Class Activity Week 6:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.753490477278508*^9, 
  3.753490489330451*^9}},ExpressionUUID->"d0924a30-dfaa-4a96-97d0-\
09993a26a2b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "-", "x"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.753490406179551*^9, 3.7534904260734043`*^9}, {
  3.7534904669799995`*^9, 3.753490467651202*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"ce348c1b-d05a-4bd6-bf62-9dc8c314c255"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{{3.7534904116878653`*^9, 3.75349042666783*^9}, 
   3.753490468099007*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"67ede399-5eb2-4dd3-bde6-985fc73afd5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.753490447480522*^9, 3.7534904650232296`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"e99271d5-2325-45e5-9f7b-acc292458d15"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{{3.753490458240368*^9, 3.753490465445139*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"9bef0ab2-1421-44ac-b860-b95aaeb613bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7534908609349775`*^9, 3.75349090386133*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"04c80d0f-0452-4f91-944e-feca80f7dae3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox["x", "4"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "2"],
    SeriesData[$CellContext`x, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {
    Rational[1, 2], 
    Rational[1, 4]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7534908715326605`*^9, 3.7534909042483025`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"c7ccca67-b29a-4c27-ac0e-041e6d9f5f1b"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"a27b5ffc-6fd4-44bd-bbc2-96fc4ccb28d1"],

Cell[TextData[{
 "\n\n\n",
 StyleBox["Week 9 Homework: ",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.753585531280717*^9, 
  3.753585535448615*^9}},ExpressionUUID->"a5a02426-547b-41b0-b5f1-\
cb5dcdf05d05"],

Cell[BoxData[
 Graphics3DBox[{Arrow3DBox[{{0, 0, 0}, {0, 0, 7}}], 
   Arrow3DBox[{{0, 0, 0}, {0, 4, 0}}], Arrow3DBox[{{0, 0, 0}, {4, 0, 0}}], 
   Line3DBox[{{2, 0, 0}, {2, 0, 5}}], Line3DBox[{{0, 2, 0}, {0, 2, 5}}], 
   Line3DBox[{{2., 0., 0}, {1.9900083305560516`, 0.1996668332936563, 0}, {
     1.9601331556824833`, 0.39733866159012243`, 0}, {
     1.910672978251212, 0.5910404133226792, 0}, {
     1.8421219880057702`, 0.778836684617301, 0}, {
     1.7551651237807455`, 0.958851077208406, 0}, {
     1.6506712298193564`, 1.129284946790071, 0}, {
     1.5296843745689768`, 1.2884353744753823`, 0}, {
     1.3934134186943308`, 1.4347121817990456`, 0}, {
     1.2432199365413288`, 1.5666538192549668`, 0}, {
     1.0806046117362795`, 1.682941969615793, 0}, {
     0.9071922428511546, 1.7824147201228708`, 0}, {
     0.7247155089533468, 1.8640781719344528`, 0}, {
     0.5349976572491747, 1.927116370834386, 0}, {
     0.33993428580048163`, 1.9708994599769205`, 0}, {
     0.1414744033354058, 1.994989973208109, 0}, {0, 2, 0}}], 
   Line3DBox[{{2., 0., 5}, {1.9900083305560516`, 0.1996668332936563, 5}, {
     1.9601331556824833`, 0.39733866159012243`, 5}, {
     1.910672978251212, 0.5910404133226792, 5}, {
     1.8421219880057702`, 0.778836684617301, 5}, {
     1.7551651237807455`, 0.958851077208406, 5}, {
     1.6506712298193564`, 1.129284946790071, 5}, {
     1.5296843745689768`, 1.2884353744753823`, 5}, {
     1.3934134186943308`, 1.4347121817990456`, 5}, {
     1.2432199365413288`, 1.5666538192549668`, 5}, {
     1.0806046117362795`, 1.682941969615793, 5}, {
     0.9071922428511546, 1.7824147201228708`, 5}, {
     0.7247155089533468, 1.8640781719344528`, 5}, {
     0.5349976572491747, 1.927116370834386, 5}, {
     0.33993428580048163`, 1.9708994599769205`, 5}, {
     0.1414744033354058, 1.994989973208109, 5}, {0, 2, 5}}], 
   Line3DBox[{{0, 0, 5}, {0, 2, 5}}], Line3DBox[{{0, 0, 5}, {2, 0, 5}}], 
   Text3DBox[
    FormBox[
     StyleBox["\<\"x\"\>",
      StripOnInput->False,
      FontSize->12], StandardForm], {3.5, -0.35, 0}], Text3DBox[
    FormBox[
     StyleBox["\<\"y\"\>",
      StripOnInput->False,
      FontSize->12], StandardForm], {0.45, 3.7, 0}], Text3DBox[
    FormBox[
     StyleBox["\<\"z\"\>",
      StripOnInput->False,
      FontSize->12], StandardForm], {-0.3, -0.5, 6.5}], Text3DBox[
    FormBox[
     StyleBox["\<\"2\"\>",
      StripOnInput->False,
      FontSize->12], StandardForm], {2, -0.35, 0}], Text3DBox[
    FormBox[
     StyleBox["\<\"5\"\>",
      StripOnInput->False,
      FontSize->12], StandardForm], {-0.3, -0.3, 5}]},
  Boxed->False,
  ImageSize->{312.95878727116474`, 427.3871558684623},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.4800785573576434`, 0.33829570686993915`, 2.1295359773348475`},
  ViewVertical->{-0.7460870969871882, 0.024289110247417325`, 
   0.6654052019879456}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.751980227852872*^9, 3.7519802631199436`*^9}, 
   3.7519803459653044`*^9, 3.7519855654576197`*^9, 3.7525562531567445`*^9, 
   3.7525572991181316`*^9, {3.7525577940768456`*^9, 3.752557805876249*^9}, 
   3.7526288517884507`*^9, 3.7526293771608405`*^9, 3.752631172449967*^9, 
   3.752636683304063*^9, 3.7526372145112724`*^9, 3.752637356415581*^9, {
   3.752637415018578*^9, 3.7526374362108593`*^9}, {3.7526374731735764`*^9, 
   3.7526374809139843`*^9}, 3.752637538929429*^9, 3.7526376701813602`*^9, 
   3.7526378586557627`*^9, 3.752638028801338*^9, 3.752638075952223*^9, 
   3.7526413931682615`*^9, 3.752641431084339*^9, {3.752641464449799*^9, 
   3.752641482977001*^9}, 3.7526416774591393`*^9, 3.7526417163361607`*^9, 
   3.7526417919129667`*^9, {3.7526420077963977`*^9, 3.752642019915779*^9}, {
   3.752642951988305*^9, 3.7526429707132215`*^9}, 3.7526430448898506`*^9, {
   3.7526432152402143`*^9, 3.7526432352048216`*^9}, {3.7526433240591297`*^9, 
   3.7526433422914047`*^9}, 3.7526434123151236`*^9, 3.7526435160855856`*^9, {
   3.7526435529250107`*^9, 3.7526435807545853`*^9}, 3.752643845553774*^9, 
   3.7526439093471518`*^9, 3.7526440011356564`*^9, 3.7526440981202965`*^9, {
   3.7526444237197886`*^9, 3.75264444163986*^9}, 3.752644661802593*^9, 
   3.752644699413045*^9, 3.7526448554277525`*^9, {3.752645268786661*^9, 
   3.7526452801544943`*^9}, 3.752646018517846*^9, 3.7526467833930597`*^9, {
   3.7526468471377974`*^9, 3.7526468770814905`*^9}, 3.7526469592679443`*^9, {
   3.7526933916183853`*^9, 3.752693407875911*^9}, 3.75271581237803*^9, 
   3.752716739013085*^9, 3.7527175279431076`*^9, 3.7527220010979147`*^9, 
   3.7527220547424874`*^9, 3.7527220849205027`*^9, 3.752722478321181*^9, 
   3.7527225463801904`*^9, 3.75272442542514*^9, 3.7527244773713675`*^9, 
   3.7527246431985807`*^9, 3.752724747273147*^9, 3.7527253530874357`*^9, {
   3.7527255055812006`*^9, 3.752725523039733*^9}, 3.752726958082184*^9, {
   3.7527270403807497`*^9, 3.7527270627395945`*^9}, 3.7527271663819876`*^9, {
   3.7527272509950104`*^9, 3.7527272600169144`*^9}, 3.7527282615043397`*^9, 
   3.7527283513159657`*^9, 3.7527298885734015`*^9, 3.7527299513717422`*^9, 
   3.752730761172819*^9, 3.752730813584876*^9, {3.7527309261997414`*^9, 
   3.7527309507336287`*^9}, 3.7527309982525587`*^9, {3.752731032473938*^9, 
   3.7527310570990944`*^9}, 3.7527311286957426`*^9, {3.752731214079008*^9, 
   3.752731247170226*^9}, {3.7527313132166643`*^9, 3.7527313646763153`*^9}, 
   3.7527319776493874`*^9, {3.7527320184982977`*^9, 3.752732044701172*^9}, 
   3.7527323865555053`*^9, {3.7527324497905*^9, 3.7527324619149027`*^9}, {
   3.7527356911612325`*^9, 3.7527357136767035`*^9}, 3.7527361166996098`*^9, 
   3.7527365383154335`*^9, 3.752736748165285*^9, 3.7527374070900135`*^9, 
   3.7527374372398806`*^9, 3.752738107645508*^9, {3.7527739548477645`*^9, 
   3.7527739815253415`*^9}, 3.7527740481226053`*^9, 3.752774144240677*^9, 
   3.7527742269114656`*^9, 3.7527750107318897`*^9, 3.7527762862196684`*^9, 
   3.7527763645412045`*^9, {3.752776559467551*^9, 3.7527765892399063`*^9}, 
   3.752776804885292*^9, 3.7527771946345577`*^9, 3.752777231282545*^9, {
   3.7527772847206573`*^9, 3.752777352349805*^9}, {3.752777383820654*^9, 
   3.7527774007054725`*^9}, 3.7527775956536756`*^9, 3.7527777853490186`*^9, 
   3.7527782654241824`*^9, 3.752778730876209*^9, 3.7527788133660316`*^9, 
   3.752778859723056*^9, 3.7527790724885693`*^9, 3.7527791174714103`*^9, 
   3.7527791543729477`*^9, 3.75277919742667*^9, 3.752779970976163*^9, 
   3.7527800123130727`*^9, 3.7527802723040557`*^9, 3.7527804491698265`*^9, 
   3.7527804795345182`*^9, 3.7527805252473335`*^9, 3.752781055640725*^9, 
   3.7527815261140127`*^9, 3.7527839079506197`*^9, 3.752783975924204*^9, 
   3.752784074333642*^9, 3.752784875153347*^9, 3.752785516649995*^9, 
   3.7527855496817074`*^9},
 FontSize->24,
 CellLabel->
  "Out[178]=",ExpressionUUID->"2e1376d8-3ad9-4ded-8eb3-b02a888b832c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"func", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ",", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
    RowBox[{"3", "z"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.753585562322739*^9, 3.7535855948448105`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"56f1e78d-efb7-4bf8-a752-b7f73f296227"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
   RowBox[{"3", " ", "z"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7535855955470085`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"e289259a-22c9-4edc-9a65-1178ea5c2823"]
}, Open  ]],

Cell["For top surface: ", "Text",
 CellChangeTimes->{{3.753585550480432*^9, 3.7535855525528936`*^9}, {
  3.7535862733441973`*^9, 
  3.7535862738249197`*^9}},ExpressionUUID->"5b4aabd9-ac18-4d44-8594-\
65080a40516c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"func", ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "*", "r"}], "/.", 
     RowBox[{"z", "\[Rule]", "5"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "0", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.753585554652276*^9, 3.7535855556036997`*^9}, {
  3.753585642912323*^9, 3.753585645288972*^9}, {3.7535856763250103`*^9, 
  3.753585856611142*^9}, {3.753585921970393*^9, 3.753585924161539*^9}, {
  3.7535861002897415`*^9, 3.753586105761118*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f49dce54-d568-42b1-a65e-7702767a8dbd"],

Cell[BoxData[
 RowBox[{"15", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{
  3.753585748495096*^9, {3.753585793565622*^9, 3.7535858005898466`*^9}, {
   3.753585834447345*^9, 3.753585859178238*^9}, 3.7535861062129087`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"38cdcf37-41b0-491f-b72d-ccd8892a6c61"]
}, Open  ]],

Cell["For bottom surface: ", "Text",
 CellChangeTimes->{{3.753585550480432*^9, 3.7535855525528936`*^9}, {
  3.7535862705367002`*^9, 
  3.753586274697571*^9}},ExpressionUUID->"f826105b-1559-48bc-8f2f-\
41a4f71d4307"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"func", ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "*", "r"}], "/.", 
    RowBox[{"z", "\[Rule]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535862764209757`*^9, 3.7535862978177814`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ade4446e-3419-420e-8e73-c1c43d2e60e0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.753586299057431*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4f1797b6-2035-4bef-b81a-6556edf73cc2"]
}, Open  ]],

Cell["For curved side:", "Text",
 CellChangeTimes->{{3.753586129776923*^9, 
  3.75358613184839*^9}},ExpressionUUID->"e45187e9-4f0d-4294-8198-\
0cbe9890b8a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"func", ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "*", "r"}], "/.", 
    RowBox[{"r", "\[Rule]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535861345501633`*^9, 3.753586165304956*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"18e4ff69-8a8c-4fab-88c1-1658e0c298bd"],

Cell[BoxData[
 RowBox[{"25", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.75358616590937*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"864c44e0-9e0a-4ff3-98aa-230f615324b7"]
}, Open  ]],

Cell["For side along x-axis:", "Text",
 CellChangeTimes->{{3.7535861787001553`*^9, 
  3.7535861832250853`*^9}},ExpressionUUID->"49cfcce0-2257-45d6-96b7-\
922f92518943"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"func", ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "*", "r"}], "/.", 
    RowBox[{"\[Phi]", "\[Rule]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535861852466826`*^9, 3.753586220888379*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"66126d7c-846a-42a3-b427-cc2d6ad3fe05"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7535862215067267`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"8b17d887-a0b9-4126-8bc7-13c178328756"]
}, Open  ]],

Cell["For side along y-axis:", "Text",
 CellChangeTimes->{{3.7535861787001553`*^9, 3.7535861832250853`*^9}, {
  3.7535862354165497`*^9, 
  3.753586236305207*^9}},ExpressionUUID->"46d5525c-3993-4dbd-b9df-\
54a403959292"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"func", ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "*", "r"}], "/.", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7535861852466826`*^9, 3.7535862610011587`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"2b12c9c1-d7cf-4e41-9135-43c066da221c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7535862215067267`*^9, 3.753586261488852*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"bbe349ad-68f6-45d8-9642-ef0faa9467d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Div", "[", 
    RowBox[{"func", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Phi]", ",", "z"}], "}"}], ",", 
     "\"\<Cylindrical\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753586313479911*^9, 3.753586347713091*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"5aa32aab-f3ed-475c-8fa7-5d2563459a05"],

Cell[BoxData[
 RowBox[{"40", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.7535863483653474`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e2b31396-2114-49e5-a485-05bd46ccc342"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"24ffaeb6-7849-4e4d-93ff-2b68403bd700"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nterms", "=", "5"}]], "Input",
 CellChangeTimes->{{3.7535864764310937`*^9, 3.753586481752905*^9}, {
  3.7535867155136757`*^9, 3.7535867156264067`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"219532e4-6e96-4b13-b32d-1c46eb6dd0db"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.753586478131702*^9, 3.753586482012175*^9}, 
   3.753586736673929*^9, 3.753587348621714*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"29dfb546-8a65-4066-b6ee-9227768a5f55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"2", "-", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"funcplot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"2", "-", 
     RowBox[{"Mod", "[", 
      RowBox[{"x", ",", "4", ",", 
       RowBox[{"-", "2"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.753434670624398*^9, 3.753434706389779*^9}, {
  3.7534348234617157`*^9, 3.7534348770304976`*^9}, {3.753454890343891*^9, 
  3.753454905289895*^9}, {3.7535867856683817`*^9, 3.7535868117940493`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"872ed061-3dfb-415c-8fa5-a870d15b0e2d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hk8VF38B/CZsYTMjMRsmchIoSKRtb6nRSSFiJ70REILTyURiVSoPFK2
yJKlkq3H0mJJzSlSiJS1bCNCqOzKNr/7+71+f937fn3O/d77x/3ec85d4Xxq
ryuFRCKJkEmk/z0G9O8eEwp5eCJZr0oopKM+f8Zk2xwPx//6q/HUOB3tkema
LvrDw/pbLnR19dGRksHp+VPjPBzUiyf5tXT0OixKQtDHwxIa5spBiXQksa5l
Oa7lYaXig/4kPTqKOeu0KyiRh60+XVpLPklDOWSv+yQ9Hs4Vfx9JaZdGYq6m
2uy/lbFcDLfK5awkWtr6xiM9cgW2cGI+vr5DHO0tTziiVq2EzajuEQ9WiyD/
X5s8bvUo4uEX0/lbIoRQfC7hRJ7lcizoPJ79YvMf2BO1T2nhjgLW32l36ffR
MTBNfrHHbJiD9QeHvbc698PIjfY50T4ODjrV27dKqx8SAmezX3VxcP1Emz11
oQ+GHQ0WGTVwsJOw2qD1Th9EKT/lry3l4FtyWfP/fPwGnQ9ztZZe4+CRza4h
d1Av+BQmynbyODg/uiNmZHk3KN0rxQlcDiaxm8SahwVQFf35pD2Tg83uvvd5
XioABW9mTb0UBwsyn+8PtRPAa73oK+WjbKx0YYOBvkIX0F6ETWTy2VhQn2N2
c6YNMt76NXs5sLHT+aSjm4qa4I62z7YsWza+pXZEL8a8CcKTz+R37mZj3Kq2
aKijEc54uYftREQ9vaKMeNFG2KT492bFlWxcP/7x27j1J2j0QRnVP1k46Avt
ne3nWnjbbbyUNMDCAv2koxRSLZRaGATpdrMwilNblK/6HlKVtQ+kNrAwyXb7
jsVnq8G9jkfzKWZhp1q/ile0t0BRXeSz4jIxHvfiddsxTN4S6bHzJ7ypFxc3
vYSBWaFl+Fni+pkF4VLeC6j7+Ftt2o24v5dOYPWLErgTMNjxfhcx3i3lvN54
IYQP9JlTTIjxvNKSKFQAgTY9RXqbCfOzRtuW5YGLWntkuhbhQrmfZtaZYB/T
utCiRtTTMPcQDt0Hc2GjO5VH5A8uDj4NTQOtploTX3nC/3cSCzxUXfiIRnhH
UIyrww1g5FQq9iwivD+XczH8IkgyysNZZMK3nNa/v2YNc0H8P7tnmPg3+eJ4
4gQd/Rp67nZlnIk7W87VivfT0Ve74obiYSaueHT6oednOnq7puARr4uJI/5y
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
vOUX4P//DxDvP0l8vUvi5v8B/LKGHg==
       "]]},
     Annotation[#, "Charting`Private`Tag$15158#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 3.999999591836735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.753586630351901*^9, 3.753586736765689*^9, {3.7535867871195335`*^9, 
   3.753586812273086*^9}, 3.753587348717495*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"2785efed-cbfd-4d69-a620-9b70588718e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymbolicFourierSeries", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", "n", "]"}], 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Pi]", " ", "\[ImaginaryI]", " ", "n", " ", "x", " "}], 
         "L"]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "nterms"}], ",", "nterms"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7535863793675175`*^9, 3.7535864721545253`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"ad692c09-7600-45c3-aea4-7c6075203c1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]], " ", 
   RowBox[{"A", "[", 
    RowBox[{"-", "5"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]], " ", 
   RowBox[{"A", "[", 
    RowBox[{"-", "4"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]], " ", 
   RowBox[{"A", "[", 
    RowBox[{"-", "3"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]], " ", 
   RowBox[{"A", "[", 
    RowBox[{"-", "2"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]], " ", 
   RowBox[{"A", "[", 
    RowBox[{"-", "1"}], "]"}]}], "+", 
  RowBox[{"A", "[", "0", "]"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]}]], " ", 
   RowBox[{"A", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]}]], 
   " ", 
   RowBox[{"A", "[", "2", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]}]], 
   " ", 
   RowBox[{"A", "[", "3", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]}]], 
   " ", 
   RowBox[{"A", "[", "4", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "L"]}]], 
   " ", 
   RowBox[{"A", "[", "5", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.753586461763301*^9, 3.7535864834124327`*^9}, 
   3.753586736795577*^9, 3.7535873487453885`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"2eb67de6-bfa0-47a1-aee7-9b573f3619bd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"SymbolicFourierSeries", "*", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Pi]", " ", "\[ImaginaryI]", " ", "n", " ", "x", " "}], 
         "L"]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhs", "[", "n_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"func", "*", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Pi]", " ", "\[ImaginaryI]", " ", "n", " ", "x", " "}], 
         "L"]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7535864920174313`*^9, 3.7535865314500527`*^9}, {
  3.7535875246605473`*^9, 3.7535875615645475`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"a9a6956a-e3ed-4a5d-a052-775cb40e6a8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"equations", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"lhs", "[", "i", "]"}], "\[Equal]", 
      RowBox[{"rhs", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "nterms"}], ",", "nterms"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "equations", "]"}]}], "Input",
 CellChangeTimes->{{3.75358655857767*^9, 3.7535865845245485`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"0a4092c5-cc38-4389-97bb-5c1446fe4db2"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", "5", "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["L", "2"]}], 
         RowBox[{"5", " ", "\[Pi]"}]]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", "4", "]"}]}], "\[Equal]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["L", "2"]}], 
        RowBox[{"2", " ", "\[Pi]"}]]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", "3", "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["L", "2"]}], 
         RowBox[{"3", " ", "\[Pi]"}]]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", "2", "]"}]}], "\[Equal]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["L", "2"]}], "\[Pi]"]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", "1", "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["L", "2"]}], "\[Pi]"]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", "0", "]"}]}], "\[Equal]", 
       RowBox[{"4", " ", "L"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", 
         RowBox[{"-", "1"}], "]"}]}], "\[Equal]", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["L", "2"]}], "\[Pi]"]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", 
         RowBox[{"-", "2"}], "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["L", "2"]}], "\[Pi]"]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", 
         RowBox[{"-", "3"}], "]"}]}], "\[Equal]", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["L", "2"]}], 
        RowBox[{"3", " ", "\[Pi]"}]]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", 
         RowBox[{"-", "4"}], "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["L", "2"]}], 
         RowBox[{"2", " ", "\[Pi]"}]]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"A", "[", 
         RowBox[{"-", "5"}], "]"}]}], "\[Equal]", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["L", "2"]}], 
        RowBox[{"5", " ", "\[Pi]"}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.753586573486961*^9, 3.7535865853632355`*^9}, 
   3.7535867386643553`*^9, 3.7535873504663467`*^9, 3.7535875679617643`*^9, 
   3.7535876013594656`*^9},
 CellLabel->
  "Out[140]//TableForm=",ExpressionUUID->"cce1ce97-1648-430d-8189-\
786798582655"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"equations", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"A", "[", "n", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "nterms"}], ",", "nterms"}], "}"}]}], "]"}]}], "]"}], "//",
   "Flatten"}]], "Input",
 CellChangeTimes->{{3.75358663522385*^9, 3.7535866715289526`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"16d73d02-b2ff-4919-8f91-4f2cde621bf3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"-", "5"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "L"}], 
     RowBox[{"5", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"-", "4"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "L"}], 
      RowBox[{"4", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"-", "3"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "L"}], 
     RowBox[{"3", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"-", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "L"}], 
      RowBox[{"2", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"-", "1"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "L"}], "\[Pi]"]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "0", "]"}], "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"A", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "L"}], "\[Pi]"]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "2", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "L"}], 
     RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "3", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "L"}], 
      RowBox[{"3", " ", "\[Pi]"}]]}]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "4", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "L"}], 
     RowBox[{"4", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"A", "[", "5", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "L"}], 
      RowBox[{"5", " ", "\[Pi]"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7535866492096753`*^9, 3.7535866720216775`*^9}, 
   3.7535867387222004`*^9, 3.7535873505271854`*^9, {3.753587493439546*^9, 
   3.7535875187437925`*^9}, {3.7535875711058044`*^9, 3.753587619985862*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"6d7ee98d-adb8-4d1c-a619-01b4f1b64c12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumericalFourierSeries", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SymbolicFourierSeries", "/.", "%"}], "/.", 
    RowBox[{"L", "\[Rule]", "2"}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.753586656121579*^9, 3.753586663080866*^9}, {
  3.753587339563427*^9, 3.753587342298618*^9}, {3.753587488012089*^9, 
  3.753587515018505*^9}, {3.753587577018468*^9, 3.753587617577566*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"202dc21d-44f8-4571-8752-d97b1440cdca"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "12"}], "+", 
     RowBox[{"15", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], "-", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "+", 
     RowBox[{"30", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
     "-", 
     RowBox[{"60", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "+", 
     RowBox[{"60", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "-", 
     RowBox[{"30", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
     "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "-", 
     RowBox[{"15", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]]}], 
     "+", 
     RowBox[{"12", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], "-", 
     RowBox[{"60", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "2"]], 
      " ", "\[Pi]"}]}], ")"}]}], 
  RowBox[{"30", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.7535866636349764`*^9, 3.7535866736659784`*^9}, 
   3.753586738754116*^9, 3.7535873506119676`*^9, {3.753587494741146*^9, 
   3.75358751947409*^9}, {3.753587584549474*^9, 3.7535876205869246`*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"5787fcac-c060-46a3-8933-8da21e5b2750"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierPlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"NumericalFourierSeries", "/.", 
      RowBox[{"L", "\[Rule]", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753586676768238*^9, 3.753586693674899*^9}, {
  3.7535867532515783`*^9, 3.753586781417297*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"739f69c4-aed0-4fbe-8bf6-52793763ac68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"FourierPlot", ",", "funcplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.75358679063006*^9, 3.7535867942649574`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"3f6d42bc-ade3-4375-9849-9bc2c31ae679"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
hQ==
        "]], LineBox[CompressedData["
1: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
37BUhgJTss2mr2UB4+E2dzYZDzmKWouMWZChHtJ+k+RIi8qz2+axwIyh6+q7
TIbixTt1/tNkwfi54w+Okf1udf4uj+KzIDy3f8cVExlKyT/hOZfGAtM9T5oK
SH1ZIQx2+TATaG0al8pMZSjfPiHbrYsJe95bv00zk6FinVm2k41M6KgeHtlA
+isbevzftSomeV+avBdPcmWZecKSF0zoPmBwyZfkuvga4+o8JqTsrch/T+Z/
2+vadPA+E3Ibvx+OIOt3LOk/xbjGhAPPUsJuknq66aen34tgwuAL8zm/ST+D
dezX+BQTjsBV8a7FMjSecnNf4z9k/Q0Bab8NZEjBb67Ssd1MeHr3bpufngwx
1zzPFDgwYd8q0ak/2jIkVFlv/XAdE8Rbpv+1VJchtR9f+tcvZ8KheWV5vkIZ
0n6yL7ZTnwmnS062OCjJ0NzQoSVB05hQ/Nsvo2tiFBk6BNerC5kw4TzVTGNg
FC2fJQx4SmdCe19dRUfbKDIfvqthN6oMwf0LYxd/HkWWbxaU9v1WhurwKfLU
l6NoyxVwi/imTN5Httwwzx5Fbku/pb58qQwWi5RCFUJG0d7UpfYWT5Rht3z1
VVXvUeShGk2tSFeGC2G1trB1FHmPrXKqjFaG99fqKwpmjiLfAzeVNwUr///+
TSOURtHRpqGCmmPK4KFG72rrHkEBJWmCemdlmPjvVu6arBF0yoBausNWGezd
eOq1ESMo6I6j1zcLZfiyZbWRbP8ICjvLqWibpwyz7QODp2mNoNg1RwKlY0rg
M7muKy9gGF0pqNT7p1cJBka0DCpshtG1ObPr/3xXgomqu7+fzhhGicpfF41W
KIFvyMMlu8uG0IMq/IuaoAR3LZZs9ZYbQmUOzC2qhkpgVPRixNh+EFWU75G/
MUsJtOVdrkZqDqL3y0qyNKYqwcrDJvvrfv5B1VN9GNoUJQjiOfnH+/9Bzc3/
Fut/ZEDxpjuXdZIH0HebBQcevWSA64LDm90PDaDO0nBVwycM0Lhm/Xy1yQDq
TjI9vOwWA2Kmmhlr1/ajkX1Jc8wPMEBhvnN7pKAfjX0ZrytzZkD6faeQyo4+
NLHO/tw6WwZsmUU9hp72IYW5jOaNxgzgb5vya9CtDynedI34NI8BX7+usnYw
6UNK7MJlW6YxwJCa/FxH2Id4fV6x2wgGyCncMQqM7UXCXeUrGscIGFl4rcfU
uhdJqqf1OvUSoKvVN20RqxdNXeV/o/U7Ad3zKksOVUqRRt7ndbvrCIgKGI6l
XpaiaTP1hzsrCIAXNPPx7VKkHR+avL+IgCznP0v26EiR7jHjSa9kAlLzv8xL
f9ODoGmjbls8AeeaevX0rvUg+1Vudg7nCfBp2Lmm2rsHdaf6nX7nT0DO/PmF
tzb0oCB2RAbyImDjy4OeEbo9SHI4sS7XhYDw4pN1l1k9KKs+T362LQEa0nG1
9MFuZI4q5t5YTcAES+8vNHej+uQmB64RAfz05rqyym7kpTQQdE6XAKEP91FK
aTdS8KZnjaiReli/Vqwt6EbXaqfUH+CQfh/4jl7K6UYGJvMVWuUJ6CuvYjtn
d6OyxFXz7QYVgXtx4NLlR93Ikb51e0WnIkR87vIl8rvRgOeBYNN6RcgMSXwY
V9SNwj6dzn70ThFGQmhW3PJupLE07uvMYkUIj8w8t762G+XdSKNfy1YE4zMF
9YKObrSeUryAnaQItyQio2XD3ahlX7VjUJwifCR+CoOVe9DRD52hQ6GKkKoy
O7pkWg9iLhrL8TihCIlyFreylvWgpRMzGLbOigDplHkFB3vQezcjwzebFKEy
icuwO9+DXCssnU3MFeHZRaMzGfd6UGTskccz5pBxqWr58eYepC0733JlqiJo
6WKV/eM96JnzLWUmm9T38OQeeVUp6tR9s2twgA5yutOFQhspCoj6GuHeQYeA
BmQk7yFF/KHeJ43/0mHL4wbLk0FSlLpDoc3mLR2IMzcbV1yVIrNSCft1IR3W
itraiCwp+qwzb9myh2S9vq2KF0GKPCJW7H5wh6wXUPb2/EcpkhuwuzQtlg7f
wmvePG+SojgHj2dxIXTYviy1veUHuV9FgR2M43Qo9MLhBVIpgumXuYGedBgf
tmygDkiRfdh9k4GddDA+ENAe3C9F3T3P9+61oUPgNPpXao8UBdl+jG5YSYfT
pZssVrdLkeRpe+HGxXSI2Be/VPivFGVpjP54MYsOkGZ5wvS1FJmfYwmWTqHD
Sn/rV1Gk/oZf08wymHSwDAprb4mRIm/rJfs1J2kw3ZjWR/WRIvrj9bGX+2lw
QmB7sGaDFF2f4lyi2E6D5c/kA+dqSZHBad8u/zoaWV+P3iftQWUdoaK+chq4
u3R+ohT0IMcNN/Du5zRwehhQYOXfgwaysz2/PKDBwmH7oiKjHhQmfh1vmUgD
7vGj+uZ95H4F1JdCDFnf0QPq7pD71drTbRhMA5sLKfcPWZH7tYYiSfOjwdrp
Og9Zf36jlkzxKnUPsl61uWVezG90lK/nFe1Ig9mbCx96zv2N7jTZvjq+ggZB
mV9CVm/sQgvbF8o+G9LAUf+fJU++/UKvungGBrNpUG7Hn73S4xfqHK663smm
gUF/2D8c359Il2/pa9uoAPSzYaVrrDvRc4leWlaVAoTHUWzmFHYgS02lZsZL
BYix6b+8fWYH8ppbvh7SFCCy+sDUCz1tKMfCfPo8PwXIfDFw7b8drWiV1Yyt
YR5kvWmjq1g5LeizLSWybacCxP8U5gXTW9CQC4xeNVeAxmTxzhyHJmTiv/wT
na8AWNI0I+37v+j9mamKrjQFUDD81GwTWoecwmTLi0aowDz587uBfi06HVeQ
6ttMhfJTfc7Xg6vRq4eGp1syqXA6+C7XqvUtqnwxFtGUSAUDk6oZflfKUWfh
wO/4y1Rwz1+cf3taGSLeZjtYnaDCl0+3RekZpYjf5Ld7vRd5/lR2i4ddCdL9
1+sldRcVWqb9iRNKniOr9rnzn60h+ZTU3fdWLnqhlgk3TKkg53JYp7YpGwV+
mdIzdx4VYMXzqXr705D8SMXHd9NIPbE3y4o0k1Hv8gXLbCRUwB7z6c6Kieh/
CPb7TA==
        "]], 
       LineBox[{{-2.2674109369511815`, 
        0.06638286025295881}, {-2.261854619413714, 
        0.08115080257597995}, {-2.2554994605885987`, 
        0.09960068008828338}, {-2.2484753376766298`, 
        0.12193520226660559`}, {-2.242120178851515, 
        0.14390434757406712`}, {-2.2354472620851444`, 0.1687744006188323}}], 
       LineBox[CompressedData["
1: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
GwtUlKQ4TR7lwP8Axuqseg==
        "]], LineBox[CompressedData["
1:eJwVV3k8lN8XZhYzZph9pE3RYkkiQsI9JISikiRbsrSolBIp2bMTEiUkJH1b
UIiSJFuStSRLZI+hrI3t9/7+ej/P5577nOece+57z5F0OH/QCScgIFAjKCDw
/6+DpRDu29t59FM70/tUUy4qm1rfGlQ2j9LE3JuddfPQ0Pv7Obj2ebR+Ksto
9mEBknDmv/04hdmnMIZ2PytBIQnjBzS5C8jX9bODm/J7tP3FVw2FrQvopHrJ
6ty+D8jq+iHGE/0FZDaaKHxsuhJ9HRgp+uqwgEDj4qm827VoKd8l6tC1BdTG
hBV5nHpk9uXCZ+k7C8jRr67Uf7EBTRGDjRvqFtBES9Lrqztbkb5kTFjG4AIi
qE/VFvt9Q4mad2s8cYtI/dTvrS/7vyNN92cGkuqLyFfLe15uuQsF/Py6++LD
RcSiiliNq/SjrtfGZz3fLKJ409Bj/zIHkEZcWYJP6yJSeEDOkpAcQhN7cobD
SEvo6nkvspfKb2T75Hr0wzNLqIXrXdzbO4E0PDb+aFFeRncmJ+kb1s6hBNMk
wg+TZfRrIXJ4kf4P/ZGhKfQ4LaP0wLuN6QQ+yv4x6zt2ZxmtL3s+b/p3Honp
fNostLCMFt9To7XaltE/4s7Xqx0EwGRl85rJWjxkXZz8nHJOAKY87oXk7SaA
effTXklvAcDtElQ6WkKAF0VSIjLxApDnFr+6L4sIzmdE7FQqBeCxnktq5RkS
cNoq3QubBIAlPbcvro0E5Xp+IRrdApBV71LjvJsMayVmcmFOAGodtr56xxKG
loZuwj45QbC/G7K5+DYF/LXurmxQFYTKMzo+6hMUUMwxVzi0WxDqZVgjDEMq
hAfUHDlqLQgDsm4/I8apoD4R4NpxUhCmd/HTmEgEBqy1/ewuC8LR2nWjeeEi
oKuan+MUJQiWhedlVq0RhYn0s++G7gqCmPL5qFo7UUihy7SceSQIWUo151zT
ROHfUPLihTJB8L89UugsToOsw0dY03WCMJHksyPflAbm5Uxpz++CkJPsZ/k9
gAYv7gWb+fwVhIbNP8Wze2nwiR08SBfAARkdu/SBQYeB8CCfB6I42P9x3nPT
LjoIEoK4yqtxMLBG/kPDcTqsuRb4X4UMDp7SwmNqAumgNhWw20IVB1mOPsXc
DDocdA1oH9yNg/FNA8/fvKPD2T7/C14HcHBCdPps1Tc6hFj7k6l2OBCzVPaE
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
pDg=
        "]], LineBox[CompressedData["
1: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
a9PeB9GTbBjnTRxTrfmO/gcm3yAV
        "]], LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAZHH+gFB+I0BAHBLx/jy7P9scEz96
gSNAWDnkOyMxwD9SyCf9o4QjQDCh8nKe98I/nFdDpduII0BwNk98lfvGPxMD
WGMFjCNAYK2ANPM6yj+KrmwhL48jQLgkGV7mrc0/7VVnKuWUI0CkVMME9TTS
P5pk84O9liNAmIw5qipd0z9ei14+FJojQDTCGxPwitU/cS0g9ZedI0Dkhf5y
EvTXP+jYNLPBoCNA/APqTng52j/k7PlezKQjQDCqpOScQ90/qRNlGSOoI0Aw
A26zuOPfP7y1JtCmqyNAxKeiK59h4T8zYTuO0K4jQC43WUujuOI/4vmpPa6y
I0C8TSjX+GrkPwc+Lau1uSNAlMi1O5yp5z9SxjOGxMcjQJqQ8tTxuO4/ZWj1
PEjLI0DgwSoAL0zwP3gKt/PLziNAU8QsWOFA8T+dTjph09UjQDrQ5fgUOPM/
6NZAPOLjI0Cedhz4LVX3P/p4AvNl5yNAA569kE9k+D8NG8Sp6eojQNhlSJLq
dfk/Ml9HF/HxI0Bw1gOLK5/7P0UBCc509SNAUP4SPh62/D9Yo8qE+PgjQJlt
SDAkzv0/akWMO3z8I0AHFYbz4eb+P33nTfL//yNAA1dYuPv//z9THuIS
        "]], 
       LineBox[{{9.71925085688831, 0.03608071374018618}, {9.725428701911625, 
        0.04921622126724201}, {9.73160654693494, 0.0639032945014335}}], 
       LineBox[{{1.6496792255620534`, -0.01038714379203931}, {
        1.6559017921052206`, -0.013340371956057417`}, {
        1.6608143446393004`, -0.014752379675694094`}, {
        1.667364414684739, -0.015341681869901702`}}], 
       LineBox[{{9.629328890437836, 0.007930492384568}, {9.631731385724674, 
        0.005105101485385344}}], 
       LineBox[{{-6.501280805469085, 
        0.34739794303961036`}, {-6.497412321738586, 
        0.3342010100808792}, {-6.4922135688991816`, 
        0.3165756682034393}, {-6.4894612879842075`, 0.3073039780233018}}], 
       LineBox[{{9.49335321621429, 0.36579553782709806`}, {9.499194887826633, 
        0.34577186043660335`}, {9.505344015839626, 0.324839076291751}, {
        9.510878231051317, 0.3061633647818729}}], 
       LineBox[{{9.543207271579625, 0.20196014214646096`}, {9.548695368331222,
         0.18540501238417062`}, {9.554537039943565, 0.1682436292726921}, {
        9.560378711555908, 0.15159704207892477`}}]},
      Annotation[#, "Charting`Private`Tag$18430#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt2Hk8VF38B/CZsYTMjMRsmchIoSKRtb6nRSSFiJ70REILTyURiVSoPFK2
yJKlkq3H0mJJzSlSiJS1bCNCqOzKNr/7+71+f937fn3O/d77x/3ec85d4Xxq
ryuFRCKJkEmk/z0G9O8eEwp5eCJZr0oopKM+f8Zk2xwPx//6q/HUOB3tkema
LvrDw/pbLnR19dGRksHp+VPjPBzUiyf5tXT0OixKQtDHwxIa5spBiXQksa5l
Oa7lYaXig/4kPTqKOeu0KyiRh60+XVpLPklDOWSv+yQ9Hs4Vfx9JaZdGYq6m
2uy/lbFcDLfK5awkWtr6xiM9cgW2cGI+vr5DHO0tTziiVq2EzajuEQ9WiyD/
X5s8bvUo4uEX0/lbIoRQfC7hRJ7lcizoPJ79YvMf2BO1T2nhjgLW32l36ffR
MTBNfrHHbJiD9QeHvbc698PIjfY50T4ODjrV27dKqx8SAmezX3VxcP1Emz11
oQ+GHQ0WGTVwsJOw2qD1Th9EKT/lry3l4FtyWfP/fPwGnQ9ztZZe4+CRza4h
d1Av+BQmynbyODg/uiNmZHk3KN0rxQlcDiaxm8SahwVQFf35pD2Tg83uvvd5
XioABW9mTb0UBwsyn+8PtRPAa73oK+WjbKx0YYOBvkIX0F6ETWTy2VhQn2N2
c6YNMt76NXs5sLHT+aSjm4qa4I62z7YsWza+pXZEL8a8CcKTz+R37mZj3Kq2
aKijEc54uYftREQ9vaKMeNFG2KT492bFlWxcP/7x27j1J2j0QRnVP1k46Avt
ne3nWnjbbbyUNMDCAv2koxRSLZRaGATpdrMwilNblK/6HlKVtQ+kNrAwyXb7
jsVnq8G9jkfzKWZhp1q/ile0t0BRXeSz4jIxHvfiddsxTN4S6bHzJ7ypFxc3
vYSBWaFl+Fni+pkF4VLeC6j7+Ftt2o24v5dOYPWLErgTMNjxfhcx3i3lvN54
IYQP9JlTTIjxvNKSKFQAgTY9RXqbCfOzRtuW5YGLWntkuhbhQrmfZtaZYB/T
utCiRtTTMPcQDt0Hc2GjO5VH5A8uDj4NTQOtploTX3nC/3cSCzxUXfiIRnhH
UIyrww1g5FQq9iwivD+XczH8IkgyysNZZMK3nNa/v2YNc0H8P7tnmPg3+eJ4
4gQd/Rp67nZlnIk7W87VivfT0Ve74obiYSaueHT6oednOnq7puARr4uJI/5y
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
vOUX4P//DxDvP0l8vUvi5v8B/LKGHg==
        "]]},
      Annotation[#, "Charting`Private`Tag$15158#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-0.015341681869901702`, 4.015345354039551}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753586794743759*^9, 3.75358735087226*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"09fbd031-a7f9-4e15-9fa7-04cfbf1d2b97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "0", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7535919465919223`*^9, 3.753591956958229*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"e64fd1ed-0026-4c6d-b53d-24f741943a34"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.753591949457475*^9, 3.7535919574150057`*^9}},
 CellLabel->
  "Out[131]=",ExpressionUUID->"92fa1395-1c4e-4e03-9abd-1169533ba984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "x", "]"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DiracDelta", "[", "x", "]"}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591596727462*^9, 3.753591607613227*^9}, {
  3.7535919678296804`*^9, 3.753591979589919*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"3d3f2818-4b28-4f89-94be-4ee23a124416"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.7535916081323366`*^9, 3.753591980168045*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"804657c7-d7af-4c58-bd2f-3e4a5de718cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "0.5", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7535915853610735`*^9, 3.7535915904932346`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"9dbbb9da-3064-44f9-a4f0-ea23133dd636"],

Cell[BoxData["1.1276259652063807`"], "Output",
 CellChangeTimes->{3.7535915910788836`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"a552779d-5cc6-41ec-a3e8-fb5948727c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "x", "]"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x", "-", "0.5"}], "]"}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591596727462*^9, 3.753591607613227*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"0943396a-1b54-4cda-9964-7128b88bd1e8"],

Cell[BoxData[
 RowBox[{"-", "0.5210953054937474`"}]], "Output",
 CellChangeTimes->{3.7535916081323366`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"b5e76905-359f-42a3-9be9-d267b7e0a53c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "1", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591379984372*^9, 3.7535913859175406`*^9}, 
   3.7535915947185163`*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"e9be0699-1b1a-4282-9628-9bb67fc7e859"],

Cell[BoxData["1.5430806348152437`"], "Output",
 CellChangeTimes->{{3.7535913833113995`*^9, 3.7535913863722982`*^9}, 
   3.753591595161641*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"ae5d0762-2cf4-42b8-b907-7c88e052d55e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "x", "]"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x", "-", "1"}], "]"}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591362876648*^9, 3.753591389213969*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"5d4b1a60-daaf-4d76-a2ff-e9e0d6a7adfe"],

Cell[BoxData[
 RowBox[{"-", "1.1752011936438014`"}]], "Output",
 CellChangeTimes->{{3.7535913765889564`*^9, 3.7535913896149364`*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"929c3b81-5fa5-4d78-b0c5-82cf1c307de0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "\[Pi]", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7535914613436604`*^9, 3.7535914653893895`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"13dc50f3-4efa-4bab-be05-489cb4ee9f8e"],

Cell[BoxData["11.591953275521519`"], "Output",
 CellChangeTimes->{3.75359146581721*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"dde0f915-bf53-45ed-a009-6818b3ec854f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "x", "]"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x", "-", "\[Pi]"}], "]"}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591362876648*^9, 3.753591389213969*^9}, {
  3.753591473565964*^9, 3.7535914743349075`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"b15c50f3-d8a4-4067-950a-f61c4e3967c4"],

Cell[BoxData[
 RowBox[{"-", "11.548739357257746`"}]], "Output",
 CellChangeTimes->{3.7535914748278484`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"0aeb48af-69d7-4fa0-a3e6-87abf24521c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", 
   RowBox[{"3", 
    RowBox[{"\[Pi]", "/", "2"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591398129983*^9, 3.753591415870146*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"d4758912-d799-49ae-a35a-f4c2e14b6cff"],

Cell[BoxData["55.66338089043867`"], "Output",
 CellChangeTimes->{{3.7535914002317705`*^9, 3.7535914162320347`*^9}},
 CellLabel->
  "Out[119]=",ExpressionUUID->"d72a4ffe-af1e-4f79-bbd0-0749b5e17502"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "x", "]"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x", "-", 
         RowBox[{"3", 
          RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.753591362876648*^9, 3.753591411190303*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"d563cbc2-3d04-4b6d-b8d2-7c38980e2d98"],

Cell[BoxData[
 RowBox[{"-", "55.654397599417536`"}]], "Output",
 CellChangeTimes->{{3.7535913956503096`*^9, 3.753591412969263*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"f3f3797d-efa0-4d72-bdaf-26027eb7f505"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1007},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Problem"->{
  Cell[66447, 2120, 808, 23, 106, "Subsection",ExpressionUUID->"f8e7c35b-3c3b-4b56-8d95-5cdf9ebd5143",
   CellTags->{"Problem", "P2.17.26"}],
  Cell[68056, 2173, 1402, 25, 141, "Subsection",ExpressionUUID->"69cb9321-2cb0-4d23-8182-d0c6279841eb",
   CellTags->{"P2.16.8", "Problem"}],
  Cell[69461, 2200, 13464, 235, 177, "Text",ExpressionUUID->"a0d9d42e-1740-4a6a-b5d2-ed3eb3bd26c1",
   CellTags->{"P2.16.8", "Problem"}]},
 "P2.16.8"->{
  Cell[68056, 2173, 1402, 25, 141, "Subsection",ExpressionUUID->"69cb9321-2cb0-4d23-8182-d0c6279841eb",
   CellTags->{"P2.16.8", "Problem"}],
  Cell[69461, 2200, 13464, 235, 177, "Text",ExpressionUUID->"a0d9d42e-1740-4a6a-b5d2-ed3eb3bd26c1",
   CellTags->{"P2.16.8", "Problem"}]},
 "P2.17.26"->{
  Cell[66447, 2120, 808, 23, 106, "Subsection",ExpressionUUID->"f8e7c35b-3c3b-4b56-8d95-5cdf9ebd5143",
   CellTags->{"Problem", "P2.17.26"}]},
 "P852"->{
  Cell[1085446, 23296, 1217, 19, 115, "Subsection",ExpressionUUID->"f9c8ad6b-c28d-4102-b968-289bf02ade05",
   CellTags->"P852"]},
 "Wk2.P1"->{
  Cell[55162, 1772, 942, 17, 115, "Subsection",ExpressionUUID->"00f8721f-15d7-42d7-a776-9e07c808cba5",
   CellTags->"Wk2.P1"]},
 "Wk2.P2"->{
  Cell[63076, 2015, 702, 15, 95, "Subsection",ExpressionUUID->"526f47ce-033b-4d1e-96d4-4d3ab5a794ec",
   CellTags->"Wk2.P2"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Problem", 1198834, 25879},
 {"P2.16.8", 1199271, 25886},
 {"P2.17.26", 1199567, 25891},
 {"P852", 1199721, 25894},
 {"Wk2.P1", 1199864, 25897},
 {"Wk2.P2", 1200005, 25900}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 213, 3, 38, "Text",ExpressionUUID->"9402daa7-aa16-4a9f-be6b-64614cafcbef"],
Cell[CellGroupData[{
Cell[796, 27, 625, 14, 85, "Subsection",ExpressionUUID->"41532335-8cde-4da6-b49b-afda30adeca7"],
Cell[1424, 43, 1442, 37, 142, "Text",ExpressionUUID->"79607323-98b2-4f1b-bdd2-14d0701e653e"],
Cell[CellGroupData[{
Cell[2891, 84, 587, 15, 39, "Input",ExpressionUUID->"6a6b8bbe-eb57-4dba-b8df-7b19b3dbb945"],
Cell[3481, 101, 261, 6, 39, "Output",ExpressionUUID->"9e1c6668-9d26-4793-bcc7-771c7fa7fbe6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3779, 112, 482, 13, 41, "Input",ExpressionUUID->"d3f1aaf6-1155-402b-aa36-a1f521d1f714"],
Cell[4264, 127, 259, 5, 39, "Output",ExpressionUUID->"a8cab4da-72c9-4fd1-99db-a2b82a1a55cc"]
}, Open  ]],
Cell[4538, 135, 999, 26, 139, "Text",ExpressionUUID->"8afde112-06bd-4472-979f-c06711c98bc8"],
Cell[CellGroupData[{
Cell[5562, 165, 362, 10, 35, "Input",ExpressionUUID->"353759ec-05e3-47d4-9511-4ad3b1cb9e6b"],
Cell[5927, 177, 212, 5, 56, "Output",ExpressionUUID->"6142e7bd-66bd-4dc5-9a1d-d4c1ee936148"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6188, 188, 643, 19, 103, "Subsection",ExpressionUUID->"fb9cc36b-29a8-4a7d-93d9-d297ab4df3d6"],
Cell[6834, 209, 657, 18, 56, "Text",ExpressionUUID->"096511f0-2223-420d-a525-3073317779ab"],
Cell[CellGroupData[{
Cell[7516, 231, 715, 23, 89, "Input",ExpressionUUID->"69bdde7c-3d74-438a-9380-a051977c0649"],
Cell[8234, 256, 214, 5, 56, "Output",ExpressionUUID->"f7aa7c55-8cad-45a0-bce2-39c6cbd76ab8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8497, 267, 863, 18, 115, "Subsection",ExpressionUUID->"6e7cffd8-e404-414e-98bc-f3424df1d1ef"],
Cell[9363, 287, 1291, 41, 112, "Text",ExpressionUUID->"52fbac1f-9286-4656-95eb-302cc348faf7"],
Cell[CellGroupData[{
Cell[10679, 332, 328, 8, 28, "Input",ExpressionUUID->"d07c6298-5691-45a3-b225-bfcbbcee3fc6"],
Cell[11010, 342, 249, 6, 32, "Output",ExpressionUUID->"8964c87f-3741-44f9-a2a6-36ac5593b43b"]
}, Open  ]],
Cell[11274, 351, 184, 3, 34, "Text",ExpressionUUID->"c1cbf4de-0260-440b-8ce2-bce6fe1e15db"],
Cell[CellGroupData[{
Cell[11483, 358, 595, 18, 47, "Input",ExpressionUUID->"76eb175d-df29-4e6e-ae69-174468b518cf"],
Cell[12081, 378, 225, 4, 32, "Output",ExpressionUUID->"715d5de0-268a-43e5-9054-7b83ebdd44d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12343, 387, 591, 18, 47, "Input",ExpressionUUID->"2b6256ca-8314-434c-8d82-58eb85ee912e"],
Cell[12937, 407, 229, 4, 32, "Output",ExpressionUUID->"aa489598-aada-412d-b170-32ca42ba17f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13203, 416, 593, 18, 47, "Input",ExpressionUUID->"f97847f7-bb83-4628-a820-2d6954e108e5"],
Cell[13799, 436, 308, 8, 32, "Output",ExpressionUUID->"260a8f9a-a069-44b9-b918-813b8f79f9b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14144, 449, 543, 17, 47, "Input",ExpressionUUID->"3301651d-8a2f-46fe-909c-cf5391804673"],
Cell[14690, 468, 435, 13, 49, "Output",ExpressionUUID->"d2a63c46-f0c1-46a2-b075-26c17f782f4b"]
}, Open  ]],
Cell[15140, 484, 201, 3, 34, "Text",ExpressionUUID->"06a8790b-e879-4749-88e0-0c7a999965e7"],
Cell[CellGroupData[{
Cell[15366, 491, 242, 5, 28, "Input",ExpressionUUID->"d0b16433-5d62-49ca-b974-c126ee736869"],
Cell[15611, 498, 527, 16, 49, "Output",ExpressionUUID->"818be28e-a56e-4816-886b-f0f4981d6bff"]
}, Open  ]],
Cell[16153, 517, 193, 3, 34, "Text",ExpressionUUID->"d1654faf-14ec-4462-bd8e-6a036cb89d8c"],
Cell[CellGroupData[{
Cell[16371, 524, 664, 20, 47, "Input",ExpressionUUID->"daf678ce-1758-430c-b73a-e4f99ef75cf4"],
Cell[17038, 546, 557, 17, 49, "Output",ExpressionUUID->"8a130a76-9166-451d-836a-285c2f339974"]
}, Open  ]],
Cell[17610, 566, 180, 3, 34, "Text",ExpressionUUID->"b0fb1b79-0a62-4141-9c91-91bdb1420d9c"],
Cell[CellGroupData[{
Cell[17815, 573, 502, 13, 28, "Input",ExpressionUUID->"631f1666-76fa-4070-9395-4b4b46882fd0"],
Cell[18320, 588, 602, 18, 49, "Output",ExpressionUUID->"b18e4b76-9f2e-4d0f-a82e-3ebad0031597"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18959, 611, 248, 5, 28, "Input",ExpressionUUID->"041e939b-c798-4f92-88bc-6105fc6a2251"],
Cell[19210, 618, 180, 3, 32, "Output",ExpressionUUID->"e26ad121-5d7e-4dbf-b530-48dd52ca5c81"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19439, 627, 998, 25, 134, "Subsection",ExpressionUUID->"0d6c0950-99c2-4c45-8ace-741bfb8f5eac"],
Cell[20440, 654, 191, 3, 34, "Text",ExpressionUUID->"ddfba81c-90a2-40be-b9c5-4e1d880b00ff"],
Cell[CellGroupData[{
Cell[20656, 661, 523, 14, 50, "Input",ExpressionUUID->"c2bf2658-ea95-4920-bc09-f6e1a7042842"],
Cell[21182, 677, 410, 12, 56, "Output",ExpressionUUID->"9a893c41-24bf-4411-b7f0-89743f33f141"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21629, 694, 201, 4, 28, "Input",ExpressionUUID->"2c3aac9a-2e7e-4f09-a2f2-07f9388cd32f"],
Cell[21833, 700, 177, 3, 32, "Output",ExpressionUUID->"415fa6da-4537-4328-b7be-9cc093311318"]
}, Open  ]],
Cell[22025, 706, 468, 12, 56, "Text",ExpressionUUID->"34f61c02-d737-49b3-8643-ce553e962007"],
Cell[CellGroupData[{
Cell[22518, 722, 665, 20, 47, "Input",ExpressionUUID->"341000a8-c08e-4648-90e2-2b83d959bf05"],
Cell[23186, 744, 377, 11, 52, "Output",ExpressionUUID->"77c79b5c-f007-48ab-a074-224f3f539d06"]
}, Open  ]],
Cell[23578, 758, 178, 3, 34, "Text",ExpressionUUID->"094ee078-8e3f-4754-beb6-14fb4ffac3cc"],
Cell[CellGroupData[{
Cell[23781, 765, 337, 9, 28, "Input",ExpressionUUID->"4bca372d-a7ba-40a5-ada9-cd785f25d85c"],
Cell[24121, 776, 381, 11, 52, "Output",ExpressionUUID->"a92d5182-52e2-4915-a6bd-f04e0f8d17b8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24551, 793, 692, 17, 119, "Subsection",ExpressionUUID->"61922bc0-58fe-4c66-9941-b9b5677508cb"],
Cell[CellGroupData[{
Cell[25268, 814, 253, 6, 28, "Input",ExpressionUUID->"0674afb9-ee9d-4787-88dd-53fe776ff4ff"],
Cell[25524, 822, 225, 5, 32, "Output",ExpressionUUID->"1a949cad-94f8-4f28-b05e-f132fc8ed791"]
}, Open  ]],
Cell[25764, 830, 653, 19, 47, "Input",ExpressionUUID->"2f11b65a-60fd-483e-a5e7-b5a51637cc5c"],
Cell[CellGroupData[{
Cell[26442, 853, 360, 9, 28, "Input",ExpressionUUID->"7c1c2c2f-b6fa-4468-befa-c172469d65a7"],
Cell[26805, 864, 661, 22, 52, "Output",ExpressionUUID->"4405dde1-1fc4-44c4-af39-4818c2b16cc0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27515, 892, 677, 18, 103, "Subsection",ExpressionUUID->"5da94672-f115-4577-9de1-962742f2fc85"],
Cell[28195, 912, 197, 3, 34, "Text",ExpressionUUID->"1b8e475e-c362-464e-b3d0-fbacb972e5b7"],
Cell[CellGroupData[{
Cell[28417, 919, 343, 8, 46, "Input",ExpressionUUID->"5c9780bb-ef8f-4c8a-a78c-eb8e1e1a6702"],
Cell[28763, 929, 286, 8, 56, "Output",ExpressionUUID->"a9e1515b-6ff7-4406-b6b5-997ea34873d6"]
}, Open  ]],
Cell[29064, 940, 666, 19, 67, "Text",ExpressionUUID->"2098ba4e-4c68-40dc-a54f-7a159023c8da"],
Cell[CellGroupData[{
Cell[29755, 963, 378, 9, 46, "Input",ExpressionUUID->"b4afbbdc-bb9f-45f4-b232-760fdc3d5f9b"],
Cell[30136, 974, 318, 8, 56, "Output",ExpressionUUID->"80bef2f9-f0cc-43c9-912d-6bc90aef797d"]
}, Open  ]],
Cell[30469, 985, 272, 6, 34, "Text",ExpressionUUID->"7cd985d9-5c6e-4661-8d14-c04c29fbdef6"],
Cell[CellGroupData[{
Cell[30766, 995, 233, 5, 28, "Input",ExpressionUUID->"774f2117-3ec3-4905-8cf4-86e66b7763dd"],
Cell[31002, 1002, 177, 3, 32, "Output",ExpressionUUID->"bde5afe1-097f-4fb7-84fa-714595427309"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31216, 1010, 239, 5, 28, "Input",ExpressionUUID->"04244425-baa2-4d13-a4f8-43365b55f6c1"],
Cell[31458, 1017, 244, 6, 49, "Output",ExpressionUUID->"2092020b-7692-4f93-81ac-3246d2b6530f"]
}, Open  ]],
Cell[31717, 1026, 264, 6, 34, "Text",ExpressionUUID->"48795739-27b7-4f6a-a0aa-b5d51b591d69"],
Cell[CellGroupData[{
Cell[32006, 1036, 335, 8, 28, "Input",ExpressionUUID->"2b7da69a-98c2-4ba9-920f-e5cb95ce0dc2"],
Cell[32344, 1046, 281, 7, 40, "Output",ExpressionUUID->"04aa8d62-b7e7-4fec-a9ec-e5a597b7fe2d"]
}, Open  ]],
Cell[32640, 1056, 259, 6, 34, "Text",ExpressionUUID->"ebfde6b9-e194-4736-8421-b615d993bbf2"],
Cell[CellGroupData[{
Cell[32924, 1066, 231, 5, 28, "Input",ExpressionUUID->"a141992e-e3b4-43a7-8673-557f9d8c6051"],
Cell[33158, 1073, 167, 3, 32, "Output",ExpressionUUID->"945dfbe1-d7f6-4f76-becb-09d28e00f207"]
}, Open  ]],
Cell[33340, 1079, 243, 6, 34, "Text",ExpressionUUID->"cacce76a-fe8a-4b70-b814-6bf8dbbc4008"],
Cell[CellGroupData[{
Cell[33608, 1089, 255, 6, 28, "Input",ExpressionUUID->"821afeac-13ce-4006-b031-304e6d73939e"],
Cell[33866, 1097, 165, 3, 32, "Output",ExpressionUUID->"cb2a2703-04a0-4fb8-9572-80d8d3fd6dd5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34080, 1106, 830, 20, 93, "Subsection",ExpressionUUID->"14ccc25f-a00e-4b81-bb89-4ad4c590fdef"],
Cell[34913, 1128, 473, 10, 56, "Text",ExpressionUUID->"15fa0f84-8277-46e7-8dc7-932c40bf6f3f"],
Cell[CellGroupData[{
Cell[35411, 1142, 454, 12, 28, "Input",ExpressionUUID->"ac7259ed-26dc-4929-846f-3b00ec8c6db8"],
Cell[35868, 1156, 176, 3, 32, "Output",ExpressionUUID->"3caf6b80-f8a6-4eb8-8fe6-4dca0499110e"]
}, Open  ]],
Cell[36059, 1162, 198, 3, 34, "Text",ExpressionUUID->"88465a8a-86ec-405f-a714-7449c17cd648"],
Cell[CellGroupData[{
Cell[36282, 1169, 237, 5, 28, "Input",ExpressionUUID->"9d818988-f59c-465a-85a3-dd1a9b854bf6"],
Cell[36522, 1176, 200, 4, 32, "Output",ExpressionUUID->"61e206d4-7b21-4ff7-923b-7298f6cdfbc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36759, 1185, 246, 5, 28, "Input",ExpressionUUID->"24b23c0f-aaa5-4a33-83c3-40a9e4982ab4"],
Cell[37008, 1192, 206, 4, 32, "Output",ExpressionUUID->"f3e104ad-0d39-453d-a61d-a9ee2830979a"]
}, Open  ]],
Cell[37229, 1199, 527, 13, 56, "Text",ExpressionUUID->"e15514aa-24cc-4bd4-9a82-80e9c1a56b81"],
Cell[CellGroupData[{
Cell[37781, 1216, 417, 8, 28, "Input",ExpressionUUID->"49c9ed6e-a580-4e32-9344-f7b171d1b8e1"],
Cell[38201, 1226, 390, 7, 32, "Output",ExpressionUUID->"bef18557-4f4a-403e-ac58-c8350693642d"]
}, Open  ]],
Cell[38606, 1236, 626, 16, 68, "Text",ExpressionUUID->"fd849ea7-6ef0-49ca-982a-eceedbd10388"],
Cell[CellGroupData[{
Cell[39257, 1256, 870, 18, 28, "Input",ExpressionUUID->"6ab7ecd5-7db1-402c-b79c-852e88976821"],
Cell[40130, 1276, 704, 13, 40, "Output",ExpressionUUID->"2a75f560-45de-4b3f-8bb4-069513840a86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40871, 1294, 441, 11, 28, "Input",ExpressionUUID->"7c44e1d5-e81f-46c0-80ca-e9e3e88b1501"],
Cell[41315, 1307, 418, 13, 73, "Output",ExpressionUUID->"6e1c65b2-f3b0-4939-8dce-f29743250c53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41770, 1325, 355, 9, 32, "Input",ExpressionUUID->"3071b86e-668e-4d3e-9aed-ef869dfd9358"],
Cell[42128, 1336, 1671, 58, 73, "Output",ExpressionUUID->"edcfb808-594b-4c23-8d20-97ea06f47520"]
}, Open  ]],
Cell[43814, 1397, 194, 3, 34, "Text",ExpressionUUID->"66d0d329-c4a1-446a-bac8-5aecf092f3b1"],
Cell[CellGroupData[{
Cell[44033, 1404, 764, 16, 28, "Input",ExpressionUUID->"195d3b28-d636-4ef8-9354-eddd76a2648c"],
Cell[44800, 1422, 1590, 53, 73, "Output",ExpressionUUID->"79192994-d903-4fb4-9170-2d88cdb94db7"]
}, Open  ]],
Cell[46405, 1478, 243, 6, 34, "Text",ExpressionUUID->"69c938fa-42b7-43c2-b3fb-65cae3e70466"],
Cell[CellGroupData[{
Cell[46673, 1488, 461, 11, 28, "Input",ExpressionUUID->"d624b9a1-d480-4a9a-aa7c-d8f6b0382211"],
Cell[47137, 1501, 1461, 57, 73, "Output",ExpressionUUID->"4279bcb0-7fc4-4c5b-98bb-b027c6785c89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48635, 1563, 282, 6, 28, "Input",ExpressionUUID->"ec7559df-4b12-4d32-ad2e-8cc3bb395aca"],
Cell[48920, 1571, 1474, 40, 377, "Output",ExpressionUUID->"1bca6f42-12bd-4a0c-a4dc-4bc77fd14a8b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50443, 1617, 489, 10, 89, "Subsection",ExpressionUUID->"c84a0ae5-c46d-46db-b6fe-1fbcde21e060"],
Cell[CellGroupData[{
Cell[50957, 1631, 306, 7, 28, "Input",ExpressionUUID->"a2653517-d3d5-40ed-89d9-892d59908db0"],
Cell[51266, 1640, 229, 5, 32, "Output",ExpressionUUID->"757c0d2a-9cc1-4524-bc15-d86c23659f1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51532, 1650, 231, 5, 28, "Input",ExpressionUUID->"df284608-60b1-4ee4-b2e2-556aa035e598"],
Cell[51766, 1657, 190, 4, 35, "Output",ExpressionUUID->"250a50ac-ba6d-4e36-bad9-9f5c7643b0a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51993, 1666, 238, 5, 28, "Input",ExpressionUUID->"ecafb919-7cad-45f9-a810-9802390eb230"],
Cell[52234, 1673, 223, 5, 49, "Output",ExpressionUUID->"3030e706-47b4-4e29-9bc3-a409c3d56ec8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52494, 1683, 337, 8, 28, "Input",ExpressionUUID->"8f314c11-b01d-4c5b-b71e-62fb8c5abe1e"],
Cell[52834, 1693, 319, 8, 40, "Output",ExpressionUUID->"fff13b76-2ec9-43ba-aad4-22ed5f8bd1f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53190, 1706, 356, 8, 28, "Input",ExpressionUUID->"831e7b5c-071e-45ed-89e7-d3df82d7ef98"],
Cell[53549, 1716, 298, 8, 50, "Output",ExpressionUUID->"c364f598-af85-4bee-9dc6-be6640e995e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53884, 1729, 312, 8, 28, "Input",ExpressionUUID->"40c9c66f-d0f9-4596-a944-fef7d5036b62"],
Cell[54199, 1739, 321, 8, 50, "Output",ExpressionUUID->"2b50c073-4a03-41a9-b45e-2685cbdc558e"]
}, Open  ]],
Cell[54535, 1750, 329, 10, 10, "Text",ExpressionUUID->"651730ea-3ccb-4ce0-a2d1-e9de25b76672"],
Cell[54867, 1762, 258, 5, 122, "Text",ExpressionUUID->"1d15b5c7-a0e0-4473-bb09-75055fa79161"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55162, 1772, 942, 17, 115, "Subsection",ExpressionUUID->"00f8721f-15d7-42d7-a776-9e07c808cba5",
 CellTags->"Wk2.P1"],
Cell[CellGroupData[{
Cell[56129, 1793, 407, 11, 28, "Input",ExpressionUUID->"790ea452-1dc4-4edd-b14e-f5ed0f0caf3a"],
Cell[56539, 1806, 189, 3, 32, "Output",ExpressionUUID->"fe1a6476-d293-42b7-8640-e796b5a07adb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56765, 1814, 331, 7, 48, "Input",ExpressionUUID->"90b8f54a-a1e5-4e94-a676-87ac26802d73"],
Cell[57099, 1823, 202, 4, 32, "Output",ExpressionUUID->"b21b410d-5223-42da-a165-1ebdcbbfabbb"],
Cell[57304, 1829, 228, 5, 47, "Output",ExpressionUUID->"b1fd5e58-9b92-44d4-8cf8-ec6e93bb87b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57569, 1839, 324, 7, 28, "Input",ExpressionUUID->"da0606c6-0842-45a1-9d67-55cb04e16ee1"],
Cell[57896, 1848, 286, 7, 47, "Output",ExpressionUUID->"05627c5b-f54c-42db-8f60-822af530ef4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58219, 1860, 547, 14, 28, "Input",ExpressionUUID->"1e054d5b-499b-4c0c-bf17-c2dd09044b52"],
Cell[58769, 1876, 528, 12, 40, "Output",ExpressionUUID->"af45f95c-52c7-4ea0-b878-a04efdb31d0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59334, 1893, 520, 12, 28, "Input",ExpressionUUID->"c982576a-0660-4151-8130-a6a60fa11db3"],
Cell[59857, 1907, 564, 15, 56, "Output",ExpressionUUID->"9ed7a46f-8aed-40b5-8bba-ce58dacb9708"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60458, 1927, 361, 9, 28, "Input",ExpressionUUID->"9f9c19dc-89c6-44a3-9738-b2091faf1ed9"],
Cell[60822, 1938, 530, 19, 55, "Output",ExpressionUUID->"a74cf91b-c81b-45b5-88f0-19ab051d38ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61389, 1962, 279, 6, 28, "Input",ExpressionUUID->"ffb27fec-d916-45e1-991c-f0c248e3ef87"],
Cell[61671, 1970, 1356, 39, 377, "Output",ExpressionUUID->"86985e09-0e41-4eda-812c-d2e9738e66cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63076, 2015, 702, 15, 95, "Subsection",ExpressionUUID->"526f47ce-033b-4d1e-96d4-4d3ab5a794ec",
 CellTags->"Wk2.P2"],
Cell[CellGroupData[{
Cell[63803, 2034, 404, 11, 28, "Input",ExpressionUUID->"0166034b-0f04-4cbb-86c7-e14b9093839a"],
Cell[64210, 2047, 165, 3, 32, "Output",ExpressionUUID->"4bd147ff-f0d1-43b5-a694-30dc9a2d9d37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64412, 2055, 335, 7, 48, "Input",ExpressionUUID->"24e96973-b75e-497f-a656-5095eec329cf"],
Cell[64750, 2064, 177, 3, 32, "Output",ExpressionUUID->"f7a65aee-4f01-48b6-b2c8-770e54d2eee5"],
Cell[64930, 2069, 201, 4, 47, "Output",ExpressionUUID->"390d8154-114e-44ec-8e47-32d510f31fd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65168, 2078, 399, 10, 28, "Input",ExpressionUUID->"22bf702e-4ad4-497a-a40d-d26258afe0d2"],
Cell[65570, 2090, 260, 6, 32, "Output",ExpressionUUID->"f396bd11-29db-4dd0-9d3a-acdb1f8ed666"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65867, 2101, 264, 5, 28, "Input",ExpressionUUID->"a862a750-d8a1-4988-ac41-b537be94d846"],
Cell[66134, 2108, 264, 6, 32, "Output",ExpressionUUID->"66d03499-b8f3-476e-aef9-bbb266bca245"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66447, 2120, 808, 23, 106, "Subsection",ExpressionUUID->"f8e7c35b-3c3b-4b56-8d95-5cdf9ebd5143",
 CellTags->{"Problem", "P2.17.26"}],
Cell[CellGroupData[{
Cell[67280, 2147, 569, 15, 50, "Input",ExpressionUUID->"3d8b4437-3927-4bd9-ada8-99f20b7ef7bb"],
Cell[67852, 2164, 155, 3, 32, "Output",ExpressionUUID->"079bc8a7-e8f7-4fb1-9aee-79cce258efae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68056, 2173, 1402, 25, 141, "Subsection",ExpressionUUID->"69cb9321-2cb0-4d23-8182-d0c6279841eb",
 CellTags->{"P2.16.8", "Problem"}],
Cell[69461, 2200, 13464, 235, 177, "Text",ExpressionUUID->"a0d9d42e-1740-4a6a-b5d2-ed3eb3bd26c1",
 CellTags->{"P2.16.8", "Problem"}],
Cell[82928, 2437, 229, 4, 28, "Input",ExpressionUUID->"dbb1b7de-3051-4420-b94b-5fe70276c6f6"],
Cell[83160, 2443, 359, 8, 56, "Text",ExpressionUUID->"15b437eb-402a-4520-95dc-b98c1a4af7b5"],
Cell[83522, 2453, 665, 18, 86, "Input",ExpressionUUID->"713c44c7-6f69-4fc7-a1a6-01890e3e9770"],
Cell[84190, 2473, 246, 6, 34, "Text",ExpressionUUID->"8d31a66f-7d32-48bc-9f59-579c426fc11c"],
Cell[CellGroupData[{
Cell[84461, 2483, 259, 6, 28, "Input",ExpressionUUID->"0983cf6b-885c-416e-b419-9b2748bbd6b8"],
Cell[84723, 2491, 435, 10, 32, "Output",ExpressionUUID->"63672184-4aa9-4918-aef6-874912c559db"]
}, Open  ]],
Cell[85173, 2504, 956, 18, 144, "Text",ExpressionUUID->"0529bcb4-6ac6-48c6-98e7-3bbe99aa37d4"],
Cell[CellGroupData[{
Cell[86154, 2526, 394, 8, 28, "Input",ExpressionUUID->"84a13f7a-8049-409a-acf6-2c42546f039c"],
Cell[86551, 2536, 499, 12, 32, "Output",ExpressionUUID->"f8d9e037-805c-4516-9b33-7b39573130ad"]
}, Open  ]],
Cell[87065, 2551, 165, 3, 34, "Text",ExpressionUUID->"4a52de17-b39f-4eb1-b35b-6d941f7fa4a0"],
Cell[CellGroupData[{
Cell[87255, 2558, 397, 9, 28, "Input",ExpressionUUID->"2f75f5df-afa1-4155-bbfd-1328a58ce7bf"],
Cell[87655, 2569, 439, 10, 32, "Output",ExpressionUUID->"d8300650-d83a-43e8-a134-1befb5a95785"]
}, Open  ]],
Cell[88109, 2582, 218, 5, 34, "Text",ExpressionUUID->"93d39a6e-4608-4d40-85c7-8ad46739804d"],
Cell[CellGroupData[{
Cell[88352, 2591, 310, 7, 28, "Input",ExpressionUUID->"4f7111b6-1fc4-4e64-a6bd-b273e7cd25e0"],
Cell[88665, 2600, 449, 11, 53, "Output",ExpressionUUID->"6d344df5-8b1b-43d6-a7f4-e8aebc962d08"]
}, Open  ]],
Cell[89129, 2614, 167, 3, 34, "Text",ExpressionUUID->"efeca5ba-a49e-4be9-b82f-6b24441cfc28"],
Cell[CellGroupData[{
Cell[89321, 2621, 321, 8, 28, "Input",ExpressionUUID->"75f053b7-7bd0-4291-8501-bb5b962f34dd"],
Cell[89645, 2631, 447, 10, 53, "Output",ExpressionUUID->"ac0aef2a-70cb-4610-ab86-2aa359846924"]
}, Open  ]],
Cell[90107, 2644, 347, 8, 56, "Text",ExpressionUUID->"a59c506f-b893-4c3e-9645-9e2aec426cb4"],
Cell[CellGroupData[{
Cell[90479, 2656, 613, 16, 45, "Input",ExpressionUUID->"0afdd18b-1f76-47f2-b388-e1f7058e4bc7"],
Cell[91095, 2674, 511, 12, 60, "Output",ExpressionUUID->"0e5d9cd4-96f9-4b09-b8b6-defd8a9bbb95"]
}, Open  ]],
Cell[91621, 2689, 226, 5, 34, "Text",ExpressionUUID->"23b26455-7326-4de9-a21c-5b0559255676"],
Cell[CellGroupData[{
Cell[91872, 2698, 370, 6, 28, "Input",ExpressionUUID->"dc6916e4-8754-4bfd-8949-93ee78bcb5e5"],
Cell[92245, 2706, 3226, 97, 93, "Output",ExpressionUUID->"9cc80e9e-c7e4-4b32-a7d1-40339a28e566"]
}, Open  ]],
Cell[95486, 2806, 691, 17, 78, "Text",ExpressionUUID->"2fdc6e18-8ed2-4413-b3c6-efca0864664b"],
Cell[CellGroupData[{
Cell[96202, 2827, 280, 6, 28, "Input",ExpressionUUID->"f2d7d211-9b8c-411d-8d9a-4fe546fbf9b7"],
Cell[96485, 2835, 1871, 60, 74, "Output",ExpressionUUID->"d0669d58-9b16-4e7a-aece-dd41ce10102f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98393, 2900, 287, 8, 28, "Input",ExpressionUUID->"f17dc1c1-205b-4e21-b276-c7a8c7cc6967"],
Cell[98683, 2910, 724, 23, 66, "Output",ExpressionUUID->"ddb587e9-dabc-497a-b03c-c00d9c0cd369"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99456, 2939, 807, 22, 91, "Subsection",ExpressionUUID->"6dc2aa2f-3810-41ed-8db8-df78eba5f272"],
Cell[CellGroupData[{
Cell[100288, 2965, 325, 8, 28, "Input",ExpressionUUID->"2acd59c8-631e-42f7-9cfd-adac497ccbcc"],
Cell[100616, 2975, 253, 6, 32, "Output",ExpressionUUID->"2060a9e5-a375-4e4e-b78e-aa3a0e864348"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100906, 2986, 329, 8, 28, "Input",ExpressionUUID->"7676ec14-dae2-4de6-9671-fdec748bcf18"],
Cell[101238, 2996, 251, 6, 32, "Output",ExpressionUUID->"61936808-74d3-4c0a-91d4-aef544505e54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101526, 3007, 258, 6, 28, "Input",ExpressionUUID->"0c21e226-a0fb-4d4a-b8a0-ef0f5f53bc6d"],
Cell[101787, 3015, 274, 7, 32, "Output",ExpressionUUID->"c4378d20-030a-469b-a3ca-774788621060"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102098, 3027, 850, 27, 67, "Input",ExpressionUUID->"b9369737-184c-48ba-8bec-fe6b3f23e2d0"],
Cell[102951, 3056, 331, 9, 49, "Output",ExpressionUUID->"dbc1fdf0-8d49-4b8f-ae4f-f4fcd61af6ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103319, 3070, 395, 10, 28, "Input",ExpressionUUID->"718757b5-9613-42c6-8510-7510bf6ddbfa"],
Cell[103717, 3082, 276, 7, 49, "Output",ExpressionUUID->"b3c8baa0-4372-43a4-a8f7-829b58aa2c1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104030, 3094, 248, 6, 28, "Input",ExpressionUUID->"516f463a-5657-43ab-a73c-389b37faf16a"],
Cell[104281, 3102, 373, 11, 49, "Output",ExpressionUUID->"36b23218-ed57-4d8e-84dd-751e2c55d551"]
}, Open  ]],
Cell[104669, 3116, 1746, 49, 48, "Input",ExpressionUUID->"e28b56ce-6c21-45be-9bd4-43e14d99486a"],
Cell[CellGroupData[{
Cell[106440, 3169, 294, 6, 28, "Input",ExpressionUUID->"85b47c5c-991d-4b44-b5e6-e0676b4704a2"],
Cell[106737, 3177, 115594, 1877, 427, "Output",ExpressionUUID->"86902105-2078-4495-994d-55c4d83fa0a2"]
}, Open  ]],
Cell[222346, 5057, 329, 10, 10, "Text",ExpressionUUID->"cea09c75-4455-4f85-9145-f6f876696316"],
Cell[222678, 5069, 217, 7, 100, "Text",ExpressionUUID->"b099f658-dc03-49c5-ae15-f6f80328ffc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222932, 5081, 302, 8, 89, "Subsection",ExpressionUUID->"16d31499-e078-41e3-8898-9d3513ca1b24"],
Cell[223237, 5091, 222, 5, 34, "Text",ExpressionUUID->"e29c7ad4-69b7-44df-b08e-56499845cd80"],
Cell[CellGroupData[{
Cell[223484, 5100, 297, 8, 28, "Input",ExpressionUUID->"d72999dd-87bc-42aa-9b25-826d83e8a603"],
Cell[223784, 5110, 248, 7, 32, "Output",ExpressionUUID->"9d1c92bb-5c64-491f-a0cf-1e719a040cfc"]
}, Open  ]],
Cell[224047, 5120, 193, 3, 34, "Text",ExpressionUUID->"9099e552-a829-4631-842d-59ab8c7a8036"],
Cell[CellGroupData[{
Cell[224265, 5127, 277, 7, 28, "Input",ExpressionUUID->"2aa26a10-80cd-4da0-9c85-6b6c8a9e67cc"],
Cell[224545, 5136, 229, 6, 32, "Output",ExpressionUUID->"95256618-4852-4771-bf22-fba04e0b6896"]
}, Open  ]],
Cell[224789, 5145, 396, 11, 34, "Text",ExpressionUUID->"29df6467-a8e2-402a-8c28-ede665a3ef52"],
Cell[225188, 5158, 312, 9, 28, "Input",ExpressionUUID->"d50dc8ee-d3dd-4881-93eb-9402347e4d2b"],
Cell[CellGroupData[{
Cell[225525, 5171, 504, 14, 28, "Input",ExpressionUUID->"cfb178c5-7456-479f-8608-b7869b05d569"],
Cell[226032, 5187, 277, 7, 32, "Output",ExpressionUUID->"63093a25-7b4e-4ea9-a9c8-d22bdef8fe0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226346, 5199, 441, 12, 28, "Input",ExpressionUUID->"e2969eca-1a1e-4f56-80a0-f90d6e2b5794"],
Cell[226790, 5213, 251, 6, 32, "Output",ExpressionUUID->"2559d02c-c0e9-41b2-a03f-5bb346d00db8"]
}, Open  ]],
Cell[227056, 5222, 194, 3, 34, "Text",ExpressionUUID->"dcef7abf-cd11-4c92-80a5-ae5d6c94f757"],
Cell[CellGroupData[{
Cell[227275, 5229, 240, 5, 28, "Input",ExpressionUUID->"74b531b2-67f3-4588-96bf-c0133e3cbc0f"],
Cell[227518, 5236, 229, 6, 32, "Output",ExpressionUUID->"3044833a-a211-45c8-b071-42ea662d5a5b"]
}, Open  ]],
Cell[227762, 5245, 263, 6, 34, "Text",ExpressionUUID->"154481c7-0865-4496-854c-f9ecfda282ce"],
Cell[CellGroupData[{
Cell[228050, 5255, 313, 8, 46, "Input",ExpressionUUID->"88c82746-08e4-4fa5-962e-4206a46c154b"],
Cell[228366, 5265, 210, 6, 55, "Output",ExpressionUUID->"5855d91f-438e-414d-84a1-7590ca0e234b"]
}, Open  ]],
Cell[228591, 5274, 941, 27, 82, "Text",ExpressionUUID->"b0813f12-5824-4c84-94b8-fbee8b341fe6"],
Cell[CellGroupData[{
Cell[229557, 5305, 583, 17, 49, "Input",ExpressionUUID->"c78d4b47-8079-4df8-badb-16efc086c0bd"],
Cell[230143, 5324, 236, 6, 55, "Output",ExpressionUUID->"86f1ea1b-5e90-429a-9d8c-2ba196d6f1ce"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230428, 5336, 1200, 33, 115, "Subsection",ExpressionUUID->"936a96ed-3a31-4df4-b79e-3355e8b3d72f"],
Cell[231631, 5371, 225, 4, 28, "Input",ExpressionUUID->"e8b2bcc9-eeab-4c71-bee5-826fbf7bd5f4"],
Cell[CellGroupData[{
Cell[231881, 5379, 913, 25, 28, "Input",ExpressionUUID->"9946d056-167e-40df-9903-ffaaf0dffff1"],
Cell[232797, 5406, 208734, 3453, 411, "Output",ExpressionUUID->"8ef0dab4-2528-4d96-afbb-fd8c911431ce"]
}, Open  ]],
Cell[441546, 8862, 2131, 61, 180, "Text",ExpressionUUID->"a48261ff-210b-4876-9c00-119541935c9c"],
Cell[CellGroupData[{
Cell[443702, 8927, 423, 11, 61, "Input",ExpressionUUID->"c17cc58f-5941-4489-a859-85310ab752d0"],
Cell[444128, 8940, 566, 14, 32, "Output",ExpressionUUID->"32653d69-9530-4ff1-b42b-db3a1dc3ed1e"]
}, Open  ]],
Cell[444709, 8957, 405, 8, 56, "Text",ExpressionUUID->"1561a101-4106-49b3-b2f2-c8cabd991c68"],
Cell[CellGroupData[{
Cell[445139, 8969, 555, 10, 28, "Input",ExpressionUUID->"2f947a9c-cde4-4ec5-a3de-95737e563d29"],
Cell[445697, 8981, 679, 16, 32, "Output",ExpressionUUID->"fac2c28f-0362-4a44-9c26-072c58a09622"]
}, Open  ]],
Cell[446391, 9000, 201, 3, 34, "Text",ExpressionUUID->"f6188a73-369c-4917-b86f-fb938fe762af"],
Cell[CellGroupData[{
Cell[446617, 9007, 500, 10, 48, "Input",ExpressionUUID->"53fa83f7-874d-478e-98fc-fbde69886711"],
Cell[447120, 9019, 1281, 36, 103, "Output",ExpressionUUID->"51dc0fc3-f091-414b-bc37-5db172eebd5d"]
}, Open  ]],
Cell[448416, 9058, 265, 6, 34, "Text",ExpressionUUID->"922d9903-9889-4253-9117-bdec3240024f"],
Cell[CellGroupData[{
Cell[448706, 9068, 423, 9, 48, "Input",ExpressionUUID->"ee744c4c-4922-4928-8a30-83effc1372b0"],
Cell[449132, 9079, 1148, 34, 103, "Output",ExpressionUUID->"d4cee6a9-761d-4aa6-a8ad-f7e8b861ecfa"]
}, Open  ]],
Cell[450295, 9116, 184, 3, 34, "Text",ExpressionUUID->"ff7e73bd-252f-4c4d-8946-979b3c573342"],
Cell[CellGroupData[{
Cell[450504, 9123, 667, 13, 48, "Input",ExpressionUUID->"3dc229ee-237b-4e8c-b380-b4d3f38e22a8"],
Cell[451174, 9138, 1062, 27, 79, "Output",ExpressionUUID->"3a0c6af2-a1ff-4a07-94b2-35631b39be30"]
}, Open  ]],
Cell[452251, 9168, 418, 11, 34, "Text",ExpressionUUID->"9224f6b4-918b-48f6-925b-b8d1d6074f6f"],
Cell[CellGroupData[{
Cell[452694, 9183, 422, 11, 28, "Input",ExpressionUUID->"1f93ade4-b870-4ccd-82c6-28d77bbf5661"],
Cell[453119, 9196, 725, 18, 32, "Output",ExpressionUUID->"31c33301-4711-47c7-b399-2cf1c3b252f3"]
}, Open  ]],
Cell[453859, 9217, 166, 3, 34, "Text",ExpressionUUID->"ae4b9547-d806-49ac-9346-bb56f05c70c1"],
Cell[CellGroupData[{
Cell[454050, 9224, 244, 5, 28, "Input",ExpressionUUID->"ef131056-59e3-4837-97cb-52000e851cdd"],
Cell[454297, 9231, 406, 12, 32, "Output",ExpressionUUID->"91511622-9f6a-4da3-a9a0-0e91949d2df6"]
}, Open  ]],
Cell[454718, 9246, 1561, 44, 67, "Input",ExpressionUUID->"f4a10070-3335-4263-8d76-daaf95ba3994"],
Cell[CellGroupData[{
Cell[456304, 9294, 246, 5, 28, "Input",ExpressionUUID->"fca22b89-373e-4228-b2c8-c4b60b719718"],
Cell[456553, 9301, 209030, 3458, 386, "Output",ExpressionUUID->"a36cc752-b510-4a8c-bc3e-475b09f09d41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[665632, 12765, 821, 21, 89, "Subsection",ExpressionUUID->"30744dbf-03fb-4930-b8b9-4dc472fd18ac"],
Cell[666456, 12788, 500, 11, 100, "Text",ExpressionUUID->"7c09d798-1516-4fe6-962a-be061f20b11e"],
Cell[CellGroupData[{
Cell[666981, 12803, 544, 15, 61, "Input",ExpressionUUID->"a72b1ab9-8a75-41f9-9f6c-ed76b3d6f038"],
Cell[667528, 12820, 569, 16, 32, "Output",ExpressionUUID->"0867871e-e659-4ecd-9d0a-fbe37683916a"]
}, Open  ]],
Cell[668112, 12839, 477, 12, 34, "Text",ExpressionUUID->"1e5f1f4d-28f0-4b05-9e40-f3e5873ffd3a"],
Cell[CellGroupData[{
Cell[668614, 12855, 393, 9, 48, "Input",ExpressionUUID->"eeb8f320-f144-42f6-99c3-05364de46e06"],
Cell[669010, 12866, 802, 23, 79, "Output",ExpressionUUID->"eddd3a91-82cd-442b-939d-0caad2bb2534"]
}, Open  ]],
Cell[669827, 12892, 508, 12, 100, "Text",ExpressionUUID->"58db5558-4bf5-4106-8253-9723dca26d16"],
Cell[CellGroupData[{
Cell[670360, 12908, 330, 10, 61, "Input",ExpressionUUID->"023684bc-065e-4105-8479-1c816d16679f"],
Cell[670693, 12920, 408, 12, 32, "Output",ExpressionUUID->"62740cb6-4d9a-4ddd-b496-42aafa4d3202"]
}, Open  ]],
Cell[671116, 12935, 277, 6, 34, "Text",ExpressionUUID->"5be9fac0-2af3-4b0f-8614-d5ff2d96752b"],
Cell[CellGroupData[{
Cell[671418, 12945, 334, 7, 48, "Input",ExpressionUUID->"4c7441b3-0288-4342-a034-def209f8d984"],
Cell[671755, 12954, 824, 24, 79, "Output",ExpressionUUID->"7c1f1a33-2d39-4be6-9ef7-66f50e083c35"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[672628, 12984, 739, 18, 89, "Subsection",ExpressionUUID->"eefe29c8-925f-4255-8141-56309d82f162"],
Cell[673370, 13004, 740, 18, 102, "Text",ExpressionUUID->"6c03ea70-9c66-49fd-b81e-97a60436602a"],
Cell[CellGroupData[{
Cell[674135, 13026, 360, 9, 48, "Input",ExpressionUUID->"f7887389-a972-46b7-bfdd-0089f569f2f3"],
Cell[674498, 13037, 153, 3, 32, "Output",ExpressionUUID->"db641ef3-2657-4ccf-9d85-8662cdb80a0f"]
}, Open  ]],
Cell[674666, 13043, 264, 6, 34, "Text",ExpressionUUID->"e0be7c46-8193-4cc8-b543-c0e4e876e340"],
Cell[674933, 13051, 171, 3, 34, "Text",ExpressionUUID->"536d35a1-2cd5-49ee-973c-7b53c2e45081"],
Cell[CellGroupData[{
Cell[675129, 13058, 332, 8, 48, "Input",ExpressionUUID->"44d142f2-849c-4b29-b324-301b1b84e88d"],
Cell[675464, 13068, 153, 3, 32, "Output",ExpressionUUID->"b489a4c3-3653-4177-a9c8-003b3536c210"]
}, Open  ]],
Cell[675632, 13074, 217, 5, 34, "Text",ExpressionUUID->"59509f27-d355-432b-a397-e246a3625d37"],
Cell[675852, 13081, 310, 10, 34, "Text",ExpressionUUID->"d25fdb7d-1aac-40c4-bde3-6780a5cb557a"],
Cell[CellGroupData[{
Cell[676187, 13095, 358, 9, 48, "Input",ExpressionUUID->"07f938ee-c825-43fe-8ddf-c3df2d6426bd"],
Cell[676548, 13106, 201, 5, 32, "Output",ExpressionUUID->"9419a2f9-1179-4876-8ade-c7dc4a4d0eba"]
}, Open  ]],
Cell[676764, 13114, 214, 5, 34, "Text",ExpressionUUID->"88a7df44-1df7-4f57-97f6-69dd53d24d5b"],
Cell[676981, 13121, 310, 10, 34, "Text",ExpressionUUID->"817dfcdb-b59c-4c8d-8490-15cae6198b37"],
Cell[CellGroupData[{
Cell[677316, 13135, 359, 9, 48, "Input",ExpressionUUID->"8522f98a-c558-4e30-9503-4f92add15ef6"],
Cell[677678, 13146, 201, 5, 32, "Output",ExpressionUUID->"6fa6c12c-1b3a-4111-a838-fb616dfdff49"]
}, Open  ]],
Cell[677894, 13154, 259, 6, 56, "Text",ExpressionUUID->"6c797c03-d567-4f1e-8d24-455c8e9cd337"],
Cell[678156, 13162, 823, 24, 86, "Input",ExpressionUUID->"124fc33a-a156-4a98-ba52-9ae23cda3aa4"],
Cell[CellGroupData[{
Cell[679004, 13190, 374, 9, 48, "Input",ExpressionUUID->"03bf3c3e-a7e9-4183-939a-65b39584df9e"],
Cell[679381, 13201, 826, 23, 96, "Output",ExpressionUUID->"4379a802-dc23-45e6-85f9-b263abdca375"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[680256, 13230, 944, 22, 136, "Subsection",ExpressionUUID->"08597b54-de20-4f96-bdc5-3254f4165d5a"],
Cell[681203, 13254, 250, 4, 34, "Text",ExpressionUUID->"c86a7b5b-96eb-4ee8-9213-b8aba70dd1d9"],
Cell[CellGroupData[{
Cell[681478, 13262, 431, 12, 61, "Input",ExpressionUUID->"ad308915-83f6-4323-a499-2f1ef3cbd5b2"],
Cell[681912, 13276, 533, 15, 32, "Output",ExpressionUUID->"1ddd2ecb-7599-4e4f-93f0-9318791382d0"]
}, Open  ]],
Cell[682460, 13294, 294, 7, 34, "Text",ExpressionUUID->"971de677-7c57-40e1-a450-9a766a742148"],
Cell[CellGroupData[{
Cell[682779, 13305, 345, 8, 48, "Input",ExpressionUUID->"c9bb44bc-9486-4128-8ba9-27864dda491e"],
Cell[683127, 13315, 905, 25, 79, "Output",ExpressionUUID->"909e69cb-ae21-4c92-a5c0-f19a4cca2e60"]
}, Open  ]],
Cell[684047, 13343, 241, 4, 34, "Text",ExpressionUUID->"10f6194d-53fc-4ecc-b9a4-fa9b88ccda41"],
Cell[CellGroupData[{
Cell[684313, 13351, 216, 4, 28, "Input",ExpressionUUID->"a5bf7ce5-12bb-46de-a424-be4590d69984"],
Cell[684532, 13357, 157, 3, 32, "Output",ExpressionUUID->"ac770d54-9cd4-4eb4-a23d-3b707ca3f410"]
}, Open  ]],
Cell[684704, 13363, 245, 6, 34, "Text",ExpressionUUID->"a432fc64-f698-4cf9-87fd-ebd21e399d16"],
Cell[CellGroupData[{
Cell[684974, 13373, 288, 6, 28, "Input",ExpressionUUID->"e85c0cf0-b1c5-4ba4-a4bf-1cf88f80af47"],
Cell[685265, 13381, 157, 3, 32, "Output",ExpressionUUID->"a4d76995-5204-4819-95f3-363833f410b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685459, 13389, 553, 15, 48, "Input",ExpressionUUID->"160b5e9a-e09a-48bf-a6fa-06c003100298"],
Cell[686015, 13406, 1663, 38, 79, "Output",ExpressionUUID->"da708adb-6485-429d-868c-4072bfc6e319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687715, 13449, 463, 11, 48, "Input",ExpressionUUID->"33197104-9a77-45b6-84fb-a58e3eaff784"],
Cell[688181, 13462, 1634, 40, 79, "Output",ExpressionUUID->"83fd25dc-0aeb-4c2c-a272-16d1ead35791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689852, 13507, 413, 10, 48, "Input",ExpressionUUID->"247d6a97-9be6-42a0-a992-12bc1787a15a"],
Cell[690268, 13519, 910, 24, 79, "Output",ExpressionUUID->"ed43c032-219a-4b35-9eab-5bee23839df6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[691227, 13549, 174, 3, 53, "Subsection",ExpressionUUID->"d188c799-550c-4719-868a-ffeec3f957ff"],
Cell[691404, 13554, 171, 3, 34, "Text",ExpressionUUID->"982bd867-1296-4eea-9b72-be1de1ab79b7"],
Cell[CellGroupData[{
Cell[691600, 13561, 651, 20, 48, "Input",ExpressionUUID->"c2e16050-5dd3-4044-8703-b37123770070"],
Cell[692254, 13583, 891, 27, 79, "Output",ExpressionUUID->"55cf1c62-9e76-4a95-80d1-6218fdaeb803"]
}, Open  ]],
Cell[693160, 13613, 270, 6, 34, "Text",ExpressionUUID->"39bfcadf-9bb8-423c-a8de-08534b51f115"],
Cell[CellGroupData[{
Cell[693455, 13623, 364, 9, 48, "Input",ExpressionUUID->"0cf83ec8-3ef2-4ddb-ac8d-e0237bd50f64"],
Cell[693822, 13634, 827, 24, 79, "Output",ExpressionUUID->"4b3ad0e1-cf8d-47d5-a815-17d0378b3ea8"]
}, Open  ]],
Cell[694664, 13661, 200, 3, 34, "Text",ExpressionUUID->"7bd4e92a-4c5a-47cc-a6e3-13617440e682"],
Cell[CellGroupData[{
Cell[694889, 13668, 324, 7, 48, "Input",ExpressionUUID->"80d5c1e6-b1f9-4c03-a1c4-0364163ee93f"],
Cell[695216, 13677, 851, 25, 79, "Output",ExpressionUUID->"bf2cb2a7-81e0-4a0c-ada0-3c08ea12dbbb"]
}, Open  ]],
Cell[696082, 13705, 460, 13, 34, "Text",ExpressionUUID->"6973b072-6c37-4a87-9bb5-aa218057e6a9"],
Cell[CellGroupData[{
Cell[696567, 13722, 426, 9, 48, "Input",ExpressionUUID->"0410e271-df8c-4733-a64a-ed1166072bb8"],
Cell[696996, 13733, 833, 23, 79, "Output",ExpressionUUID->"741d7ff7-d99d-47e4-8915-2ba2a0a59107"]
}, Open  ]],
Cell[697844, 13759, 247, 6, 34, "Text",ExpressionUUID->"d08f2d32-6f0d-4130-9617-ac6a3db9735d"],
Cell[CellGroupData[{
Cell[698116, 13769, 218, 4, 28, "Input",ExpressionUUID->"b2688039-36d1-4b8b-9c0c-0ac67c24c32f"],
Cell[698337, 13775, 209, 5, 32, "Output",ExpressionUUID->"1ceade56-6dd5-4225-80a1-882b769b60ac"]
}, Open  ]],
Cell[698561, 13783, 452, 12, 34, "Text",ExpressionUUID->"9fcea073-c2f6-41d8-a363-83b297be89cd"],
Cell[CellGroupData[{
Cell[699038, 13799, 331, 7, 48, "Input",ExpressionUUID->"921c6a98-27ba-4e81-950c-e856543d6d3a"],
Cell[699372, 13808, 867, 27, 79, "Output",ExpressionUUID->"6af68a1b-d893-42aa-a2ee-44bc99bfa5b7"]
}, Open  ]],
Cell[700254, 13838, 531, 14, 34, "Text",ExpressionUUID->"b792d043-9901-4b17-a985-d904efa48033"],
Cell[700788, 13854, 329, 10, 10, "Text",ExpressionUUID->"52d1c938-ac34-49c0-a0c2-46c009ae4c22"],
Cell[701120, 13866, 315, 8, 78, "Text",ExpressionUUID->"b49264da-2a6d-4a84-8a45-979962e4668b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701472, 13879, 407, 9, 89, "Subsection",ExpressionUUID->"f15e1195-9b4e-4e33-bd1a-8b65b08b9841"],
Cell[701882, 13890, 4601, 88, 78, "Text",ExpressionUUID->"21bcae33-6b93-481e-a89a-8d94e0b93b11",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[706486, 13980, 231, 6, 34, "Text",ExpressionUUID->"f7f4ce1a-ada9-415e-80be-0e2627a8c334"],
Cell[CellGroupData[{
Cell[706742, 13990, 1170, 38, 45, "Input",ExpressionUUID->"34232b8c-2cf1-4412-a85a-e98a3fcaa749"],
Cell[707915, 14030, 572, 18, 49, "Output",ExpressionUUID->"6a2de006-99d2-4a90-ad4d-f183e93c1f43"]
}, Open  ]],
Cell[708502, 14051, 387, 8, 56, "Text",ExpressionUUID->"aca3ef38-2652-430e-adc7-a607056938b5"],
Cell[CellGroupData[{
Cell[708914, 14063, 587, 15, 28, "Input",ExpressionUUID->"9764ec53-a133-4228-bbdf-1ec92ca10572"],
Cell[709504, 14080, 600, 17, 32, "Output",ExpressionUUID->"d867715d-2fd7-4d09-a733-6951a6917993"]
}, Open  ]],
Cell[710119, 14100, 166, 3, 34, "Text",ExpressionUUID->"0c730ab2-55c9-49dd-9db9-08ed9c894a5f"],
Cell[CellGroupData[{
Cell[710310, 14107, 588, 15, 28, "Input",ExpressionUUID->"f7aa00bb-351a-4c9d-8ce1-fc6f08f0e4c1"],
Cell[710901, 14124, 569, 16, 32, "Output",ExpressionUUID->"1d635e6a-d527-4c4d-9917-3080e63e3177"]
}, Open  ]],
Cell[711485, 14143, 194, 3, 34, "Text",ExpressionUUID->"74267d8e-4bac-4b26-ab59-a5627a75aa1a"],
Cell[CellGroupData[{
Cell[711704, 14150, 437, 11, 48, "Input",ExpressionUUID->"a3a52fc4-dd93-4e64-9709-bb961935be24"],
Cell[712144, 14163, 1526, 44, 62, "Output",ExpressionUUID->"7203637a-17b5-40aa-8583-085e17d0877d"]
}, Open  ]],
Cell[713685, 14210, 255, 6, 34, "Text",ExpressionUUID->"972fc75d-2929-4caa-87f2-8d58e0a0fcb5"],
Cell[CellGroupData[{
Cell[713965, 14220, 1203, 35, 28, "Input",ExpressionUUID->"8c48cb14-7498-4e94-96c8-53b8531c3bb6"],
Cell[715171, 14257, 530, 15, 32, "Output",ExpressionUUID->"0971c401-c1ef-4a46-bf7a-c11bac5f9f75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715738, 14277, 951, 31, 28, "Input",ExpressionUUID->"2dca2ebf-44ca-42ff-9f0d-c179c1b3bdf9"],
Cell[716692, 14310, 485, 13, 32, "Output",ExpressionUUID->"f2b5c3cb-0f88-4f96-a61e-de403371b05b"]
}, Open  ]],
Cell[717192, 14326, 1425, 34, 148, "Text",ExpressionUUID->"35b03ebe-3cdf-4ad3-b749-2b10ae8622e4"],
Cell[CellGroupData[{
Cell[718642, 14364, 921, 24, 52, "Input",ExpressionUUID->"69d0a995-7763-4663-9a73-8157f5ce6755"],
Cell[719566, 14390, 1982, 54, 66, "Output",ExpressionUUID->"f962c748-1b5b-404e-b55e-0686d157284e"]
}, Open  ]],
Cell[721563, 14447, 390, 10, 34, "Text",ExpressionUUID->"448d1395-795b-4b1c-9765-8f450bac41e1"],
Cell[CellGroupData[{
Cell[721978, 14461, 355, 8, 48, "Input",ExpressionUUID->"d7c73f5f-6c28-434d-b11a-bc2afdd5401c"],
Cell[722336, 14471, 1230, 37, 66, "Output",ExpressionUUID->"58d0bb6d-c033-47cd-8fa9-389b7dd35c1d"]
}, Open  ]],
Cell[723581, 14511, 2475, 85, 230, "Text",ExpressionUUID->"7b03b03a-d054-4189-9cf2-e082a5f7edc3"],
Cell[CellGroupData[{
Cell[726081, 14600, 933, 27, 52, "Input",ExpressionUUID->"66fa8fcc-c554-4d1b-829c-afdb31756703"],
Cell[727017, 14629, 1138, 34, 66, "Output",ExpressionUUID->"2c50e5e7-4fb9-4692-aaf3-5c904bc9f10b"]
}, Open  ]],
Cell[728170, 14666, 232, 4, 34, "Text",ExpressionUUID->"ea183fae-9034-467e-aa5a-8fdf8a9ba5fa"],
Cell[CellGroupData[{
Cell[728427, 14674, 392, 10, 28, "Input",ExpressionUUID->"eef84c47-9cd3-44aa-a4ec-272d24c292c8"],
Cell[728822, 14686, 1001, 37, 61, "Output",ExpressionUUID->"f8f8b3c1-9e8d-4425-878b-65e29f384cb8"]
}, Open  ]],
Cell[729838, 14726, 353, 7, 56, "Text",ExpressionUUID->"ad0296f9-dfff-4ec9-aed2-6003ba5736fb"],
Cell[CellGroupData[{
Cell[730216, 14737, 368, 11, 59, "Input",ExpressionUUID->"ea0cb48c-23b0-49db-85a6-ba207907d123"],
Cell[730587, 14750, 270, 7, 49, "Output",ExpressionUUID->"0b245a89-da70-4f6f-b41c-d4a1cfb45d01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730894, 14762, 370, 11, 59, "Input",ExpressionUUID->"351e55a7-1b56-430c-ae89-8f9b1145e133"],
Cell[731267, 14775, 243, 7, 32, "Output",ExpressionUUID->"54588b85-ecff-49b5-aef0-752f1ef0bd53"]
}, Open  ]],
Cell[731525, 14785, 349, 7, 56, "Text",ExpressionUUID->"a99ed2d0-f020-450b-bad0-8195900c2454"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731911, 14797, 388, 9, 89, "Subsection",ExpressionUUID->"85d23a1a-bcbe-462a-bd15-92a5fbcaa837"],
Cell[732302, 14808, 4076, 79, 78, "Text",ExpressionUUID->"794f21b3-5f05-4b83-b623-a346ee9290b8"],
Cell[736381, 14889, 180, 3, 34, "Text",ExpressionUUID->"4dde9f0d-5e62-4cc2-a5e9-13b51b122496"],
Cell[CellGroupData[{
Cell[736586, 14896, 1268, 39, 45, "Input",ExpressionUUID->"088a0ee5-4f72-43da-a0fd-2db7b4c1eb86"],
Cell[737857, 14937, 694, 20, 49, "Output",ExpressionUUID->"009dca1f-f1cb-4026-ae2a-6b46e6ddc755"]
}, Open  ]],
Cell[738566, 14960, 279, 7, 56, "Text",ExpressionUUID->"30b54b1b-bb23-44bd-a1a1-806d35b7321e"],
Cell[CellGroupData[{
Cell[738870, 14971, 610, 15, 28, "Input",ExpressionUUID->"aa85f330-a6b9-4ec5-8e42-15c164a8bef8"],
Cell[739483, 14988, 621, 16, 32, "Output",ExpressionUUID->"d4bed8a7-8c5f-4974-a7fd-4259848174fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740141, 15009, 516, 14, 28, "Input",ExpressionUUID->"209584cc-2956-44c2-a99b-3d4706b04065"],
Cell[740660, 15025, 529, 14, 32, "Output",ExpressionUUID->"4d9dbc9f-257e-47ab-a25d-0f545d1f0817"]
}, Open  ]],
Cell[CellGroupData[{
Cell[741226, 15044, 347, 8, 48, "Input",ExpressionUUID->"a753ba39-a897-433b-b40d-4f5376101de6"],
Cell[741576, 15054, 1492, 44, 62, "Output",ExpressionUUID->"98d3dff6-7740-4961-ab3b-4139a9a79c54"]
}, Open  ]],
Cell[743083, 15101, 523, 13, 34, "Text",ExpressionUUID->"113cef99-9ba4-4214-a8d1-537f3c570a6b"],
Cell[CellGroupData[{
Cell[743631, 15118, 923, 24, 52, "Input",ExpressionUUID->"6e8acc9d-56f0-4b82-aa69-8345c5de9406"],
Cell[744557, 15144, 2018, 54, 66, "Output",ExpressionUUID->"960b6045-4e52-41c5-9039-ed0a0a7b9e5a"]
}, Open  ]],
Cell[746590, 15201, 393, 11, 34, "Text",ExpressionUUID->"b969217d-0321-4102-be7e-a8d49c0b2a22"],
Cell[CellGroupData[{
Cell[747008, 15216, 357, 8, 48, "Input",ExpressionUUID->"e43db8bf-7ad8-444d-8b9f-c2954b0646fc"],
Cell[747368, 15226, 1297, 38, 66, "Output",ExpressionUUID->"2917d365-3d34-4915-84f5-39ddee846614"]
}, Open  ]],
Cell[748680, 15267, 2442, 90, 220, "Text",ExpressionUUID->"77d1fbf4-6a7a-40c7-a968-3dc087ec8bc2"],
Cell[CellGroupData[{
Cell[751147, 15361, 839, 25, 52, "Input",ExpressionUUID->"78c460b8-bf3f-4b22-bc7a-5cd93782cc5f"],
Cell[751989, 15388, 1172, 33, 66, "Output",ExpressionUUID->"54d049de-ebfd-4ebe-83fe-d21e3b74b528"]
}, Open  ]],
Cell[753176, 15424, 219, 4, 34, "Text",ExpressionUUID->"e31ed313-a3a0-441c-b57b-0deee3fd48d7"],
Cell[CellGroupData[{
Cell[753420, 15432, 392, 10, 28, "Input",ExpressionUUID->"338ea4d9-570d-433c-9fdf-91a803d3abea"],
Cell[753815, 15444, 1177, 40, 61, "Output",ExpressionUUID->"8b9fe6a4-dbe3-455e-b44e-159b26bdbafb"]
}, Open  ]],
Cell[755007, 15487, 201, 3, 34, "Text",ExpressionUUID->"f53ea751-c6f6-48ce-96d6-4eb1da82e8f6"],
Cell[CellGroupData[{
Cell[755233, 15494, 476, 13, 59, "Input",ExpressionUUID->"2b8d2e6c-a1b2-4dd5-a046-fcc4960ee895"],
Cell[755712, 15509, 247, 6, 32, "Output",ExpressionUUID->"eae3d6d5-fadc-4d80-887a-b7172c6ee2c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755996, 15520, 402, 12, 59, "Input",ExpressionUUID->"0418944d-c888-4711-a90f-ce91da895918"],
Cell[756401, 15534, 269, 7, 32, "Output",ExpressionUUID->"bd144bac-21fc-4b31-94bc-0e84b7430a98"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[756719, 15547, 1129, 34, 110, "Subsection",ExpressionUUID->"eef0ad4a-50af-41cc-bb43-9900c5855692"],
Cell[757851, 15583, 193, 3, 34, "Text",ExpressionUUID->"0ec3b984-b931-46ff-a88d-e82292e96671"],
Cell[CellGroupData[{
Cell[758069, 15590, 466, 13, 48, "Input",ExpressionUUID->"17d9914e-5205-4e52-8f02-75c734d92dca"],
Cell[758538, 15605, 773, 22, 62, "Output",ExpressionUUID->"779a60cd-cc77-4124-9ef3-13d7270c02b1"]
}, Open  ]],
Cell[759326, 15630, 284, 6, 56, "Text",ExpressionUUID->"9331e4a3-9b30-4f36-b5d0-3af0200ccfd5"],
Cell[CellGroupData[{
Cell[759635, 15640, 372, 9, 48, "Input",ExpressionUUID->"ae2cfd8d-a5bb-46d7-bad5-a478fa0f16a2"],
Cell[760010, 15651, 751, 21, 62, "Output",ExpressionUUID->"006cfc3b-ad7c-4680-8ff8-2f4afacae197"]
}, Open  ]],
Cell[760776, 15675, 178, 3, 34, "Text",ExpressionUUID->"8e07e960-ae20-4882-be67-ae84fe27e4e6"],
Cell[CellGroupData[{
Cell[760979, 15682, 386, 8, 48, "Input",ExpressionUUID->"a78c4c8b-7d70-43a4-9e91-c545bf79a448"],
Cell[761368, 15692, 773, 22, 62, "Output",ExpressionUUID->"0444b677-7aa2-42b3-b90b-6f419f8c244f"]
}, Open  ]],
Cell[762156, 15717, 184, 3, 34, "Text",ExpressionUUID->"daf8868c-0c12-4698-8308-7d90d45d06cc"],
Cell[CellGroupData[{
Cell[762365, 15724, 337, 8, 48, "Input",ExpressionUUID->"390d25c3-9eb0-4230-afd1-b551b8c7d9f1"],
Cell[762705, 15734, 775, 22, 62, "Output",ExpressionUUID->"510fdb84-0607-45eb-a525-05ce5a496de9"]
}, Open  ]],
Cell[763495, 15759, 758, 19, 56, "Text",ExpressionUUID->"90c846b6-f296-43de-b17a-3f265c0729e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764290, 15783, 1506, 38, 120, "Subsection",ExpressionUUID->"5c9ef12b-6e3f-44c8-a5d1-88725a16a2c4"],
Cell[765799, 15823, 222, 3, 28, "Input",ExpressionUUID->"4cfb5ac7-01c7-46d1-857c-17dc78e1770d"],
Cell[766024, 15828, 239, 4, 34, "Text",ExpressionUUID->"6e81b4a6-101a-4722-a2c1-1bab46bc24d0"],
Cell[CellGroupData[{
Cell[766288, 15836, 784, 18, 32, "Input",ExpressionUUID->"f5e7633c-38d0-44e6-9270-513febab2a09"],
Cell[767075, 15856, 453, 10, 36, "Output",ExpressionUUID->"e618f81d-1b61-4634-8ad8-6972074cfbd2"]
}, Open  ]],
Cell[767543, 15869, 267, 6, 34, "Text",ExpressionUUID->"a8521932-e026-445a-b2c5-ab0b0cd4e78f"],
Cell[CellGroupData[{
Cell[767835, 15879, 315, 7, 28, "Input",ExpressionUUID->"b0cd5737-9232-4c09-bf48-177967c2a833"],
Cell[768153, 15888, 394, 9, 32, "Output",ExpressionUUID->"0cdc1302-40b5-47e2-9868-b70c0f72fc15"]
}, Open  ]],
Cell[768562, 15900, 181, 3, 34, "Text",ExpressionUUID->"8eaa9030-82e4-4be1-a06a-635bf6005e35"],
Cell[768746, 15905, 578, 14, 32, "Input",ExpressionUUID->"55f6f01e-30f2-4ff5-82b5-caaa35941901"],
Cell[769327, 15921, 304, 7, 34, "Text",ExpressionUUID->"bb357be8-fa4e-446e-8f14-719e62ece589"],
Cell[CellGroupData[{
Cell[769656, 15932, 585, 13, 49, "Input",ExpressionUUID->"d47b7172-0776-4433-9b95-a9891fef3ca6"],
Cell[770244, 15947, 327, 5, 32, "Output",ExpressionUUID->"1d04e93f-60ab-4d85-85ec-b3442955b61a"]
}, Open  ]],
Cell[770586, 15955, 282, 6, 34, "Text",ExpressionUUID->"f48b2bc1-16f3-45c6-899a-2fe58ce6deec"],
Cell[CellGroupData[{
Cell[770893, 15965, 504, 11, 28, "Input",ExpressionUUID->"ab729a30-a89d-47bc-ab82-0d7a15d89c87"],
Cell[771400, 15978, 217, 4, 32, "Output",ExpressionUUID->"a320ffa1-12fc-45b0-971f-3752f82bffd4"]
}, Open  ]],
Cell[771632, 15985, 572, 12, 78, "Text",ExpressionUUID->"fa1ecdb2-f708-458e-9a0c-3ea79f8a796a"],
Cell[CellGroupData[{
Cell[772229, 16001, 351, 8, 28, "Input",ExpressionUUID->"c6b24052-4f72-4815-8099-84fcbd578df9"],
Cell[772583, 16011, 340, 8, 32, "Output",ExpressionUUID->"3fca97d2-01ef-4e79-837b-c5db9c5f1c2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[772960, 16024, 346, 8, 28, "Input",ExpressionUUID->"4b634d18-3569-43b3-bcc2-52705a18265c"],
Cell[773309, 16034, 222, 4, 32, "Output",ExpressionUUID->"e25aad2d-99bd-4b2b-959c-7793065cb996"]
}, Open  ]],
Cell[773546, 16041, 342, 7, 56, "Text",ExpressionUUID->"77e31158-21fb-4b71-8903-16c01020c2a3"],
Cell[CellGroupData[{
Cell[773913, 16052, 452, 11, 28, "Input",ExpressionUUID->"c88d44d3-543b-4fef-aa1b-9fd2b59f2c23"],
Cell[774368, 16065, 323, 8, 32, "Output",ExpressionUUID->"0d7afa6f-f724-4cb8-b892-bcf95722bdee"]
}, Open  ]],
Cell[774706, 16076, 368, 8, 56, "Text",ExpressionUUID->"eeadde3b-239f-4cdb-b907-bc06586a3095"],
Cell[CellGroupData[{
Cell[775099, 16088, 280, 6, 28, "Input",ExpressionUUID->"b5f76e31-9d6b-4069-ac88-8b10eb582a7c"],
Cell[775382, 16096, 240, 5, 32, "Output",ExpressionUUID->"7f9e6a47-5362-4ea1-ba74-bcaa5627b297"]
}, Open  ]],
Cell[775637, 16104, 265, 6, 34, "Text",ExpressionUUID->"23fceeeb-7f16-45b9-9b5e-b25250d1923e"],
Cell[CellGroupData[{
Cell[775927, 16114, 424, 11, 28, "Input",ExpressionUUID->"ba1a307d-c9a0-4769-a5aa-0676d626e6a8"],
Cell[776354, 16127, 276, 6, 32, "Output",ExpressionUUID->"9503c63e-bd4b-4e95-ad83-94ae81dc6373"]
}, Open  ]],
Cell[776645, 16136, 628, 14, 78, "Text",ExpressionUUID->"98f6d6ba-1775-4b8a-a3c2-d06f02c13076"],
Cell[CellGroupData[{
Cell[777298, 16154, 347, 8, 28, "Input",ExpressionUUID->"831e2bba-a463-4079-9f29-cd4af07596c6"],
Cell[777648, 16164, 529, 14, 32, "Output",ExpressionUUID->"cac0abea-497c-47af-9ba3-c4a0ff0783a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778214, 16183, 348, 8, 28, "Input",ExpressionUUID->"9747b8a4-6d95-4691-b73f-9e412bf23019"],
Cell[778565, 16193, 251, 5, 32, "Output",ExpressionUUID->"c549de6a-adaa-47e5-b5c1-6f5d0b48dcbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778853, 16203, 348, 8, 28, "Input",ExpressionUUID->"4c5745b6-8b06-4599-a78f-b90f93fa827c"],
Cell[779204, 16213, 259, 5, 32, "Output",ExpressionUUID->"9031eca8-8444-408c-a446-dc5d06b6eeff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779500, 16223, 427, 11, 28, "Input",ExpressionUUID->"2e6156e5-d15b-4c7e-8b1c-1e07c9f5a6ff"],
Cell[779930, 16236, 393, 10, 49, "Output",ExpressionUUID->"84a1903f-d570-4ca2-9b15-0b75475d89c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780360, 16251, 279, 6, 28, "Input",ExpressionUUID->"e68ac823-8e83-41c5-8069-b7571c5f0dd8"],
Cell[780642, 16259, 274, 6, 52, "Output",ExpressionUUID->"fa5f06ab-9e3e-4093-8f52-cac5ac01c926"]
}, Open  ]],
Cell[780931, 16268, 232, 6, 56, "Text",ExpressionUUID->"686cce84-c014-49ee-b923-712af43b0b53"],
Cell[CellGroupData[{
Cell[781188, 16278, 540, 14, 28, "Input",ExpressionUUID->"fe4d6de7-e7e6-4014-90cd-427c8e58c124"],
Cell[781731, 16294, 336, 8, 32, "Output",ExpressionUUID->"3644ecde-e6fb-4ebb-8845-d3bef2768455"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782104, 16307, 348, 8, 28, "Input",ExpressionUUID->"8a1f87d6-4c73-4b27-b47b-63453f703c5f"],
Cell[782455, 16317, 883, 26, 36, "Output",ExpressionUUID->"32a9a321-7e3f-49f5-9eba-fdf30d9278c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783375, 16348, 352, 8, 28, "Input",ExpressionUUID->"fab4aec3-12ab-4e6a-9009-65dcd59f142a"],
Cell[783730, 16358, 275, 7, 32, "Output",ExpressionUUID->"39a3d727-befd-47d7-8315-bbb57c18a5fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[784042, 16370, 352, 8, 28, "Input",ExpressionUUID->"1a4eaa9f-5177-4be6-9481-96c5df816d6f"],
Cell[784397, 16380, 260, 6, 32, "Output",ExpressionUUID->"a294352f-b00a-4d1b-b1e6-c381a615ce11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[784694, 16391, 350, 8, 28, "Input",ExpressionUUID->"ebb73112-4368-4e85-8de7-429fcd1eb653"],
Cell[785047, 16401, 269, 6, 32, "Output",ExpressionUUID->"c9cea929-ca0c-4bdc-87fd-90381f0bc181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785353, 16412, 451, 11, 28, "Input",ExpressionUUID->"15c8aa03-5689-4fab-85be-155822259696"],
Cell[785807, 16425, 445, 12, 49, "Output",ExpressionUUID->"335ecd4e-cc31-4042-acfa-375689b4886b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786289, 16442, 280, 6, 28, "Input",ExpressionUUID->"a657acad-d092-44e9-90e9-8ae4f045ffb4"],
Cell[786572, 16450, 349, 10, 52, "Output",ExpressionUUID->"2716ebe0-1728-4995-86c2-443bec3a335d"]
}, Open  ]],
Cell[786936, 16463, 216, 4, 56, "Text",ExpressionUUID->"e50642cf-3b9a-4a1a-b710-bd482b920dca"],
Cell[CellGroupData[{
Cell[787177, 16471, 559, 15, 28, "Input",ExpressionUUID->"720f2b3b-07fc-44ac-9db2-d7a2864b0faa"],
Cell[787739, 16488, 368, 10, 32, "Output",ExpressionUUID->"cad3915d-1fcf-4e95-b200-82d223ab45cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788144, 16503, 349, 8, 28, "Input",ExpressionUUID->"527b0155-06c9-4617-a4df-e57c487f73aa"],
Cell[788496, 16513, 1273, 38, 36, "Output",ExpressionUUID->"c90254db-0a84-493a-badb-49b81c4da7d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789806, 16556, 348, 8, 28, "Input",ExpressionUUID->"855a5377-437f-4388-a228-25409135f88f"],
Cell[790157, 16566, 279, 7, 32, "Output",ExpressionUUID->"22167423-34ed-43fd-b9ec-8c8e06b07fa7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790473, 16578, 347, 8, 28, "Input",ExpressionUUID->"49938862-d0ac-4922-be81-0970d06f015a"],
Cell[790823, 16588, 363, 11, 32, "Output",ExpressionUUID->"52057a03-89ad-4acc-981a-16c832bbc350"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791223, 16604, 348, 8, 28, "Input",ExpressionUUID->"7e069ace-0390-4e5a-8c46-5e40e45a2436"],
Cell[791574, 16614, 295, 7, 32, "Output",ExpressionUUID->"53158c38-a334-4099-b384-f4aad3f685fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791906, 16626, 350, 8, 28, "Input",ExpressionUUID->"fa5c2405-7610-4078-b49e-a1cdd9415846"],
Cell[792259, 16636, 306, 7, 32, "Output",ExpressionUUID->"41d7fc6f-e533-4202-8e6d-5d311f01eb7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792602, 16648, 487, 13, 28, "Input",ExpressionUUID->"b7f87ce6-8ae9-428c-b8f9-8de6309d9b2d"],
Cell[793092, 16663, 488, 13, 49, "Output",ExpressionUUID->"45542b2b-5cae-41a1-9eeb-0a9e49a24ff0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793617, 16681, 282, 6, 28, "Input",ExpressionUUID->"7fdfac20-2d30-4347-bcda-3836698beedb"],
Cell[793902, 16689, 390, 11, 52, "Output",ExpressionUUID->"b10b7e8e-2c0d-43a3-a033-5195fb1dde78"]
}, Open  ]],
Cell[794307, 16703, 400, 8, 56, "Text",ExpressionUUID->"72333fc4-d15c-4d5d-ad95-91fc8950a865"],
Cell[CellGroupData[{
Cell[794732, 16715, 854, 22, 28, "Input",ExpressionUUID->"594aa1dd-bf0a-47e3-94cb-8cac6633c9e6"],
Cell[795589, 16739, 1022, 31, 52, "Output",ExpressionUUID->"6002f56a-a668-441b-9a55-6a051f57bff6"]
}, Open  ]],
Cell[796626, 16773, 192, 3, 34, "Text",ExpressionUUID->"00b7b13c-59cc-4f14-87af-60132eee8cf4"],
Cell[CellGroupData[{
Cell[796843, 16780, 615, 15, 28, "Input",ExpressionUUID->"ffe45db3-f8f8-4164-a8f2-833bbceaaf11"],
Cell[797461, 16797, 993, 31, 52, "Output",ExpressionUUID->"85082eab-fe41-4fbf-9437-856b6434a2b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798491, 16833, 525, 14, 28, "Input",ExpressionUUID->"d8da93ab-1fe2-4819-a470-59e96871b4ba"],
Cell[799019, 16849, 875, 24, 113, "Output",ExpressionUUID->"5dac8265-c17c-4022-bf97-c8e44412a89b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[799943, 16879, 1255, 29, 162, "Subsection",ExpressionUUID->"2c3dc8de-5abe-4f36-ab08-740bac827457"],
Cell[801201, 16910, 189, 3, 34, "Text",ExpressionUUID->"e927b056-6395-488c-8baa-7701d11cb3fc"],
Cell[CellGroupData[{
Cell[801415, 16917, 1435, 38, 48, "Input",ExpressionUUID->"6bc27b68-fc79-4b65-b9b3-e8d2a5b71701"],
Cell[802853, 16957, 4226, 87, 239, "Output",ExpressionUUID->"3e5c0ee2-02fd-406d-8c3c-b19ef7b871a9"]
}, Open  ]],
Cell[807094, 17047, 870, 25, 56, "Text",ExpressionUUID->"85da05fe-9ad9-47f2-9083-19bb14bc5cd5"],
Cell[CellGroupData[{
Cell[807989, 17076, 253, 4, 28, "Input",ExpressionUUID->"cf4feac6-d8ec-4ac7-b793-8b449efa1440"],
Cell[808245, 17082, 172, 2, 32, "Output",ExpressionUUID->"f5e7ff28-62c1-4600-aa10-fe082fdbff44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808454, 17089, 633, 17, 28, "Input",ExpressionUUID->"8d7e05e4-8739-4cad-a7ed-e3b85a8d3cb8"],
Cell[809090, 17108, 2556, 83, 52, "Output",ExpressionUUID->"2ed8ee3d-05b2-43f5-a79c-6fc993c5d811"]
}, Open  ]],
Cell[811661, 17194, 698, 14, 144, "Text",ExpressionUUID->"792be7b6-c2ee-4982-a699-f4224691f826"],
Cell[812362, 17210, 907, 25, 48, "Input",ExpressionUUID->"88897631-b849-46d6-aed0-a73122bfd796"],
Cell[813272, 17237, 171, 3, 34, "Text",ExpressionUUID->"eed7c344-6688-49af-a102-ed535f3a350b"],
Cell[813446, 17242, 803, 23, 48, "Input",ExpressionUUID->"ac872f4b-173d-416a-9dfe-d7ccec0975c3"],
Cell[814252, 17267, 365, 8, 56, "Text",ExpressionUUID->"4c35aed7-59bb-43b8-b4dd-b344fa850c38"],
Cell[CellGroupData[{
Cell[814642, 17279, 527, 13, 48, "Input",ExpressionUUID->"1e6ed0d3-578a-451c-bde5-f67fcaccd470"],
Cell[815172, 17294, 2206, 76, 269, "Output",ExpressionUUID->"622b2064-71ae-488c-80b4-2541839db341"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817415, 17375, 527, 13, 48, "Input",ExpressionUUID->"459fa69e-c04f-4429-aa3d-4e8d05c6810f"],
Cell[817945, 17390, 2169, 73, 258, "Output",ExpressionUUID->"7ede4f5e-9a8b-4bc1-8b87-87c36acc7009"]
}, Open  ]],
Cell[820129, 17466, 190, 3, 34, "Text",ExpressionUUID->"221dbf6b-d636-43f4-b97a-92f3277383df"],
Cell[CellGroupData[{
Cell[820344, 17473, 777, 21, 28, "Input",ExpressionUUID->"2e911fff-2284-4919-a1ef-0fdd025570f1"],
Cell[821124, 17496, 2596, 83, 50, "Output",ExpressionUUID->"80f91c6c-ef53-4cca-8cd6-2cb010869684"]
}, Open  ]],
Cell[823735, 17582, 171, 3, 34, "Text",ExpressionUUID->"1bd2c134-2d0f-4652-8cdd-c36fd64bf910"],
Cell[CellGroupData[{
Cell[823931, 17589, 241, 5, 28, "Input",ExpressionUUID->"eb51ceb3-f244-4419-9b23-bcae4b2f24bb"],
Cell[824175, 17596, 1605, 53, 51, "Output",ExpressionUUID->"9e3b71e0-27bf-4c64-8f5e-eb443da59b8b"]
}, Open  ]],
Cell[825795, 17652, 195, 3, 34, "Text",ExpressionUUID->"37b99898-8907-4445-abc1-44f53cf2310a"],
Cell[CellGroupData[{
Cell[826015, 17659, 479, 13, 48, "Input",ExpressionUUID->"8eeaeed4-b9bf-4376-b7b8-8d7ba8fa091f"],
Cell[826497, 17674, 56367, 945, 239, "Output",ExpressionUUID->"d2575d9a-997a-42fd-b988-90bdb2fd2293"]
}, Open  ]],
Cell[882879, 18622, 329, 10, 10, "Text",ExpressionUUID->"173b55c1-76b2-45b6-bba9-3a342134173c"],
Cell[883211, 18634, 217, 7, 100, "Text",ExpressionUUID->"78221de6-6c71-4000-b047-c14d29bdf3aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[883465, 18646, 747, 17, 137, "Subsection",ExpressionUUID->"34fd7e4a-815f-4944-8671-97d0946de9c2"],
Cell[884215, 18665, 191, 3, 34, "Text",ExpressionUUID->"3c57aab1-1e1a-4132-9663-284fa1115ac6"],
Cell[CellGroupData[{
Cell[884431, 18672, 606, 16, 48, "Input",ExpressionUUID->"292226c5-4f0b-4fcb-ac5d-1251d7bd731e"],
Cell[885040, 18690, 7056, 136, 245, "Output",ExpressionUUID->"6d0d1240-51da-4c00-b847-403104b971a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892133, 18831, 336, 7, 28, "Input",ExpressionUUID->"637568ea-d556-4de0-b62d-dd3fcab764b4"],
Cell[892472, 18840, 1195, 33, 53, "Output",ExpressionUUID->"2b56f371-e918-492a-95d2-21d6474a8fc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[893704, 18878, 251, 5, 28, "Input",ExpressionUUID->"d7864855-b6de-41d3-972b-0adbfe41dd11"],
Cell[893958, 18885, 557, 17, 51, "Output",ExpressionUUID->"387e5b98-09b2-4b90-a01b-7ca03c1d3f83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[894552, 18907, 325, 8, 28, "Input",ExpressionUUID->"09623766-7d9a-4419-8cc0-161595f74151"],
Cell[894880, 18917, 19818, 344, 240, "Output",ExpressionUUID->"91a9752e-8e36-48fe-ab24-5577cc642d02"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[914747, 19267, 932, 16, 167, "Subsection",ExpressionUUID->"7822fdfd-549a-45ef-be77-41917bd62f23"],
Cell[915682, 19285, 238, 6, 56, "Text",ExpressionUUID->"433b7c3e-b465-4b40-a24a-c03d014bfd0d"],
Cell[CellGroupData[{
Cell[915945, 19295, 624, 17, 48, "Input",ExpressionUUID->"10c3fbe9-0348-4454-aa7c-38f13b953919"],
Cell[916572, 19314, 7516, 146, 244, "Output",ExpressionUUID->"24ec729a-1c24-4709-b4aa-9e4db06899d9"]
}, Open  ]],
Cell[924103, 19463, 199, 3, 34, "Text",ExpressionUUID->"0be91306-6393-48c0-bc51-bc5ab32c8231"],
Cell[924305, 19468, 481, 13, 56, "Input",ExpressionUUID->"a6439311-27c0-46e8-afad-c3a4d3f03112"],
Cell[924789, 19483, 192, 3, 34, "Text",ExpressionUUID->"f3563108-2ba0-409d-b8ef-e612bf683aa6"],
Cell[924984, 19488, 734, 21, 28, "Input",ExpressionUUID->"ab3c0170-d428-4713-9ca0-1ee774772af4"],
Cell[925721, 19511, 752, 15, 122, "Text",ExpressionUUID->"431cc71c-0384-4769-b70f-35a9e55572e9"],
Cell[CellGroupData[{
Cell[926498, 19530, 260, 5, 28, "Input",ExpressionUUID->"86ca73cc-ea9d-4392-b6d2-2d08baa24497"],
Cell[926761, 19537, 179, 3, 32, "Output",ExpressionUUID->"7a96e4aa-78c8-42e9-b583-df3dcaf86602"]
}, Open  ]],
Cell[CellGroupData[{
Cell[926977, 19545, 707, 18, 28, "Input",ExpressionUUID->"acde8e1d-9a8e-4ae2-97fb-7b7e2d7e37f7"],
Cell[927687, 19565, 2461, 68, 61, "Output",ExpressionUUID->"39471743-bd91-4f34-9068-da01a4bf749a"]
}, Open  ]],
Cell[930163, 19636, 181, 3, 34, "Text",ExpressionUUID->"9dcecdea-1eb2-4592-866a-3ede64fe583b"],
Cell[CellGroupData[{
Cell[930369, 19643, 221, 4, 28, "Input",ExpressionUUID->"1462daeb-9d99-46f4-a9ae-fef49c9cd3c0"],
Cell[930593, 19649, 896, 28, 59, "Output",ExpressionUUID->"14576947-3633-4ab4-acd6-42bf77c2177b"]
}, Open  ]],
Cell[931504, 19680, 165, 3, 34, "Text",ExpressionUUID->"6228a6f6-6e20-498b-b776-ff6eee314127"],
Cell[CellGroupData[{
Cell[931694, 19687, 319, 8, 28, "Input",ExpressionUUID->"7a0ac8b7-a03c-4e90-ae26-dc81573d2a9a"],
Cell[932016, 19697, 49628, 832, 243, "Output",ExpressionUUID->"74d338d7-ba71-4dfd-9226-127095729fbb"]
}, Open  ]],
Cell[981659, 20532, 185, 3, 34, "Text",ExpressionUUID->"8e55b5cf-8fc5-44c6-ad4c-0647cba73f31"],
Cell[CellGroupData[{
Cell[981869, 20539, 428, 10, 28, "Input",ExpressionUUID->"7f04993e-66bc-4de3-9b89-85584f287d92"],
Cell[982300, 20551, 2359, 66, 61, "Output",ExpressionUUID->"fbcb0f29-a221-4963-bd5d-25dbd7e80d05"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[984708, 20623, 837, 15, 115, "Subsection",ExpressionUUID->"18e00b9c-d24a-4fa3-bb41-82582bc42e22"],
Cell[985548, 20640, 167, 3, 34, "Text",ExpressionUUID->"a55d0bed-f8ac-4b1f-a528-44838d67849f"],
Cell[CellGroupData[{
Cell[985740, 20647, 1122, 32, 69, "Input",ExpressionUUID->"97d49185-f7b1-48d0-9d91-75bca22314d8"],
Cell[986865, 20681, 3727, 79, 238, "Output",ExpressionUUID->"1146f02a-5899-412b-ba46-21194675d385"]
}, Open  ]],
Cell[990607, 20763, 270, 6, 34, "Text",ExpressionUUID->"5cb3dca1-eeb3-47c4-8988-e39ed0d70872"],
Cell[CellGroupData[{
Cell[990902, 20773, 251, 4, 28, "Input",ExpressionUUID->"3b2cd20d-80e5-491e-a993-8c93a266757a"],
Cell[991156, 20779, 199, 3, 32, "Output",ExpressionUUID->"01547488-67b7-4294-a05d-72969b59245c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991392, 20787, 478, 12, 43, "Input",ExpressionUUID->"4546fa76-21da-4b6e-863e-488479737945"],
Cell[991873, 20801, 1756, 54, 49, "Output",ExpressionUUID->"83c2d401-de96-4512-965a-a105a37cbdee"]
}, Open  ]],
Cell[993644, 20858, 1018, 27, 77, "Input",ExpressionUUID->"5dfdffeb-659b-44a6-b556-2f06a7136daa"],
Cell[CellGroupData[{
Cell[994687, 20889, 424, 10, 28, "Input",ExpressionUUID->"e6a0d45f-5371-4abf-bc4b-d39a1f4ad8e7"],
Cell[995114, 20901, 2143, 66, 52, "Output",ExpressionUUID->"18ed5dba-df39-4b6a-a1aa-90593bf97743"]
}, Open  ]],
Cell[CellGroupData[{
Cell[997294, 20972, 464, 12, 28, "Input",ExpressionUUID->"8f7f7812-36b2-4c89-9bb7-75f331024dc7"],
Cell[997761, 20986, 1508, 46, 52, "Output",ExpressionUUID->"73ead46e-7f5d-439c-b50b-62b7b9fb372e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999306, 21037, 238, 4, 28, "Input",ExpressionUUID->"a857be96-f950-4e83-bb6e-7e2649c212ab"],
Cell[999547, 21043, 1248, 38, 59, "Output",ExpressionUUID->"23192d1a-d277-4d39-bd46-a13f585ee6df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000832, 21086, 437, 11, 28, "Input",ExpressionUUID->"80dcc49f-621f-4b32-83c7-fe48f70f9998"],
Cell[1001272, 21099, 6028, 117, 242, "Output",ExpressionUUID->"3553deb6-1649-41ac-83cc-c2f17bb43998"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007349, 21222, 379, 9, 89, "Subsection",ExpressionUUID->"bd329bd8-950c-40f4-8221-34e98f49f260"],
Cell[1007731, 21233, 182, 3, 34, "Text",ExpressionUUID->"5575f936-3732-42bc-9dd1-00baaecbe498"],
Cell[CellGroupData[{
Cell[1007938, 21240, 1019, 30, 48, "Input",ExpressionUUID->"7f403e19-8067-4ed1-81bd-5c8884264dd3"],
Cell[1008960, 21272, 5017, 101, 245, "Output",ExpressionUUID->"b3c60704-dd67-4e42-abf9-270203eac56a"]
}, Open  ]],
Cell[1013992, 21376, 269, 7, 56, "Text",ExpressionUUID->"19683846-a3d9-47be-9b26-4c3443e36b81"],
Cell[CellGroupData[{
Cell[1014286, 21387, 780, 20, 49, "Input",ExpressionUUID->"804099e1-5db9-4417-b5c8-1c77c06efdea"],
Cell[1015069, 21409, 633, 18, 62, "Output",ExpressionUUID->"71103bd0-7baf-41e0-8914-05c5367ca7a4"]
}, Open  ]],
Cell[1015717, 21430, 181, 3, 34, "Text",ExpressionUUID->"011d3526-32b0-4c2b-8a68-5a91b4ff1afa"],
Cell[CellGroupData[{
Cell[1015923, 21437, 247, 4, 28, "Input",ExpressionUUID->"4249f8bd-8ed1-4d07-98bc-73c5b2d5efbd"],
Cell[1016173, 21443, 402, 11, 76, "Output",ExpressionUUID->"22899b05-b6a8-4581-be3d-04245be1e743"]
}, Open  ]],
Cell[1016590, 21457, 320, 7, 34, "Text",ExpressionUUID->"bb4f55cd-58b2-4409-a5af-811bb8d7b8fb"],
Cell[CellGroupData[{
Cell[1016935, 21468, 755, 21, 49, "Input",ExpressionUUID->"2be01177-b300-4d32-bc14-8ec2c038d6d5"],
Cell[1017693, 21491, 535, 14, 59, "Output",ExpressionUUID->"23bcbbef-d545-4721-b1c6-46cbe1409d88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018265, 21510, 730, 20, 49, "Input",ExpressionUUID->"5500ec92-709e-4e93-a099-3dcc1682a77e"],
Cell[1018998, 21532, 460, 12, 59, "Output",ExpressionUUID->"d8126086-eceb-4539-b13c-67695fa80e71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019495, 21549, 266, 5, 28, "Input",ExpressionUUID->"5195713c-0051-41a0-a5b1-76d6d75f8ff4"],
Cell[1019764, 21556, 611, 18, 62, "Output",ExpressionUUID->"e9795c01-52d6-4506-9224-a2f65b236d61"]
}, Open  ]],
Cell[1020390, 21577, 156, 3, 34, "Text",ExpressionUUID->"16cee49c-a804-42b5-a859-1480d0c4d201"],
Cell[CellGroupData[{
Cell[1020571, 21584, 216, 3, 28, "Input",ExpressionUUID->"d63bcb62-0e0b-4a3d-86ef-6465b96095e4"],
Cell[1020790, 21589, 788, 24, 76, "Output",ExpressionUUID->"dd0ab59d-364d-4118-af35-4b474034386b"]
}, Open  ]],
Cell[1021593, 21616, 182, 3, 34, "Text",ExpressionUUID->"2ffb2561-6480-4648-bd3b-564a1d3b4843"],
Cell[CellGroupData[{
Cell[1021800, 21623, 325, 6, 28, "Input",ExpressionUUID->"d59864ab-f404-488c-a575-f345340978c2"],
Cell[1022128, 21631, 611, 18, 62, "Output",ExpressionUUID->"54e17572-070f-4bd5-bd48-3a80ee5bd868"]
}, Open  ]],
Cell[1022754, 21652, 235, 6, 34, "Text",ExpressionUUID->"e41b46d6-ab64-41e1-a006-1731ebbf4a65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023026, 21663, 1259, 34, 120, "Subsection",ExpressionUUID->"ae1fefc5-bf96-4b50-b733-5d601f050bad"],
Cell[CellGroupData[{
Cell[1024310, 21701, 199, 3, 28, "Input",ExpressionUUID->"e66d471e-0fba-4221-aadc-08e5b6e9faab"],
Cell[1024512, 21706, 148, 2, 32, "Output",ExpressionUUID->"66d53017-f525-40a1-9626-56b5df5bc929"]
}, Open  ]],
Cell[1024675, 21711, 1020, 25, 78, "Text",ExpressionUUID->"83e7199b-0c98-4f18-8d33-8cf46092404c"],
Cell[CellGroupData[{
Cell[1025720, 21740, 462, 12, 43, "Input",ExpressionUUID->"01637b6a-2934-4cb9-87e8-66837a54e09f"],
Cell[1026185, 21754, 349, 9, 49, "Output",ExpressionUUID->"f3bf1c5a-60e7-40ab-8933-cf97ecf5b47f"]
}, Open  ]],
Cell[1026549, 21766, 586, 18, 34, "Text",ExpressionUUID->"69076b66-14a3-43f2-a217-f4917b91936e"],
Cell[CellGroupData[{
Cell[1027160, 21788, 258, 5, 28, "Input",ExpressionUUID->"b51be9b2-af80-4561-847f-bcc1318bfbd1"],
Cell[1027421, 21795, 151, 2, 32, "Output",ExpressionUUID->"7b5c06a4-7a28-4bec-b415-add0ef3d7a02"]
}, Open  ]],
Cell[1027587, 21800, 193, 3, 34, "Text",ExpressionUUID->"8a9b4b8b-6897-435e-b34c-2bcb2c3b70d8"],
Cell[CellGroupData[{
Cell[1027805, 21807, 447, 11, 28, "Input",ExpressionUUID->"2a46d1b9-9f80-4dc4-961a-a00276f3aafb"],
Cell[1028255, 21820, 151, 2, 32, "Output",ExpressionUUID->"ce490f8f-8882-4c28-bf99-3fd73091c429"]
}, Open  ]],
Cell[1028421, 21825, 634, 15, 56, "Text",ExpressionUUID->"a3f50683-0aa6-4bd4-9352-79f9304439ea"],
Cell[CellGroupData[{
Cell[1029080, 21844, 436, 11, 28, "Input",ExpressionUUID->"99765a48-c72f-45ad-86b1-c6696bfce539"],
Cell[1029519, 21857, 719, 23, 49, "Output",ExpressionUUID->"d3e1232e-5b2d-42d4-8797-f134f22cfddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030275, 21885, 496, 14, 28, "Input",ExpressionUUID->"df4b91fd-852f-4ec3-9719-70531bf4d57a"],
Cell[1030774, 21901, 329, 9, 32, "Output",ExpressionUUID->"094a14eb-d8b1-4382-925e-1d47d97ae88c"]
}, Open  ]],
Cell[1031118, 21913, 234, 4, 28, "Input",ExpressionUUID->"7f305d57-d6f9-4954-8754-6644844dd425"],
Cell[1031355, 21919, 178, 3, 28, "Input",ExpressionUUID->"8e6804e6-f946-45d6-89ad-2f8275644fdf"],
Cell[1031536, 21924, 162, 3, 34, "Text",ExpressionUUID->"b49797ea-4a50-4b0c-b46d-c90662b91e7d"],
Cell[CellGroupData[{
Cell[1031723, 21931, 531, 14, 28, "Input",ExpressionUUID->"48322d53-0f7f-468b-adf9-c1bba200a45a"],
Cell[1032257, 21947, 178, 3, 32, "Output",ExpressionUUID->"7102cddf-fb89-4487-aa19-27aab01ce6ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032484, 21956, 1256, 35, 122, "Subsection",ExpressionUUID->"178bcc19-576a-42f0-9253-89c85d875f0b"],
Cell[1033743, 21993, 726, 18, 56, "Text",ExpressionUUID->"e4a064b0-454d-4f15-af70-4439711b4ada"],
Cell[CellGroupData[{
Cell[1034494, 22015, 201, 3, 28, "Input",ExpressionUUID->"091d6e0e-1351-465b-9b31-481ec0061dd5"],
Cell[1034698, 22020, 151, 2, 32, "Output",ExpressionUUID->"2c03c50f-5398-45b8-87d9-6473a36e2025"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1034886, 22027, 451, 12, 28, "Input",ExpressionUUID->"2c625ed6-9a0e-49db-a007-559c782cfa35"],
Cell[1035340, 22041, 236, 5, 32, "Output",ExpressionUUID->"9196f0b6-c7cd-46b9-9750-03f2c0bde62d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1035613, 22051, 232, 4, 28, "Input",ExpressionUUID->"04cdf522-37e8-4c3c-913e-d1f98a80d4d6"],
Cell[1035848, 22057, 151, 2, 32, "Output",ExpressionUUID->"39e6e341-f2e7-4509-87cf-80310e7830dc"]
}, Open  ]],
Cell[1036014, 22062, 6657, 238, 225, "Text",ExpressionUUID->"5e1a1a38-ec2a-408c-8050-3c968288d4f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042708, 22305, 20995, 333, 159, "Subsection",ExpressionUUID->"393b6fd7-da52-45f8-97a0-d3df366665d4"],
Cell[1063706, 22640, 192, 3, 34, "Text",ExpressionUUID->"394fa69a-10d1-49d8-a3ae-33f5cae302ed"],
Cell[CellGroupData[{
Cell[1063923, 22647, 472, 13, 28, "Input",ExpressionUUID->"ae8ef567-f920-412e-b114-bdffe62c4c6b"],
Cell[1064398, 22662, 486, 13, 32, "Output",ExpressionUUID->"0f9e3dec-e767-4630-8de9-7e8730e8a2c3"]
}, Open  ]],
Cell[1064899, 22678, 500, 12, 56, "Text",ExpressionUUID->"3bae0894-118c-45b6-b49e-1766390dd969"],
Cell[CellGroupData[{
Cell[1065424, 22694, 529, 14, 28, "Input",ExpressionUUID->"e4911954-425c-4eb9-b531-90a9c8edb206"],
Cell[1065956, 22710, 261, 5, 34, "Output",ExpressionUUID->"23e12e97-35f8-4849-b940-221448aff12c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066254, 22720, 1059, 26, 28, "Input",ExpressionUUID->"bb5fe55d-dfe8-43f8-b7a5-b768f9ddaab2"],
Cell[1067316, 22748, 746, 18, 34, "Output",ExpressionUUID->"a16a8d1a-044c-4b7c-b7f0-ad2c6aeddf83"]
}, Open  ]],
Cell[1068077, 22769, 167, 3, 34, "Text",ExpressionUUID->"e69d3958-4a20-4b31-9ded-c2178b59d452"],
Cell[CellGroupData[{
Cell[1068269, 22776, 322, 6, 28, "Input",ExpressionUUID->"7fa1faed-ecf5-4ef2-bbc1-07fb1003862f"],
Cell[1068594, 22784, 553, 15, 38, "Output",ExpressionUUID->"0894c25f-a9ba-411d-a6c9-a9fb2c44fa9c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1069196, 22805, 777, 14, 115, "Subsection",ExpressionUUID->"f07c4d21-56d9-4d90-903f-23e4fd822ec6"],
Cell[1069976, 22821, 225, 3, 28, "Input",ExpressionUUID->"9c04d222-b408-41ec-9da3-dfa1eeb29b09"],
Cell[1070204, 22826, 192, 3, 34, "Text",ExpressionUUID->"5c0c472f-b297-4612-a2f1-90177fcef3c8"],
Cell[CellGroupData[{
Cell[1070421, 22833, 417, 11, 28, "Input",ExpressionUUID->"f7a97e86-c038-4942-b74d-f6a6caa5a60f"],
Cell[1070841, 22846, 556, 15, 32, "Output",ExpressionUUID->"50953181-c90b-4dfd-b6ea-1048fb6f895e"]
}, Open  ]],
Cell[1071412, 22864, 619, 15, 56, "Text",ExpressionUUID->"89fd8aa3-b9e5-486d-979e-39ec7fc316e2"],
Cell[CellGroupData[{
Cell[1072056, 22883, 467, 11, 28, "Input",ExpressionUUID->"40c0763b-eca9-4139-96f5-328deb24a13d"],
Cell[1072526, 22896, 632, 17, 32, "Output",ExpressionUUID->"9dac94c9-3ff4-431d-9f3a-e0dc196f7ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073195, 22918, 396, 9, 48, "Input",ExpressionUUID->"e89c81c6-d162-4fc5-944a-05ef8a8856a2"],
Cell[1073594, 22929, 675, 18, 36, "Output",ExpressionUUID->"138c39fe-3731-46f1-b237-3bc68863acbe"]
}, Open  ]],
Cell[1074284, 22950, 464, 13, 34, "Text",ExpressionUUID->"1f92d79d-c542-464c-aadd-c88f5482e76b"],
Cell[CellGroupData[{
Cell[1074773, 22967, 399, 9, 32, "Input",ExpressionUUID->"b6f849b4-d38a-4a21-b357-aebb1e182722"],
Cell[1075175, 22978, 403, 10, 32, "Output",ExpressionUUID->"f29edf7c-a706-4c3e-9180-b0c79f2c841a"]
}, Open  ]],
Cell[1075593, 22991, 172, 3, 34, "Text",ExpressionUUID->"79de6f58-81fc-4b50-9b2b-0373877556d1"],
Cell[CellGroupData[{
Cell[1075790, 22998, 291, 6, 28, "Input",ExpressionUUID->"cefa7319-39af-4e18-9fdb-277be71ec005"],
Cell[1076084, 23006, 262, 5, 32, "Output",ExpressionUUID->"8ce524c8-52f8-4ef7-b74d-18c04df622da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1076383, 23016, 235, 4, 28, "Input",ExpressionUUID->"7da7e591-3878-4dd2-a8e0-8cd575f80a71"],
Cell[1076621, 23022, 368, 9, 36, "Output",ExpressionUUID->"d9a034c4-8ab2-4394-bb1d-407cbf366758"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077026, 23036, 467, 12, 28, "Input",ExpressionUUID->"5fef7c11-dec2-469d-8131-b68ec07aaa26"],
Cell[1077496, 23050, 478, 12, 32, "Output",ExpressionUUID->"6f3ba56b-34a1-4d73-9a2d-f412c8e26f2e"]
}, Open  ]],
Cell[1077989, 23065, 174, 3, 34, "Text",ExpressionUUID->"bf151547-0d4d-4e5a-8e6c-4bdfe36a9359"],
Cell[CellGroupData[{
Cell[1078188, 23072, 402, 10, 28, "Input",ExpressionUUID->"d8bf9899-9497-4d4c-af3e-c23efb38369c"],
Cell[1078593, 23084, 231, 3, 32, "Output",ExpressionUUID->"aaf33f26-0699-47c2-aafa-2c132670df93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1078861, 23092, 406, 9, 28, "Input",ExpressionUUID->"13514f30-415a-44ce-8ff2-5c2ccb2f0832"],
Cell[1079270, 23103, 230, 3, 32, "Output",ExpressionUUID->"82c51ca1-6743-4de6-b0ae-fc3b335dc494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1079537, 23111, 620, 17, 32, "Input",ExpressionUUID->"f34d2559-a4ee-4225-96d4-67410d9656f6"],
Cell[1080160, 23130, 175, 2, 32, "Output",ExpressionUUID->"99e22b0b-08b1-4ef5-96e0-e0006de7ac23"]
}, Open  ]],
Cell[1080350, 23135, 182, 3, 34, "Text",ExpressionUUID->"57474f5c-f561-454a-873e-403a5902959b"],
Cell[CellGroupData[{
Cell[1080557, 23142, 269, 5, 28, "Input",ExpressionUUID->"f4962477-80f0-4000-a1c2-776c5693c49e"],
Cell[1080829, 23149, 580, 16, 36, "Output",ExpressionUUID->"0895c54d-ad02-4d01-bd01-5d1ffb2c93c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081446, 23170, 401, 9, 28, "Input",ExpressionUUID->"73f0d5a2-5a9c-47f5-8b35-0632d9b64550"],
Cell[1081850, 23181, 316, 6, 50, "Output",ExpressionUUID->"cfdb8f81-d12c-49a8-badb-93d1737dc49f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082203, 23192, 357, 8, 28, "Input",ExpressionUUID->"2dccea1b-252a-4b9a-b0de-168d61b8bd21"],
Cell[1082563, 23202, 254, 5, 32, "Output",ExpressionUUID->"b828ab09-45ec-464f-83d6-a3eb97e00441"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082854, 23212, 397, 9, 46, "Input",ExpressionUUID->"86f73bc3-bf64-4dba-bf86-42bb6c9b7d12"],
Cell[1083254, 23223, 177, 2, 32, "Output",ExpressionUUID->"157a98e3-2454-4d58-8f8c-fab202e30a60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1083468, 23230, 321, 7, 28, "Input",ExpressionUUID->"e690815f-24f5-4285-989f-905b92e89fa4"],
Cell[1083792, 23239, 517, 14, 52, "Output",ExpressionUUID->"e33163e5-f543-4986-9b3e-ec395966b345"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084346, 23258, 371, 9, 48, "Input",ExpressionUUID->"3d62e696-540d-41f6-9a4d-a0aa018c7634"],
Cell[1084720, 23269, 677, 21, 52, "Output",ExpressionUUID->"c7d0c96f-6cc5-4bd1-b827-a206c4b871f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085446, 23296, 1217, 19, 115, "Subsection",ExpressionUUID->"f9c8ad6b-c28d-4102-b968-289bf02ade05",
 CellTags->"P852"],
Cell[CellGroupData[{
Cell[1086688, 23319, 437, 12, 28, "Input",ExpressionUUID->"98c895ea-7765-4d7a-ac6a-7864262c1b43"],
Cell[1087128, 23333, 486, 13, 32, "Output",ExpressionUUID->"2e6fea97-45d7-4de3-98db-bfce82eb95e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1087651, 23351, 414, 10, 28, "Input",ExpressionUUID->"341537fa-868b-4434-9f5c-7e90df02e56c"],
Cell[1088068, 23363, 517, 14, 32, "Output",ExpressionUUID->"9dab8b4a-9ef7-4c25-9d44-127931b554bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088622, 23382, 260, 5, 28, "Input",ExpressionUUID->"bd931881-0acd-41ca-8f44-8bed7205b1f6"],
Cell[1088885, 23389, 424, 12, 32, "Output",ExpressionUUID->"46934bc7-2629-4246-930c-d225b62e850d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089346, 23406, 322, 7, 28, "Input",ExpressionUUID->"d525cdf8-6d2c-4674-83b7-aa99fa26e592"],
Cell[1089671, 23415, 503, 15, 36, "Output",ExpressionUUID->"7b85cf25-ee51-4a8c-a6c5-e236aadc69d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090211, 23435, 520, 13, 28, "Input",ExpressionUUID->"3d702f1a-c316-4b46-bea4-e6581e793cb7"],
Cell[1090734, 23450, 628, 18, 32, "Output",ExpressionUUID->"cf34d47a-2b5b-4233-98fc-5f61991800a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1091399, 23473, 788, 21, 32, "Input",ExpressionUUID->"050bfa3b-43b2-434f-9b64-46c22ed31770"],
Cell[1092190, 23496, 717, 20, 35, "Output",ExpressionUUID->"b09ac482-2256-4b99-9e37-6b7449185ff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092944, 23521, 264, 5, 28, "Input",ExpressionUUID->"0a866458-ee40-4819-b568-661c3c394ef0"],
Cell[1093211, 23528, 178, 2, 32, "Output",ExpressionUUID->"3e2cab69-9814-45c5-9e36-41050ce1d2ff"]
}, Open  ]],
Cell[1093404, 23533, 760, 23, 34, "Text",ExpressionUUID->"e419a98d-4f64-4617-a679-19133def8434"],
Cell[CellGroupData[{
Cell[1094189, 23560, 810, 24, 28, "Input",ExpressionUUID->"cf07c1ef-378b-414b-9548-196bbdd47f43"],
Cell[1095002, 23586, 481, 14, 32, "Output",ExpressionUUID->"f7b6d7d6-2bf1-4144-aa39-6dd6269c3632"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095520, 23605, 716, 21, 28, "Input",ExpressionUUID->"9725cc7c-364c-4260-9c13-2dccf613da44"],
Cell[1096239, 23628, 180, 3, 32, "Output",ExpressionUUID->"efd71deb-d9bb-46db-a0d8-50a237b5ca86"]
}, Open  ]],
Cell[1096434, 23634, 329, 10, 10, "Text",ExpressionUUID->"a24acc76-50fe-4a1e-a99f-d953fe2165f9"],
Cell[1096766, 23646, 208, 4, 34, "Text",ExpressionUUID->"d0924a30-dfaa-4a96-97d0-09993a26a2b8"],
Cell[CellGroupData[{
Cell[1096999, 23654, 427, 12, 45, "Input",ExpressionUUID->"ce348c1b-d05a-4bd6-bf62-9dc8c314c255"],
Cell[1097429, 23668, 226, 5, 32, "Output",ExpressionUUID->"67ede399-5eb2-4dd3-bde6-985fc73afd5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097692, 23678, 404, 12, 46, "Input",ExpressionUUID->"e99271d5-2325-45e5-9f7b-acc292458d15"],
Cell[1098099, 23692, 223, 5, 32, "Output",ExpressionUUID->"9bef0ab2-1421-44ac-b860-b95aaeb613bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1098359, 23702, 401, 11, 46, "Input",ExpressionUUID->"04c80d0f-0452-4f91-944e-feca80f7dae3"],
Cell[1098763, 23715, 533, 16, 49, "Output",ExpressionUUID->"c7ccca67-b29a-4c27-ac0e-041e6d9f5f1b"]
}, Open  ]],
Cell[1099311, 23734, 329, 10, 10, "Text",ExpressionUUID->"a27b5ffc-6fd4-44bd-bbc2-96fc4ccb28d1"],
Cell[1099643, 23746, 217, 7, 100, "Text",ExpressionUUID->"a5a02426-547b-41b0-b5f1-cb5dcdf05d05"],
Cell[1099863, 23755, 6847, 117, 444, "Output",ExpressionUUID->"2e1376d8-3ad9-4ded-8eb3-b02a888b832c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[1106735, 23876, 530, 14, 32, "Input",ExpressionUUID->"56f1e78d-efb7-4bf8-a752-b7f73f296227"],
Cell[1107268, 23892, 481, 13, 36, "Output",ExpressionUUID->"e289259a-22c9-4edc-9a65-1178ea5c2823"]
}, Open  ]],
Cell[1107764, 23908, 214, 4, 34, "Text",ExpressionUUID->"5b4aabd9-ac18-4d44-8594-65080a40516c"],
Cell[CellGroupData[{
Cell[1108003, 23916, 813, 20, 28, "Input",ExpressionUUID->"f49dce54-d568-42b1-a65e-7702767a8dbd"],
Cell[1108819, 23938, 301, 5, 32, "Output",ExpressionUUID->"38cdcf37-41b0-491f-b72d-ccd8892a6c61"]
}, Open  ]],
Cell[1109135, 23946, 215, 4, 34, "Text",ExpressionUUID->"f826105b-1559-48bc-8f2f-41a4f71d4307"],
Cell[CellGroupData[{
Cell[1109375, 23954, 596, 16, 28, "Input",ExpressionUUID->"ade4446e-3419-420e-8e73-c1c43d2e60e0"],
Cell[1109974, 23972, 149, 2, 32, "Output",ExpressionUUID->"4f1797b6-2035-4bef-b81a-6556edf73cc2"]
}, Open  ]],
Cell[1110138, 23977, 157, 3, 34, "Text",ExpressionUUID->"e45187e9-4f0d-4294-8198-0cbe9890b8a6"],
Cell[CellGroupData[{
Cell[1110320, 23984, 570, 15, 28, "Input",ExpressionUUID->"18e4ff69-8a8c-4fab-88c1-1658e0c298bd"],
Cell[1110893, 24001, 175, 3, 32, "Output",ExpressionUUID->"864c44e0-9e0a-4ff3-98aa-230f615324b7"]
}, Open  ]],
Cell[1111083, 24007, 168, 3, 34, "Text",ExpressionUUID->"49cfcce0-2257-45d6-96b7-922f92518943"],
Cell[CellGroupData[{
Cell[1111276, 24014, 564, 15, 28, "Input",ExpressionUUID->"66126d7c-846a-42a3-b427-cc2d6ad3fe05"],
Cell[1111843, 24031, 151, 2, 32, "Output",ExpressionUUID->"8b17d887-a0b9-4126-8bc7-13c178328756"]
}, Open  ]],
Cell[1112009, 24036, 219, 4, 34, "Text",ExpressionUUID->"46d5525c-3993-4dbd-b9df-54a403959292"],
Cell[CellGroupData[{
Cell[1112253, 24044, 572, 15, 28, "Input",ExpressionUUID->"2b12c9c1-d7cf-4e41-9135-43c066da221c"],
Cell[1112828, 24061, 173, 2, 32, "Output",ExpressionUUID->"bbe349ad-68f6-45d8-9642-ef0faa9467d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1113038, 24068, 623, 16, 28, "Input",ExpressionUUID->"5aa32aab-f3ed-475c-8fa7-5d2563459a05"],
Cell[1113664, 24086, 178, 3, 32, "Output",ExpressionUUID->"e2b31396-2114-49e5-a485-05bd46ccc342"]
}, Open  ]],
Cell[1113857, 24092, 329, 10, 8, "Text",ExpressionUUID->"24ffaeb6-7849-4e4d-93ff-2b68403bd700"],
Cell[CellGroupData[{
Cell[1114211, 24106, 258, 5, 28, "Input",ExpressionUUID->"219532e4-6e96-4b13-b32d-1c46eb6dd0db"],
Cell[1114472, 24113, 225, 4, 32, "Output",ExpressionUUID->"29dfb546-8a65-4066-b6ee-9227768a5f55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1114734, 24122, 765, 19, 48, "Input",ExpressionUUID->"872ed061-3dfb-415c-8fa5-a870d15b0e2d"],
Cell[1115502, 24143, 7016, 134, 244, "Output",ExpressionUUID->"2785efed-cbfd-4d69-a620-9b70588718e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122555, 24282, 618, 17, 46, "Input",ExpressionUUID->"ad692c09-7600-45c3-aea4-7c6075203c1e"],
Cell[1123176, 24301, 2335, 70, 40, "Output",ExpressionUUID->"2eb67de6-bfa0-47a1-aee7-9b573f3619bd"]
}, Open  ]],
Cell[1125526, 24374, 1126, 32, 84, "Input",ExpressionUUID->"a9a6956a-e3ed-4a5d-a052-775cb40e6a8c"],
Cell[CellGroupData[{
Cell[1126677, 24410, 556, 15, 48, "Input",ExpressionUUID->"0a4092c5-cc38-4389-97bb-5c1446fe4db2"],
Cell[1127236, 24427, 3640, 113, 355, "Output",ExpressionUUID->"cce1ce97-1648-430d-8189-786798582655"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130913, 24545, 464, 13, 28, "Input",ExpressionUUID->"16d73d02-b2ff-4919-8f91-4f2cde621bf3"],
Cell[1131380, 24560, 2205, 67, 51, "Output",ExpressionUUID->"6d7ee98d-adb8-4d1c-a619-01b4f1b64c12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133622, 24632, 496, 10, 28, "Input",ExpressionUUID->"202dc21d-44f8-4571-8752-d97b1440cdca"],
Cell[1134121, 24644, 2240, 55, 68, "Output",ExpressionUUID->"5787fcac-c060-46a3-8933-8da21e5b2750"]
}, Open  ]],
Cell[1136376, 24702, 582, 15, 28, "Input",ExpressionUUID->"739f69c4-aed0-4fbe-8bf6-52793763ac68"],
Cell[CellGroupData[{
Cell[1136983, 24721, 247, 5, 28, "Input",ExpressionUUID->"3f6d42bc-ade3-4375-9849-9bc2c31ae679"],
Cell[1137233, 24728, 54891, 926, 243, "Output",ExpressionUUID->"09fbd031-a7f9-4e15-9fa7-04cfbf1d2b97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1192161, 25659, 232, 5, 28, "Input",ExpressionUUID->"e64fd1ed-0026-4c6d-b53d-24f741943a34"],
Cell[1192396, 25666, 181, 3, 32, "Output",ExpressionUUID->"92fa1395-1c4e-4e03-9abd-1169533ba984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1192614, 25674, 556, 15, 28, "Input",ExpressionUUID->"3d3f2818-4b28-4f89-94be-4ee23a124416"],
Cell[1193173, 25691, 179, 3, 32, "Output",ExpressionUUID->"804657c7-d7af-4c58-bd2f-3e4a5de718cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1193389, 25699, 236, 5, 28, "Input",ExpressionUUID->"9dbbb9da-3064-44f9-a4f0-ea23133dd636"],
Cell[1193628, 25706, 173, 3, 32, "Output",ExpressionUUID->"a552779d-5cc6-41ec-a3e8-fb5948727c04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1193838, 25714, 536, 15, 28, "Input",ExpressionUUID->"0943396a-1b54-4cda-9964-7128b88bd1e8"],
Cell[1194377, 25731, 190, 4, 32, "Output",ExpressionUUID->"b5e76905-359f-42a3-9be9-d267b7e0a53c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1194604, 25740, 260, 6, 28, "Input",ExpressionUUID->"e9be0699-1b1a-4282-9628-9bb67fc7e859"],
Cell[1194867, 25748, 225, 4, 32, "Output",ExpressionUUID->"ae5d0762-2cf4-42b8-b907-7c88e052d55e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195129, 25757, 534, 15, 28, "Input",ExpressionUUID->"5d4b1a60-daaf-4d76-a2ff-e9e0d6a7adfe"],
Cell[1195666, 25774, 216, 4, 32, "Output",ExpressionUUID->"929c3b81-5fa5-4d78-b0c5-82cf1c307de0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195919, 25783, 238, 5, 28, "Input",ExpressionUUID->"13dc50f3-4efa-4bab-be05-489cb4ee9f8e"],
Cell[1196160, 25790, 170, 3, 32, "Output",ExpressionUUID->"dde0f915-bf53-45ed-a009-6818b3ec854f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1196367, 25798, 589, 16, 28, "Input",ExpressionUUID->"b15c50f3-d8a4-4067-950a-f61c4e3967c4"],
Cell[1196959, 25816, 190, 4, 32, "Output",ExpressionUUID->"0aeb48af-69d7-4fa0-a3e6-87abf24521c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1197186, 25825, 278, 7, 28, "Input",ExpressionUUID->"d4758912-d799-49ae-a35a-f4c2e14b6cff"],
Cell[1197467, 25834, 198, 3, 32, "Output",ExpressionUUID->"d72a4ffe-af1e-4f79-bbd0-0749b5e17502"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1197702, 25842, 594, 17, 28, "Input",ExpressionUUID->"d563cbc2-3d04-4b6d-b8d2-7c38980e2d98"],
Cell[1198299, 25861, 214, 4, 32, "Output",ExpressionUUID->"f3f3797d-efa0-4d72-bdaf-26027eb7f505"]
}, Open  ]]
}, Open  ]]
}
]
*)

